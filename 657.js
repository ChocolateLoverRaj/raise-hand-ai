/*! For license information please see 657.js.LICENSE.txt */
(self.webpackChunkhand_raised=self.webpackChunkhand_raised||[]).push([[657],{5860:function(e,t,n){(function(){"use strict";var e;function t(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var r="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,n){return e==Array.prototype||e==Object.prototype||(e[t]=n.value),e},a=function(e){e=["object"==typeof globalThis&&globalThis,e,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof n.g&&n.g];for(var t=0;t<e.length;++t){var r=e[t];if(r&&r.Math==Math)return r}throw Error("Cannot find global object")}(this);function s(e,t){if(t)e:{var n=a;e=e.split(".");for(var s=0;s<e.length-1;s++){var o=e[s];if(!(o in n))break e;n=n[o]}(t=t(s=n[e=e[e.length-1]]))!=s&&null!=t&&r(n,e,{configurable:!0,writable:!0,value:t})}}function o(e){return(e={next:e})[Symbol.iterator]=function(){return this},e}function i(e){var n="undefined"!=typeof Symbol&&Symbol.iterator&&e[Symbol.iterator];return n?n.call(e):{next:t(e)}}function u(e){if(!(e instanceof Array)){e=i(e);for(var t,n=[];!(t=e.next()).done;)n.push(t.value);e=n}return e}s("Symbol",(function(e){function t(e,t){this.g=e,r(this,"description",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.g};var n="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",a=0;return function e(r){if(this instanceof e)throw new TypeError("Symbol is not a constructor");return new t(n+(r||"")+"_"+a++,r)}})),s("Symbol.iterator",(function(e){if(e)return e;e=Symbol("Symbol.iterator");for(var n="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),s=0;s<n.length;s++){var i=a[n[s]];"function"==typeof i&&"function"!=typeof i.prototype[e]&&r(i.prototype,e,{configurable:!0,writable:!0,value:function(){return o(t(this))}})}return e}));var l,c="function"==typeof Object.create?Object.create:function(e){function t(){}return t.prototype=e,new t};if("function"==typeof Object.setPrototypeOf)l=Object.setPrototypeOf;else{var p;e:{var h={};try{h.__proto__={a:!0},p=h.a;break e}catch(e){}p=!1}l=p?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw new TypeError(e+" is not extensible");return e}:null}var d=l;function f(e,t){if(e.prototype=c(t.prototype),e.prototype.constructor=e,d)d(e,t);else for(var n in t)if("prototype"!=n)if(Object.defineProperties){var r=Object.getOwnPropertyDescriptor(t,n);r&&Object.defineProperty(e,n,r)}else e[n]=t[n];e.ea=t.prototype}function m(){this.l=!1,this.i=null,this.h=void 0,this.g=1,this.s=this.m=0,this.j=null}function g(e){if(e.l)throw new TypeError("Generator is already running");e.l=!0}function y(e,t){e.j={U:t,V:!0},e.g=e.m||e.s}function x(e,t,n){return e.g=n,{value:t}}function b(e){this.g=new m,this.h=e}function v(e,t,n,r){try{var a=t.call(e.g.i,n);if(!(a instanceof Object))throw new TypeError("Iterator result "+a+" is not an object");if(!a.done)return e.g.l=!1,a;var s=a.value}catch(t){return e.g.i=null,y(e.g,t),w(e)}return e.g.i=null,r.call(e.g,s),w(e)}function w(e){for(;e.g.g;)try{var t=e.h(e.g);if(t)return e.g.l=!1,{value:t.value,done:!1}}catch(t){e.g.h=void 0,y(e.g,t)}if(e.g.l=!1,e.g.j){if(t=e.g.j,e.g.j=null,t.V)throw t.U;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function k(e){this.next=function(t){return g(e.g),e.g.i?t=v(e,e.g.i.next,t,e.g.o):(e.g.o(t),t=w(e)),t},this.throw=function(t){return g(e.g),e.g.i?t=v(e,e.g.i.throw,t,e.g.o):(y(e.g,t),t=w(e)),t},this.return=function(t){return function(e,t){g(e.g);var n=e.g.i;return n?v(e,"return"in n?n.return:function(e){return{value:e,done:!0}},t,e.g.return):(e.g.return(t),w(e))}(e,t)},this[Symbol.iterator]=function(){return this}}function S(e,t){return t=new k(new b(t)),d&&e.prototype&&d(t,e.prototype),t}m.prototype.o=function(e){this.h=e},m.prototype.return=function(e){this.j={return:e},this.g=this.s};var T="function"==typeof Object.assign?Object.assign:function(e,t){for(var n=1;n<arguments.length;n++){var r=arguments[n];if(r)for(var a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e};s("Object.assign",(function(e){return e||T})),s("Promise",(function(e){function t(e){this.h=0,this.i=void 0,this.g=[],this.o=!1;var t=this.j();try{e(t.resolve,t.reject)}catch(e){t.reject(e)}}function n(){this.g=null}function r(e){return e instanceof t?e:new t((function(t){t(e)}))}if(e)return e;n.prototype.h=function(e){if(null==this.g){this.g=[];var t=this;this.i((function(){t.l()}))}this.g.push(e)};var s=a.setTimeout;n.prototype.i=function(e){s(e,0)},n.prototype.l=function(){for(;this.g&&this.g.length;){var e=this.g;this.g=[];for(var t=0;t<e.length;++t){var n=e[t];e[t]=null;try{n()}catch(e){this.j(e)}}}this.g=null},n.prototype.j=function(e){this.i((function(){throw e}))},t.prototype.j=function(){function e(e){return function(r){n||(n=!0,e.call(t,r))}}var t=this,n=!1;return{resolve:e(this.C),reject:e(this.l)}},t.prototype.C=function(e){if(e===this)this.l(new TypeError("A Promise cannot resolve to itself"));else if(e instanceof t)this.F(e);else{e:switch(typeof e){case"object":var n=null!=e;break e;case"function":n=!0;break e;default:n=!1}n?this.u(e):this.m(e)}},t.prototype.u=function(e){var t=void 0;try{t=e.then}catch(e){return void this.l(e)}"function"==typeof t?this.G(t,e):this.m(e)},t.prototype.l=function(e){this.s(2,e)},t.prototype.m=function(e){this.s(1,e)},t.prototype.s=function(e,t){if(0!=this.h)throw Error("Cannot settle("+e+", "+t+"): Promise already settled in state"+this.h);this.h=e,this.i=t,2===this.h&&this.D(),this.A()},t.prototype.D=function(){var e=this;s((function(){if(e.B()){var t=a.console;void 0!==t&&t.error(e.i)}}),1)},t.prototype.B=function(){if(this.o)return!1;var e=a.CustomEvent,t=a.Event,n=a.dispatchEvent;return void 0===n||("function"==typeof e?e=new e("unhandledrejection",{cancelable:!0}):"function"==typeof t?e=new t("unhandledrejection",{cancelable:!0}):(e=a.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,e),e.promise=this,e.reason=this.i,n(e))},t.prototype.A=function(){if(null!=this.g){for(var e=0;e<this.g.length;++e)o.h(this.g[e]);this.g=null}};var o=new n;return t.prototype.F=function(e){var t=this.j();e.J(t.resolve,t.reject)},t.prototype.G=function(e,t){var n=this.j();try{e.call(t,n.resolve,n.reject)}catch(e){n.reject(e)}},t.prototype.then=function(e,n){function r(e,t){return"function"==typeof e?function(t){try{a(e(t))}catch(e){s(e)}}:t}var a,s,o=new t((function(e,t){a=e,s=t}));return this.J(r(e,a),r(n,s)),o},t.prototype.catch=function(e){return this.then(void 0,e)},t.prototype.J=function(e,t){function n(){switch(r.h){case 1:e(r.i);break;case 2:t(r.i);break;default:throw Error("Unexpected state: "+r.h)}}var r=this;null==this.g?o.h(n):this.g.push(n),this.o=!0},t.resolve=r,t.reject=function(e){return new t((function(t,n){n(e)}))},t.race=function(e){return new t((function(t,n){for(var a=i(e),s=a.next();!s.done;s=a.next())r(s.value).J(t,n)}))},t.all=function(e){var n=i(e),a=n.next();return a.done?r([]):new t((function(e,t){function s(t){return function(n){o[t]=n,0==--i&&e(o)}}var o=[],i=0;do{o.push(void 0),i++,r(a.value).J(s(o.length-1),t),a=n.next()}while(!a.done)}))},t})),s("Object.is",(function(e){return e||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}})),s("Array.prototype.includes",(function(e){return e||function(e,t){var n=this;n instanceof String&&(n=String(n));var r=n.length;for(0>(t=t||0)&&(t=Math.max(t+r,0));t<r;t++){var a=n[t];if(a===e||Object.is(a,e))return!0}return!1}})),s("String.prototype.includes",(function(e){return e||function(e,t){if(null==this)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(e instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return-1!==this.indexOf(e,t||0)}})),s("Array.prototype.keys",(function(e){return e||function(){return function(e,t){e instanceof String&&(e+="");var n=0,r=!1,a={next:function(){if(!r&&n<e.length){var a=n++;return{value:t(a,e[a]),done:!1}}return r=!0,{done:!0,value:void 0}}};return a[Symbol.iterator]=function(){return a},a}(this,(function(e){return e}))}}));var I=this||self;function N(e,t){e=e.split(".");var n,r=I;e[0]in r||void 0===r.execScript||r.execScript("var "+e[0]);for(;e.length&&(n=e.shift());)e.length||void 0===t?r=r[n]&&r[n]!==Object.prototype[n]?r[n]:r[n]={}:r[n]=t}function C(e,t){return t=String.fromCharCode.apply(null,t),null==e?t:e+t}var $,E,_="undefined"!=typeof TextDecoder,R="undefined"!=typeof TextEncoder;function A(e){if(R)e=(E||(E=new TextEncoder)).encode(e);else{var t=void 0;t=void 0!==t&&t;for(var n=0,r=new Uint8Array(3*e.length),a=0;a<e.length;a++){var s=e.charCodeAt(a);if(128>s)r[n++]=s;else{if(2048>s)r[n++]=s>>6|192;else{if(55296<=s&&57343>=s){if(56319>=s&&a<e.length){var o=e.charCodeAt(++a);if(56320<=o&&57343>=o){s=1024*(s-55296)+o-56320+65536,r[n++]=s>>18|240,r[n++]=s>>12&63|128,r[n++]=s>>6&63|128,r[n++]=63&s|128;continue}a--}if(t)throw Error("Found an unpaired surrogate");s=65533}r[n++]=s>>12|224,r[n++]=s>>6&63|128}r[n++]=63&s|128}}e=r.subarray(0,n)}return e}var O={},D=null;function F(e,t){void 0===t&&(t=0),M(),t=O[t];for(var n=Array(Math.floor(e.length/3)),r=t[64]||"",a=0,s=0;a<e.length-2;a+=3){var o=e[a],i=e[a+1],u=e[a+2],l=t[o>>2];o=t[(3&o)<<4|i>>4],i=t[(15&i)<<2|u>>6],u=t[63&u],n[s++]=l+o+i+u}switch(l=0,u=r,e.length-a){case 2:u=t[(15&(l=e[a+1]))<<2]||r;case 1:e=e[a],n[s]=t[e>>2]+t[(3&e)<<4|l>>4]+u+r}return n.join("")}function M(){if(!D){D={};for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),t=["+/=","+/","-_=","-_.","-_"],n=0;5>n;n++){var r=e.concat(t[n].split(""));O[n]=r;for(var a=0;a<r.length;a++){var s=r[a];void 0===D[s]&&(D[s]=a)}}}}var B,P="function"==typeof Uint8Array.prototype.slice;function L(e,t,n){return t===n?B||(B=new Uint8Array(0)):P?e.slice(t,n):new Uint8Array(e.subarray(t,n))}var V=0;function U(e,t){t=void 0!==(t=void 0===t?{}:t).v&&t.v,this.h=null,this.g=this.i=this.j=0,this.l=!1,this.v=t,e&&W(this,e)}function W(e,t){t=t.constructor===Uint8Array?t:t.constructor===ArrayBuffer||t.constructor===Array?new Uint8Array(t):t.constructor===String?function(e){var t=e.length,n=3*t/4;n%3?n=Math.floor(n):-1!="=.".indexOf(e[t-1])&&(n=-1!="=.".indexOf(e[t-2])?n-2:n-1);var r=new Uint8Array(n),a=0;return function(e,t){function n(t){for(;r<e.length;){var n=e.charAt(r++),a=D[n];if(null!=a)return a;if(!/^[\s\xa0]*$/.test(n))throw Error("Unknown base64 encoding at char: "+n)}return t}M();for(var r=0;;){var a=n(-1),s=n(0),o=n(64),i=n(64);if(64===i&&-1===a)break;t(a<<2|s>>4),64!=o&&(t(s<<4&240|o>>2),64!=i&&t(o<<6&192|i))}}(e,(function(e){r[a++]=e})),r.subarray(0,a)}(t):t instanceof Uint8Array?new Uint8Array(t.buffer,t.byteOffset,t.byteLength):new Uint8Array(0),e.h=t,e.j=0,e.i=e.h.length,e.g=e.j}function z(e){var t=e.h,n=t[e.g],r=127&n;return 128>n?(e.g+=1,r):(r|=(127&(n=t[e.g+1]))<<7,128>n?(e.g+=2,r):(r|=(127&(n=t[e.g+2]))<<14,128>n?(e.g+=3,r):(r|=(127&(n=t[e.g+3]))<<21,128>n?(e.g+=4,r):(r|=(15&(n=t[e.g+4]))<<28,128>n?(e.g+=5,r>>>0):(e.g+=5,128<=t[e.g++]&&128<=t[e.g++]&&128<=t[e.g++]&&128<=t[e.g++]&&e.g++,r)))))}function G(e){var t=e.h[e.g],n=e.h[e.g+1],r=e.h[e.g+2],a=e.h[e.g+3];return e.g+=4,e=2*((n=(t<<0|n<<8|r<<16|a<<24)>>>0)>>31)+1,t=n>>>23&255,n&=8388607,255==t?n?NaN:1/0*e:0==t?e*Math.pow(2,-149)*n:e*Math.pow(2,t-150)*(n+Math.pow(2,23))}U.prototype.reset=function(){this.g=this.j};var H=[];function j(){this.g=new Uint8Array(64),this.h=0}function X(e,t){for(;127<t;)e.push(127&t|128),t>>>=7;e.push(t)}function K(e){var t={},n=void 0!==t.N&&t.N;this.o={v:void 0!==t.v&&t.v},this.N=n,t=this.o,H.length?(n=H.pop(),t&&(n.v=t.v),e&&W(n,e),e=n):e=new U(e,t),this.g=e,this.m=this.g.g,this.h=this.i=this.l=-1,this.j=!1}function q(e){var t=e.g;if((t=t.g==t.i)||(t=e.j)||(t=(t=e.g).l||0>t.g||t.g>t.i),t)return!1;e.m=e.g.g;var n=7&(t=z(e.g));return 0!=n&&5!=n&&1!=n&&2!=n&&3!=n&&4!=n?(e.j=!0,!1):(e.i=t,e.l=t>>>3,e.h=n,!0)}function Y(e){switch(e.h){case 0:if(0!=e.h)Y(e);else{for(e=e.g;128&e.h[e.g];)e.g++;e.g++}break;case 1:1!=e.h?Y(e):(e=e.g).g+=8;break;case 2:if(2!=e.h)Y(e);else{var t=z(e.g);(e=e.g).g+=t}break;case 5:5!=e.h?Y(e):(e=e.g).g+=4;break;case 3:for(t=e.l;;){if(!q(e)){e.j=!0;break}if(4==e.h){e.l!=t&&(e.j=!0);break}Y(e)}break;default:e.j=!0}}function Q(e,t,n){var r=e.g.i,a=z(e.g),s=e.g.g+a;if(e.g.i=s,n(t,e),0!=(n=s-e.g.g))throw Error("Message parsing ended unexpectedly. Expected to read "+a+" bytes, instead read "+(a-n)+" bytes, either the data ended unexpectedly or the message misreported its own length");return e.g.g=s,e.g.i=r,t}function Z(e){var t,n=z(e.g),r=(e=e.g).g;if(e.g+=n,e=e.h,_)(t=$)||(t=$=new TextDecoder("utf-8",{fatal:!1})),t=t.decode(e.subarray(r,r+n));else{n=r+n;for(var a,s,o,i=[],u=null;r<n;)128>(a=e[r++])?i.push(a):224>a?r>=n?i.push(65533):(s=e[r++],194>a||128!=(192&s)?(r--,i.push(65533)):i.push((31&a)<<6|63&s)):240>a?r>=n-1?i.push(65533):128!=(192&(s=e[r++]))||224===a&&160>s||237===a&&160<=s||128!=(192&(t=e[r++]))?(r--,i.push(65533)):i.push((15&a)<<12|(63&s)<<6|63&t):244>=a?r>=n-2?i.push(65533):128!=(192&(s=e[r++]))||0!=s-144+(a<<28)>>30||128!=(192&(t=e[r++]))||128!=(192&(o=e[r++]))?(r--,i.push(65533)):(a=(7&a)<<18|(63&s)<<12|(63&t)<<6|63&o,a-=65536,i.push(55296+(a>>10&1023),56320+(1023&a))):i.push(65533),8192<=i.length&&(u=C(u,i),i.length=0);t=C(u,i)}return t}function J(){this.h=[],this.i=0,this.g=new j}function ee(e,t){0!==t.length&&(e.h.push(t),e.i+=t.length)}function te(e){var t=e.i+e.g.length();if(0===t)return new Uint8Array(0);t=new Uint8Array(t);for(var n=e.h,r=n.length,a=0,s=0;s<r;s++){var o=n[s];0!==o.length&&(t.set(o,a),a+=o.length)}return 0!==(r=(n=e.g).h)&&(t.set(n.g.subarray(0,r),a),n.h=0),e.h=[t],t}function ne(e,t,n){if(null!=n){X(e.g,8*t+5),e=e.g;var r=n;0===(r=(n=0>r?1:0)?-r:r)?V=0<1/r?0:2147483648:isNaN(r)?V=2147483647:34028234663852886e22<r?V=(n<<31|2139095040)>>>0:11754943508222875e-54>r?(r=Math.round(r/Math.pow(2,-149)),V=(n<<31|r)>>>0):(t=Math.floor(Math.log(r)/Math.LN2),r*=Math.pow(2,-t),16777216<=(r=Math.round(8388608*r))&&++t,V=(n<<31|t+127<<23|8388607&r)>>>0),n=V,e.push(n>>>0&255),e.push(n>>>8&255),e.push(n>>>16&255),e.push(n>>>24&255)}}j.prototype.push=function(e){if(!(this.h+1<this.g.length)){var t=this.g;this.g=new Uint8Array(Math.ceil(1+2*this.g.length)),this.g.set(t)}this.g[this.h++]=e},j.prototype.length=function(){return this.h},j.prototype.end=function(){var e=this.g,t=this.h;return this.h=0,L(e,0,t)},K.prototype.reset=function(){this.g.reset(),this.h=this.l=-1};var re="function"==typeof Uint8Array;function ae(e,t,n){if(null!=e)return"object"==typeof e?re&&e instanceof Uint8Array?n(e):se(e,t,n):t(e)}function se(e,t,n){if(Array.isArray(e)){for(var r=Array(e.length),a=0;a<e.length;a++)r[a]=ae(e[a],t,n);return Array.isArray(e)&&e.W&&le(r),r}for(a in r={},e)r[a]=ae(e[a],t,n);return r}function oe(e){return"number"==typeof e?isFinite(e)?e:String(e):e}var ie,ue={W:{value:!0,configurable:!0}};function le(e){return Array.isArray(e)&&!Object.isFrozen(e)&&Object.defineProperties(e,ue),e}function ce(e,t,n){var r=ie;if(ie=null,e||(e=r),r=this.constructor.ca,e||(e=r?[r]:[]),this.j=r?0:-1,this.i=null,this.g=e,e=(r=this.g.length)-1,!r||null===(r=this.g[e])||"object"!=typeof r||Array.isArray(r)||re&&r instanceof Uint8Array?void 0!==t&&-1<t?(this.l=Math.max(t,e+1-this.j),this.h=null):this.l=Number.MAX_VALUE:(this.l=e-this.j,this.h=r),n)for(t=0;t<n.length;t++)(e=n[t])<this.l?(e+=this.j,(r=this.g[e])?le(r):this.g[e]=pe):(he(this),(r=this.h[e])?le(r):this.h[e]=pe)}var pe=Object.freeze(le([]));function he(e){var t=e.l+e.j;e.g[t]||(e.h=e.g[t]={})}function de(e,t,n){return-1===t?null:void 0!==n&&n||t>=e.l?e.h?e.h[t]:void 0:e.g[t+e.j]}function fe(e){var t=void 0!==t&&t,n=de(e,1,t);return null==n&&(n=pe),n===pe&&ge(e,1,n=le([]),t),n}function me(e,t,n){return null==(e=null==(e=de(e,t))?e:+e)?void 0===n?0:n:e}function ge(e,t,n,r){void 0!==r&&r||t>=e.l?(he(e),e.h[t]=n):e.g[t+e.j]=n}function ye(e,t){e.i||(e.i={});var n=e.i[1];if(!n){var r=fe(e);n=[];for(var a=0;a<r.length;a++)n[a]=new t(r[a]);e.i[1]=n}return n}function xe(e,t,n,r){var a=ye(e,n);t=t||new n,e=fe(e),null!=r?(a.splice(r,0,t),e.splice(r,0,be(t,!1))):(a.push(t),e.push(be(t,!1)))}function be(e,t){if(e.i)for(var n in e.i){var r=e.i[n];if(Array.isArray(r))for(var a=0;a<r.length;a++)r[a]&&be(r[a],t);else r&&be(r,t)}return e.g}function ve(e,t){return null==(e=de(e,t))?0:e}function we(e,t){return null==(e=de(e,t))?"":e}function ke(e,t){if(e=e.m){ee(t,t.g.end());for(var n=0;n<e.length;n++)ee(t,e[n])}}function Se(e,t){if(4==t.h)return!1;var n=t.m;return Y(t),t.N||(t=L(t.g.h,n,t.g.g),(n=e.m)?n.push(t):e.m=[t]),!0}function Te(e,t){var n=void 0;return new(n||(n=Promise))((function(r,a){function s(e){try{i(t.next(e))}catch(e){a(e)}}function o(e){try{i(t.throw(e))}catch(e){a(e)}}function i(e){e.done?r(e.value):new n((function(t){t(e.value)})).then(s,o)}i((t=t.apply(e,void 0)).next())}))}function Ie(e){ce.call(this,e)}function Ne(e,t){for(;q(t);)switch(t.i){case 8:var n=z(t.g);ge(e,1,n);break;case 21:ge(e,2,n=G(t.g));break;case 26:ge(e,3,n=Z(t));break;case 34:ge(e,4,n=Z(t));break;default:if(!Se(e,t))return e}return e}function Ce(e){ce.call(this,e,-1,$e)}ce.prototype.toJSON=function(){return se(be(this,!1),oe,F)},ce.prototype.toString=function(){return be(this,!1).toString()},f(Ie,ce),f(Ce,ce),Ce.prototype.addClassification=function(e,t){return xe(this,e,Ie,t),this};var $e=[1];function Ee(e){ce.call(this,e)}function _e(e,t){for(;q(t);)switch(t.i){case 13:var n=G(t.g);ge(e,1,n);break;case 21:ge(e,2,n=G(t.g));break;case 29:ge(e,3,n=G(t.g));break;case 37:ge(e,4,n=G(t.g));break;case 45:ge(e,5,n=G(t.g));break;default:if(!Se(e,t))return e}return e}function Re(e){ce.call(this,e,-1,Ae)}f(Ee,ce),f(Re,ce);var Ae=[1];function Oe(e){ce.call(this,e)}function De(e,t,n){if(n=e.createShader(0===n?e.VERTEX_SHADER:e.FRAGMENT_SHADER),e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+e.getShaderInfoLog(n));return n}function Fe(e){return ye(e,Ie).map((function(e){return{index:ve(e,1),Y:me(e,2),label:null!=de(e,3)?we(e,3):void 0,displayName:null!=de(e,4)?we(e,4):void 0}}))}function Me(e){return{x:me(e,1),y:me(e,2),z:me(e,3),visibility:null!=de(e,4)?me(e,4):void 0}}function Be(e){e:{var t=new Re;for(e=new K(e);q(e);)if(10===e.i)xe(t,Q(e,new Ee,_e),Ee,void 0);else if(!Se(t,e))break e}return ye(t,Ee).map(Me)}function Pe(e,t){this.h=e,this.g=t,this.l=0}function Le(e,t,n){return function(e,t){var n=e.g;if(void 0===e.m){var r=De(n,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),a=De(n,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),s=n.createProgram();if(n.attachShader(s,r),n.attachShader(s,a),n.linkProgram(s),!n.getProgramParameter(s,n.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+n.getProgramInfoLog(s));r=e.m=s,n.useProgram(r),a=n.getUniformLocation(r,"sampler0"),e.j={I:n.getAttribLocation(r,"aVertex"),H:n.getAttribLocation(r,"aTex"),da:a},e.s=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.s),n.enableVertexAttribArray(e.j.I),n.vertexAttribPointer(e.j.I,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),e.o=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,e.o),n.enableVertexAttribArray(e.j.H),n.vertexAttribPointer(e.j.H,2,n.FLOAT,!1,0,0),n.bufferData(n.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),n.uniform1i(a,0)}r=e.j,n.useProgram(e.m),n.canvas.width=t.width,n.canvas.height=t.height,n.viewport(0,0,t.width,t.height),n.activeTexture(n.TEXTURE0),e.h.bindTexture2d(t.glName),n.enableVertexAttribArray(r.I),n.bindBuffer(n.ARRAY_BUFFER,e.s),n.vertexAttribPointer(r.I,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(r.H),n.bindBuffer(n.ARRAY_BUFFER,e.o),n.vertexAttribPointer(r.H,2,n.FLOAT,!1,0,0),n.bindFramebuffer(n.DRAW_FRAMEBUFFER?n.DRAW_FRAMEBUFFER:n.FRAMEBUFFER,null),n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT),n.colorMask(!0,!0,!0,!0),n.drawArrays(n.TRIANGLE_FAN,0,4),n.disableVertexAttribArray(r.I),n.disableVertexAttribArray(r.H),n.bindBuffer(n.ARRAY_BUFFER,null),e.h.bindTexture2d(0)}(e,t),"function"==typeof e.g.canvas.transferToImageBitmap?Promise.resolve(e.g.canvas.transferToImageBitmap()):n?Promise.resolve(e.g.canvas):"function"==typeof createImageBitmap?createImageBitmap(e.g.canvas):(void 0===e.i&&(e.i=document.createElement("canvas")),new Promise((function(t){e.i.height=e.g.canvas.height,e.i.width=e.g.canvas.width,e.i.getContext("2d",{}).drawImage(e.g.canvas,0,0,e.g.canvas.width,e.g.canvas.height),t(e.i)})))}function Ve(e){this.g=e}f(Oe,ce);var Ue=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function We(e,t){return t+e}function ze(e,t){window[e]=t}function Ge(e){if(this.g=e,this.listeners={},this.j={},this.F={},this.m={},this.s={},this.G=this.o=this.R=!0,this.C=Promise.resolve(),this.P="",this.B={},this.locateFile=e&&e.locateFile||We,"object"==typeof window)var t=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else{if("undefined"==typeof location)throw Error("solutions can only be loaded on a web page or in a web worker");t=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/"}if(this.S=t,e.options)for(var n=(t=i(Object.keys(e.options))).next();!n.done;n=t.next()){n=n.value;var r=e.options[n].default;void 0!==r&&(this.j[n]="function"==typeof r?r():r)}}function He(e,t){return Te(e,(function e(){var n,r,a=this;return S(e,(function(e){return t in a.F?e.return(a.F[t]):(n=a.locateFile(t,""),r=fetch(n).then((function(e){return e.arrayBuffer()})),a.F[t]=r,e.return(r))}))}))}function je(e,t){for(var n=t.name||"$",r=[].concat(u(t.wants)),a=new e.h.StringList,s=i(t.wants),o=s.next();!o.done;o=s.next())a.push_back(o.value);s=e.h.PacketListener.implement({onResults:function(a){for(var s={},o=0;o<t.wants.length;++o)s[r[o]]=a.get(o);var u=e.listeners[n];u&&(e.C=function(e,t,n){return Te(e,(function e(){var r,a,s,o,u,l,c,p,h,d,f,m,g,y,b=this;return S(e,(function(e){switch(e.g){case 1:if(!n)return e.return(t);for(r={},a=0,s=i(Object.keys(n)),o=s.next();!o.done;o=s.next())u=o.value,"string"!=typeof(l=n[u])&&"texture"===l.type&&void 0!==t[l.stream]&&++a;1<a&&(b.G=!1),c=i(Object.keys(n)),o=c.next();case 2:if(o.done){e.g=4;break}if(p=o.value,"string"==typeof(h=n[p]))return g=r,y=p,x(e,function(e,t,n){return Te(e,(function e(){var r,a=this;return S(e,(function(e){return"number"==typeof n||n instanceof Uint8Array||n instanceof a.h.Uint8BlobList?e.return(n):n instanceof a.h.Texture2dDataOut?((r=a.s[t])||(r=new Pe(a.h,a.D),a.s[t]=r),e.return(Le(r,n,a.G))):e.return(void 0)}))}))}(b,p,t[h]),14);if(d=t[h.stream],"detection_list"===h.type){if(d){for(var v=d.getRectList(),w=d.getLandmarksList(),k=d.getClassificationsList(),T=[],I=0;I<v.size();++I){var N=v.get(I);e:{var C=new Oe;for(N=new K(N);q(N);)switch(N.i){case 13:var $=G(N.g);ge(C,1,$);break;case 21:ge(C,2,$=G(N.g));break;case 29:ge(C,3,$=G(N.g));break;case 37:ge(C,4,$=G(N.g));break;case 45:ge(C,5,$=G(N.g));break;case 48:for(var E=N.g,_=128,R=0,A=$=0;4>A&&128<=_;A++)R|=(127&(_=E.h[E.g++]))<<7*A;if(128<=_&&(R|=(127&(_=E.h[E.g++]))<<28,$|=(127&_)>>4),128<=_)for(A=0;5>A&&128<=_;A++)$|=(127&(_=E.h[E.g++]))<<7*A+3;128>_?(E=R>>>0,($=2147483648&(_=$>>>0))&&(_=~_>>>0,0==(E=1+~E>>>0)&&(_=_+1>>>0)),E=4294967296*_+(E>>>0),$=$?-E:E):(E.l=!0,$=void 0),ge(C,6,$);break;default:if(!Se(C,N))break e}}C={Z:me(C,1),$:me(C,2),height:me(C,3),width:me(C,4),rotation:me(C,5,0),X:ve(C,6)},N=Be(w.get(I)),E=k.get(I);e:for($=new Ce,E=new K(E);q(E);)if(10===E.i)$.addClassification(Q(E,new Ie,Ne));else if(!Se($,E))break e;C={T:C,O:N,M:Fe($)},T.push(C)}v=T}else v=[];r[p]=v,e.g=7;break}if("proto_list"===h.type){if(d){for(v=Array(d.size()),w=0;w<d.size();w++)v[w]=d.get(w);d.delete()}else v=[];r[p]=v,e.g=7;break}if(void 0===d){e.g=3;break}if("float_list"===h.type){r[p]=d,e.g=7;break}if("proto"===h.type){r[p]=d,e.g=7;break}if("texture"!==h.type)throw Error("Unknown output config type: '"+h.type+"'");return(f=b.s[p])||(f=new Pe(b.h,b.D),b.s[p]=f),x(e,Le(f,d,b.G),13);case 13:m=e.h,r[p]=m;case 7:h.transform&&r[p]&&(r[p]=h.transform(r[p])),e.g=3;break;case 14:g[y]=e.h;case 3:o=c.next(),e.g=2;break;case 4:return e.return(r)}}))}))}(e,s,t.outs).then((function(n){n=u(n);for(var a=0;a<t.wants.length;++a){var o=s[r[a]];"object"==typeof o&&o.hasOwnProperty&&o.hasOwnProperty("delete")&&o.delete()}n&&(e.C=n)})))}}),e.i.attachMultiListener(a,s),a.delete()}function Xe(e){switch(void 0===e&&(e=0),e){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function Ke(e){var t=this;e=e||{},this.g=new Ge({locateFile:e.locateFile,files:function(e){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:Xe(e.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:Be},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:Be},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(e){return Te(t,(function t(){var n,r,a,s=this;return S(t,(function(t){return 1==t.g?(n=Xe(e),r="third_party/mediapipe/modules/pose_landmark/"+n,x(t,He(s.g,n),2)):(a=t.h,s.g.overrideFile(r,a),t.return(!0))}))}))}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}(e=Ge.prototype).close=function(){return this.i&&this.i.delete(),Promise.resolve()},e.reset=function(){return Te(this,(function e(){var t=this;return S(e,(function(e){t.i&&(t.i.reset(),t.m={},t.s={}),e.g=0}))}))},e.setOptions=function(e,t){var n=this;if(t=t||this.g.options){for(var r=[],a=[],s={},o=i(Object.keys(e)),u=o.next();!u.done;s={K:s.K,L:s.L},u=o.next()){var l=u.value;l in this.j&&this.j[l]===e[l]||(this.j[l]=e[l],void 0!==(u=t[l])&&(u.onChange&&(s.K=u.onChange,s.L=e[l],r.push(function(e){return function(){return Te(n,(function t(){var n=this;return S(t,(function(t){if(1==t.g)return x(t,e.K(e.L),2);!0===t.h&&(n.o=!0),t.g=0}))}))}}(s))),u.graphOptionXref&&(l={valueNumber:1===u.type?e[l]:0,valueBoolean:0===u.type&&e[l],valueString:2===u.type?e[l]:""},u=Object.assign(Object.assign(Object.assign({},{calculatorName:"",calculatorIndex:0}),u.graphOptionXref),l),a.push(u))))}0===r.length&&0===a.length||(this.o=!0,this.A=(void 0===this.A?[]:this.A).concat(a),this.u=(void 0===this.u?[]:this.u).concat(r))}},e.initialize=function(){return Te(this,(function e(){var t=this;return S(e,(function(e){return 1==e.g?x(e,Te(t,(function e(){var t,n,r,a,s,o,i,l,c,p,h,d=this;return S(e,(function(e){switch(e.g){case 1:return t=d,d.R?(n=function(e,t){return void 0===e.g.files?[]:"function"==typeof e.g.files?e.g.files(t):e.g.files}(d,d.j),x(e,function(){return Te(this,(function e(){return S(e,(function(e){switch(e.g){case 1:return e.m=2,x(e,WebAssembly.instantiate(Ue),4);case 4:e.g=3,e.m=0;break;case 2:return e.m=0,e.j=null,e.return(!1);case 3:return e.return(!0)}}))}))}(),2)):e.return();case 2:if(r=e.h,"object"==typeof window)return ze("createMediapipeSolutionsWasm",{locateFile:d.locateFile}),ze("createMediapipeSolutionsPackedAssets",{locateFile:d.locateFile}),o=n.filter((function(e){return void 0!==e.data})),i=n.filter((function(e){return void 0===e.data})),l=Promise.all(o.map((function(e){var n=He(t,e.url);if(void 0!==e.path){var r=e.path;n=n.then((function(e){return t.overrideFile(r,e),Promise.resolve(e)}))}return n}))),c=Promise.all(i.map((function(e){return void 0===e.simd||e.simd&&r||!e.simd&&!r?function(e){var t=document.createElement("script");return t.setAttribute("src",e),t.setAttribute("crossorigin","anonymous"),new Promise((function(e){t.addEventListener("load",(function(){e()}),!1),t.addEventListener("error",(function(){e()}),!1),document.body.appendChild(t)}))}(t.locateFile(e.url,t.S)):Promise.resolve()}))).then((function(){return Te(t,(function e(){var t,n,r=this;return S(e,(function(e){if(1==e.g)return t=window.createMediapipeSolutionsWasm,n=window.createMediapipeSolutionsPackedAssets,x(e,t(n),2);r.h=e.h,e.g=0}))}))})),p=Te(t,(function e(){var t=this;return S(e,(function(e){return t.g.graph&&t.g.graph.url?e=x(e,He(t,t.g.graph.url),0):(e.g=0,e=void 0),e}))})),x(e,Promise.all([c,l,p]),7);if("function"!=typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return a=n.filter((function(e){return void 0===e.simd||e.simd&&r||!e.simd&&!r})).map((function(e){return t.locateFile(e.url,t.S)})),importScripts.apply(null,u(a)),x(e,createMediapipeSolutionsWasm(Module),6);case 6:d.h=e.h,d.l=new OffscreenCanvas(1,1),d.h.canvas=d.l,s=d.h.GL.createContext(d.l,{antialias:!1,alpha:!1,ba:"undefined"!=typeof WebGL2RenderingContext?2:1}),d.h.GL.makeContextCurrent(s),e.g=4;break;case 7:if(d.l=document.createElement("canvas"),!(h=d.l.getContext("webgl2",{}))&&!(h=d.l.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),e.return();d.D=h,d.h.canvas=d.l,d.h.createContext(d.l,!0,!0,{});case 4:d.i=new d.h.SolutionWasm,d.R=!1,e.g=0}}))})),2):3!=e.g?x(e,Te(t,(function e(){var t,n,r,a,s,o,u,l,c=this;return S(e,(function(e){if(1==e.g)return c.g.graph&&c.g.graph.url&&c.P===c.g.graph.url?e.return():(c.o=!0,c.g.graph&&c.g.graph.url?(c.P=c.g.graph.url,x(e,He(c,c.g.graph.url),3)):void(e.g=2));for(2!=e.g&&(t=e.h,c.i.loadGraph(t)),n=i(Object.keys(c.B)),r=n.next();!r.done;r=n.next())a=r.value,c.i.overrideFile(a,c.B[a]);if(c.B={},c.g.listeners)for(s=i(c.g.listeners),o=s.next();!o.done;o=s.next())u=o.value,je(c,u);l=c.j,c.j={},c.setOptions(l),e.g=0}))})),3):x(e,function(e){return Te(e,(function e(){var t,n,r,a,s,o,u=this;return S(e,(function(e){switch(e.g){case 1:if(!u.o)return e.return();if(!u.u){e.g=2;break}t=i(u.u),n=t.next();case 3:if(n.done){e.g=5;break}return x(e,(0,n.value)(),4);case 4:n=t.next(),e.g=3;break;case 5:u.u=void 0;case 2:if(u.A){for(r=new u.h.GraphOptionChangeRequestList,a=i(u.A),s=a.next();!s.done;s=a.next())o=s.value,r.push_back(o);u.i.changeOptions(r),r.delete(),u.A=void 0}u.o=!1,e.g=0}}))}))}(t),0)}))}))},e.overrideFile=function(e,t){this.i?this.i.overrideFile(e,t):this.B[e]=t},e.clearOverriddenFiles=function(){this.B={},this.i&&this.i.clearOverriddenFiles()},e.send=function(e,t){return Te(this,(function n(){var r,a,s,o,u,l,c,p,h,d=this;return S(n,(function(n){switch(n.g){case 1:return d.g.inputs?(r=1e3*(null==t?performance.now():t),x(n,d.C,2)):n.return();case 2:return x(n,d.initialize(),3);case 3:for(a=new d.h.PacketDataList,s=i(Object.keys(e)),o=s.next();!o.done;o=s.next())if(u=o.value,l=d.g.inputs[u]){e:{var f=d,m=e[u];switch(l.type){case"video":var g=f.m[l.stream];if(g||(g=new Pe(f.h,f.D),f.m[l.stream]=g),0===(f=g).l&&(f.l=f.h.createTexture()),"undefined"!=typeof HTMLVideoElement&&m instanceof HTMLVideoElement){var y=m.videoWidth;g=m.videoHeight}else"undefined"!=typeof HTMLImageElement&&m instanceof HTMLImageElement?(y=m.naturalWidth,g=m.naturalHeight):(y=m.width,g=m.height);g={glName:f.l,width:y,height:g},(y=f.g).canvas.width=g.width,y.canvas.height=g.height,y.activeTexture(y.TEXTURE0),f.h.bindTexture2d(f.l),y.texImage2D(y.TEXTURE_2D,0,y.RGBA,y.RGBA,y.UNSIGNED_BYTE,m),f.h.bindTexture2d(0),f=g;break e;case"detections":for((g=f.m[l.stream])||(g=new Ve(f.h),f.m[l.stream]=g),(f=g).data||(f.data=new f.g.DetectionListData),f.data.reset(m.length),g=0;g<m.length;++g){y=m[g];var b=f.data,v=b.setBoundingBox,w=g,k=y.T,S=new Oe;ge(S,1,k.Z),ge(S,2,k.$),ge(S,3,k.height),ge(S,4,k.width),ge(S,5,k.rotation),ge(S,6,k.X);var T=k=new J;ne(T,1,de(S,1)),ne(T,2,de(S,2)),ne(T,3,de(S,3)),ne(T,4,de(S,4)),ne(T,5,de(S,5));var I=de(S,6);if(null!=I&&null!=I){X(T.g,48);var N=T.g,C=I;I=0>C;var $=(C=Math.abs(C))>>>0;for(C=Math.floor((C-$)/4294967296),C>>>=0,I&&(C=~C>>>0,4294967295<($=1+(~$>>>0))&&($=0,4294967295<++C&&(C=0))),I=V=$,$=C;0<$||127<I;)N.push(127&I|128),I=(I>>>7|$<<25)>>>0,$>>>=7;N.push(I)}if(ke(S,T),k=te(k),v.call(b,w,k),y.O)for(b=0;b<y.O.length;++b)T=!!(S=y.O[b]).visibility,w=(v=f.data).addNormalizedLandmark,k=g,S=Object.assign(Object.assign({},S),{visibility:T?S.visibility:0}),ge(T=new Ee,1,S.x),ge(T,2,S.y),ge(T,3,S.z),S.visibility&&ge(T,4,S.visibility),ne(N=S=new J,1,de(T,1)),ne(N,2,de(T,2)),ne(N,3,de(T,3)),ne(N,4,de(T,4)),ne(N,5,de(T,5)),ke(T,N),S=te(S),w.call(v,k,S);if(y.M)for(b=0;b<y.M.length;++b){if(w=(v=f.data).addClassification,k=g,S=y.M[b],ge(T=new Ie,2,S.Y),S.index&&ge(T,1,S.index),S.label&&ge(T,3,S.label),S.displayName&&ge(T,4,S.displayName),N=S=new J,null!=($=de(T,1))&&null!=$)if(X(N.g,8),I=N.g,0<=$)X(I,$);else{for(C=0;9>C;C++)I.push(127&$|128),$>>=7;I.push(1)}ne(N,2,de(T,2)),null!=(I=de(T,3))&&(I=A(I),X(N.g,26),X(N.g,I.length),ee(N,N.g.end()),ee(N,I)),null!=(I=de(T,4))&&(I=A(I),X(N.g,34),X(N.g,I.length),ee(N,N.g.end()),ee(N,I)),ke(T,N),S=te(S),w.call(v,k,S)}}f=f.data;break e;default:f={}}}switch(c=f,p=l.stream,l.type){case"video":a.pushTexture2d(Object.assign(Object.assign({},c),{stream:p,timestamp:r}));break;case"detections":(h=c).stream=p,h.timestamp=r,a.pushDetectionList(h);break;default:throw Error("Unknown input config type: '"+l.type+"'")}}return d.i.send(a),x(n,d.C,4);case 4:a.delete(),n.g=0}}))}))},e.onResults=function(e,t){this.listeners[t||"$"]=e},N("Solution",Ge),N("OptionType",{BOOL:0,NUMBER:1,aa:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(e=Ke.prototype).reset=function(){this.g.reset()},e.close=function(){return this.g.close(),Promise.resolve()},e.onResults=function(e){this.g.onResults(e)},e.initialize=function(){return Te(this,(function e(){var t=this;return S(e,(function(e){return x(e,t.g.initialize(),0)}))}))},e.send=function(e,t){return Te(this,(function n(){var r=this;return S(n,(function(n){return x(n,r.g.send(e,t),0)}))}))},e.setOptions=function(e){this.g.setOptions(e)},N("Pose",Ke),N("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),N("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),N("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),N("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),N("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),N("VERSION","0.4.1633558788")}).call(this)},768:(e,t,n)=>{"use strict";var r={};n.r(r),n.d(r,{addImpl:()=>Ce,bincountImpl:()=>Ee,bincountReduceImpl:()=>_e,ceilImpl:()=>De,concatImpl:()=>Fe,equalImpl:()=>Me,expImpl:()=>Be,expm1Impl:()=>Pe,floorImpl:()=>Le,gatherNdImpl:()=>Ve,gatherV2Impl:()=>Ue,greaterEqualImpl:()=>ze,greaterImpl:()=>We,lessEqualImpl:()=>He,lessImpl:()=>Ge,linSpaceImpl:()=>je,logImpl:()=>Xe,maxImpl:()=>Ke,maximumImpl:()=>qe,minimumImpl:()=>Ye,multiplyImpl:()=>Qe,negImpl:()=>Je,notEqualImpl:()=>et,prodImpl:()=>nt,rangeImpl:()=>rt,rsqrtImpl:()=>at,sigmoidImpl:()=>st,simpleAbsImpl:()=>be,sliceImpl:()=>ot,sparseFillEmptyRowsImpl:()=>it,sparseReshapeImpl:()=>ut,sparseSegmentReductionImpl:()=>lt,sqrtImpl:()=>ct,squaredDifferenceImpl:()=>pt,stridedSliceImpl:()=>ht,stringNGramsImpl:()=>ft,stringSplitImpl:()=>gt,stringToHashBucketFastImpl:()=>yt,subImpl:()=>xt,tileImpl:()=>vt,topKImpl:()=>St,transposeImpl:()=>tt,uniqueImpl:()=>Tt});var a=n(7110);const s={},o={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function i(e,t){if(!(e in s)){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete s[e]}),!1),1===e?n.getContext("webgl",o)||n.getContext("experimental-webgl",o):n.getContext("webgl2",o)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;s[e]=n}const n=s[e];return null==n||n.isContextLost()?(delete s[e],i(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),s[e])}var u,l,c;function p(e,t){return[t,e]}function h(e){const t=a.D5U.sizeFromShape(e),n=Math.ceil(t/4);return a.D5U.sizeToSquarishShape(n)}function d(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function f(e,t){const n=e;let r,s,o,i,u,l,c,p,h,d;return 2===(0,a.OBj)().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,o=n.RGBA16F,i=n.RGBA32F,u=n.RED,c=4,p=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(r=e.RGBA,s=e.RGBA,o=e.RGBA,i=n.RGBA,u=e.RGBA,c=4,p=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:u,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:p,textureTypeHalfFloat:h,textureTypeFloat:d}}function m(e,t){const n=t();return(0,a.OBj)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function g(e){return!!((0,a.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function y(e,t){return I(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(u||(u={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(l||(l={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(c||(c={}));const x=/ERROR: [0-9]+:([0-9]+):/g;function b(e,t){if(m(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function v(e,t,n,r,a,s,o){const i=e.getAttribLocation(t,n);return-1!==i&&(m(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),m(e,(()=>e.vertexAttribPointer(i,a,e.FLOAT,!1,s,o))),m(e,(()=>e.enableVertexAttribArray(i))),!0)}function w(e,t,n,r){m(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),m(e,(()=>e.activeTexture(e.TEXTURE0+n))),m(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),m(e,(()=>e.uniform1i(n,r)))}function k(e,t,n){m(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),m(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function S(e,t){m(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),m(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function T(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function I(e,t,n){const r=m(e,(()=>t()));if(null==r)throw new Error(n);return r}function N(e,t=2){return a.D5U.sizeFromShape(e.slice(0,e.length-t))}function C(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function $(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[N(e),...C(e)]),t}function E(e){return e%2==0}function _(e,t){if(e=e.slice(-2),t=t.slice(-2),a.D5U.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(E(n)&&E(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&E(e[0])&&E(t[0])}let R,A;function O(e,t){return null!=e.getExtension(t)}function D(e){try{if(null!=i(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function F(e){const t=f(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function M(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&a.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const B=(0,a.OBj)();function P(){let e,t,n,r,s,o,i,u,l,c;return 2===(0,a.OBj)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",o="outputColor",i="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",o="gl_FragColor",i="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:o,defineOutput:i,defineSpecialNaN:u,defineSpecialInf:l,defineRound:c}}function L(e,t,n="index"){const r=a.D5U.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function V(e,t,n="index"){const r=a.D5U.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / outShapeStrides[${a}]; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function U(e){const t=a.D5U.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}B.registerFlag("HAS_WEBGL",(()=>B.getNumber("WEBGL_VERSION")>0)),B.registerFlag("WEBGL_VERSION",(()=>D(2)?2:D(1)?1:0)),B.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),B.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===B.get("WEBGL_VERSION"))),B.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),B.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),B.registerFlag("WEBGL_PACK",(()=>B.getBool("HAS_WEBGL"))),B.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>B.getBool("WEBGL_PACK"))),B.registerFlag("WEBGL_PACK_CLIP",(()=>B.getBool("WEBGL_PACK"))),B.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>B.getBool("WEBGL_PACK"))),B.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>B.getBool("WEBGL_PACK"))),B.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>B.getBool("WEBGL_PACK"))),B.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>B.getBool("WEBGL_PACK"))),B.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>B.getBool("WEBGL_PACK"))),B.registerFlag("WEBGL_PACK_REDUCE",(()=>B.getBool("WEBGL_PACK"))),B.registerFlag("WEBGL_LAZILY_UNPACK",(()=>B.getBool("WEBGL_PACK"))),B.registerFlag("WEBGL_CONV_IM2COL",(()=>B.getBool("WEBGL_PACK"))),B.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==R){const t=i(e);R=t.getParameter(t.MAX_TEXTURE_SIZE)}return R}(B.getNumber("WEBGL_VERSION")))),B.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==A){const t=i(e);A=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,A)}(B.getNumber("WEBGL_VERSION")))),B.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=B.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=i(e);return t=O(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:O(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),B.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>B.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!a.C2$.isMobile())),B.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=i(e);if(1===e){if(!O(t,"OES_texture_float"))return!1}else if(!O(t,"EXT_color_buffer_float"))return!1;return F(t)}(B.getNumber("WEBGL_VERSION")))),B.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!B.getBool("WEBGL_FORCE_F16_TEXTURES")&&B.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),B.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=i(e);if(1!==e){if(O(t,"EXT_color_buffer_float"))return F(t);const e="EXT_color_buffer_half_float";if(O(t,e)){const n=t.getExtension(e);return function(e,t){const n=f(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!O(t,"OES_texture_float")&&!!O(t,"WEBGL_color_buffer_float")&&F(t)}(B.getNumber("WEBGL_VERSION")))),B.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=B.getNumber("WEBGL_VERSION"))&&null!=i(e).fenceSync;var e})),B.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>B.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),B.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),B.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>a.C2$.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),B.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),B.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),B.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),B.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const W="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:z}=a.Wap;function G(e,t,n){const r=[];if(e.forEach((e=>{const t=a.D5U.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=ee(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),o=e.map((e=>function(e,t,n=!1,r){let s="";s+=n?j(e,r):H(e,r);const o=e.shapeInfo.logicalShape,i=t.logicalShape;return o.length<=i.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",o=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,u=z(e.shapeInfo.logicalShape,t.logicalShape),l=J(i),c=i-o;let p;const h=["x","y","z","w","u","v"];p=0===o?"":i<2&&u.length>=1?"coords = 0;":u.map((e=>`coords.${h[e+c]} = 0;`)).join("\n");let d="";d=i<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+c]}`)).join(", ");let f="return outputValue;";const m=1===a.D5U.sizeFromShape(e.shapeInfo.logicalShape),g=1===a.D5U.sizeFromShape(t.logicalShape);if(1!==o||m||g){if(m&&!g)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const e=o-2,t=o-1;u.indexOf(e)>-1&&u.indexOf(t)>-1?f="return vec4(outputValue.x);":u.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      vec4 outputValue = get${r}(${d});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",o=t.texShape,i=e.shapeInfo.texShape,u=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&u===l&&null==e.shapeInfo.flatOffset&&a.D5U.arraysEqual(i,o))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=J(l),p=z(e.shapeInfo.logicalShape,t.logicalShape),h=l-u;let d;const f=["x","y","z","w","u","v"];d=0===u?"":l<2&&p.length>=1?"coords = 0;":p.map((e=>`coords.${f[e+h]} = 0;`)).join("\n");let m="";return m=l<2&&u>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${f[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${c} coords = getOutputCoords();\n      ${d}\n      return get${r}(${m});\n    }\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,u=P(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let c,p,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${X}\n    ${K}\n    ${q}\n  `}(u);return t.isPacked?(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(a.D5U.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let o=s,i="",u="b, r, c";for(let t=2;t<e.length-1;t++)o*=e[e.length-t-1],i=`\n      int b${t} = index / ${o};\n      index -= b${t} * ${o};\n    `+i,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),p=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return a.D5U.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${V(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=L(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${V(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=L(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=L(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=L(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),p=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(h+=Y),[h,l,p,s,c,o,n.userCode].join("\n")}function H(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=Q(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[i,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${i}, ${u}, ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${Z(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],o=a[1];if(1===o&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=Q(n);return 1===o?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${o}, index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=e.shapeInfo.texShape;if(null!=o&&a.D5U.arraysEqual(n,o)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=o[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${o[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:u}=a.D5U.squeezeShape(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${H(te(e,l),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${ne(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${Z(e)}\n      }\n    `;const c=o[0],p=o[1],h=Q(r);return 1===p?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${c}, ${p}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n[1]*n[2],i=n[2],{newShape:u,keptDims:l}=a.D5U.squeezeShape(n),c=u;if(c.length<n.length){const n=["row","col","depth"];return`\n        ${H(te(e,c),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${ne(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${o}, ${i}, 1)));\n        ${Z(e)}\n      }\n    `;const p=e.shapeInfo.texShape,h=p[0],d=p[1],f=e.shapeInfo.flatOffset;if(d===o&&null==f)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===i&&null==f)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const m=Q(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${o} + col * ${i} + depth + ${m};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${o} + col * ${i} + depth + ${m};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n[3],i=n[2]*o,u=n[1]*i,{newShape:l,keptDims:c}=a.D5U.squeezeShape(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${H(te(e,l),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${ne(n,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${u}, ${i}, ${o}, 1)));\n        ${Z(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],f=h[1],m=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,y=`int stride0 = ${r}Shape[1] * stride1;`;if(f===u&&null==p)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${m}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${o}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(f===o&&null==p)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const x=Q(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${m}\n      ${g}\n      ${y}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${x});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${i} +\n          depth * ${o} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${f}, index + ${x});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],o=t[3]*s,i=t[2]*o,u=t[1]*i,{newShape:l,keptDims:c}=a.D5U.squeezeShape(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${H(te(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${ne(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${i}, ${o}, ${s})) +\n          depth3;\n        ${Z(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],f=h[1];if(f===u&&null==p)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${o}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===s&&null==p)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${i} + depth * ${o} +\n          depth2 * ${s} + depth3 + ${Q(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:o}=a.D5U.squeezeShape(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${H(te(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${ne(t,o)});\n      }\n    `}const i=t[5],u=t[4]*i,l=t[3]*u,c=t[2]*l,p=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${p}, ${c}, ${l}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${Z(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,f=d[0],m=d[1];if(m===p&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${l}, ${u}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${p} + col * ${c} + depth * ${l} +\n          depth2 * ${u} + depth3 * ${i} + depth4 + ${Q(n)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function j(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${P().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=P();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${o[0]}, ${o[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=e.shapeInfo.texShape,i=o[0],u=o[1],l=P();if(null!=o&&a.D5U.arraysEqual(n,o))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${u}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const c=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${c[0]}, ${c[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${j(te(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${ne(s,r)});\n        }\n      `}const i=P();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `;const u=o[0],l=o[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=P();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,o=s.length,i=e.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=u[0],c=u[1],p=Math.ceil(s[o-1]/2);let h=p*Math.ceil(s[o-2]/2),d="int b, int row, int col",f=`b * ${h} + (row / 2) * ${p} + (col / 2)`;for(let e=2;e<o-1;e++)d=`int b${e}, `+d,h*=s[o-e-1],f=`b${e} * ${h} + `+f;return`\n    vec4 ${r}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const X="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",K="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",q="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Y="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Q(e){return`offset${e}`}function Z(e){const t=e.name,n=a.D5U.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function J(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function ee(e,t,n){const{newShape:r,keptDims:s}=a.D5U.squeezeShape(t),o=t.length,i=e&&3===o&&1===t[0],u=i?t.slice(1):r,l=!e&&o>1&&!a.D5U.arraysEqual(t,n)&&r.length<o||i;return{useSqueezeShape:l,uniformShape:l?u:t,keptDims:s}}function te(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function ne(e,t){return t.map((t=>e[t])).join(", ")}function re(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],o=s.shape;if(!a.D5U.arraysEqual(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,u=s.isUniform?null:s.texData.texShape;if(!a.D5U.arraysEqual(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)}))}function ae(e){return(0,a.OBj)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class se{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=u.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=P();this.outputShape=e,this.enableShapeUniforms=ae(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?V(["r","c","d"],e):L(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class oe{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=u.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=P();this.outputShape=e,this.enableShapeUniforms=ae(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?V(["r","c","d"],e):L(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class ie{constructor(e){this.variableNames=["A"],this.outTexUsage=l.DOWNLOAD;const t=P();this.outputShape=e,this.userCode=`\n      ${W}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class ue{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=l.DOWNLOAD;const t=P();this.outputShape=e,this.userCode=`\n      ${W}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class le{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=P();this.outputShape=e,this.enableShapeUniforms=ae(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":U(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class ce{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=P();this.outputShape=e,this.enableShapeUniforms=ae(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":U(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}function pe(e,t,n,r,s,o){!function(e,t){const n=(0,a.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return I(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),u=e.TEXTURE_2D;return m(e,(()=>e.bindTexture(u,i))),m(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),m(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),m(e,(()=>e.texParameteri(u,e.TEXTURE_MIN_FILTER,e.NEAREST))),m(e,(()=>e.texParameteri(u,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,a.OBj)().getNumber("WEBGL_VERSION")?m(e,(()=>e.texImage2D(u,0,r,t,n,0,s,o,null))):m(e,(()=>e.texStorage2D(u,1,r,t,n))),m(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function he(e){return e.internalFormatFloat}function de(e){return e.internalFormatHalfFloat}function fe(e){return e.downloadTextureFormat}function me(e){return e.internalFormatPackedFloat}function ge(e){return e.internalFormatPackedHalfFloat}class ye{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=(0,a.OBj)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){s[e]=t}(t,e)):this.gl=i(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===(0,a.OBj)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=y(this.gl,e),O(this.gl,t))this.textureHalfFloatExtension=y(this.gl,t);else if((0,a.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),O(this.gl,r))this.colorBufferHalfFloatExtension=y(this.gl,r);else if((0,a.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",O(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!O(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=I(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return m(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),m(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=I(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return m(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),m(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return I(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=f(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,a.OBj)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;m(e,(()=>e.finish())),m(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),m(e,(()=>e.deleteFramebuffer(this.framebuffer))),m(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),m(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),m(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=p(t,n);return pe(e,a,s,he(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=p(t,n);return pe(e,a,s,de(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=p(t,n);return pe(e,a,s,fe(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){m(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,a.OBj)().getNumber("WEBGL_VERSION")?m(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):m(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,a.OBj)().getNumber("WEBGL_VERSION")?m(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):m(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),m(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,o){let i,u,l;m(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),u=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),u=e.FLOAT,l=o.internalFormatPackedFloat),i.set(s),2===(0,a.OBj)().getNumber("WEBGL_VERSION")?m(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,u,i))):m(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,u,i))),m(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=d(t,n);return pe(e,a,s,ge(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=d(t,n);return pe(e,a,s,me(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(S(this.gl,this.framebuffer),this.outputTexture=null),m(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,s]=p(t,n),o=new Uint8Array(t*n*4);return m(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return function(e,t,n,r,a,s,o,i){const u=e,l=new Float32Array(function(e,t){const[n,r]=d(e,t);return n*r*4}(s,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();m(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return m(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),m(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),m(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,a.OBj)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else(0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return m(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=P();return function(e,t){const n=I(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(m(e,(()=>e.shaderSource(n,t))),m(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return I(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return m(t,(()=>t.attachShader(n,this.vertexShader))),m(t,(()=>t.attachShader(n,e))),function(e,t){if(m(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&b(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return m(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),v(e,t,"clipSpacePos",n,3,20,0)&&v(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&m(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&b(this.gl,this.program),m(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return I(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),m(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),w(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=d(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&b(this.gl,this.program),T(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),m(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),m(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=y(this.gl,2===(0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await a.D5U.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||a.D5U.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),k(this.gl,e,this.framebuffer),this.debug&&T(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(k(this.gl,this.outputTexture,this.framebuffer),this.debug&&T(this.gl)):S(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;k(r,e,this.framebuffer),this.debug&&T(r),this.outputTexture=e,m(r,(()=>r.viewport(0,0,t,n))),m(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),m(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function xe(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&a.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}function be(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}function ve(e){return(t,n,r,s,o)=>{const i=a.Wap.assertAndGetBroadcastShape(t,n),u=i.length,l=a.D5U.computeStrides(i),c=a.D5U.sizeFromShape(i),p=a.D5U.getTypedArrayFromDType(o,c),h=t.length,d=n.length,f=a.D5U.computeStrides(t),m=a.D5U.computeStrides(n),g=a.Wap.getBroadcastDims(t,i),y=a.Wap.getBroadcastDims(n,i);if(g.length+y.length===0)for(let t=0;t<p.length;++t)p[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<p.length;++t){const n=a.D5U.indexToLoc(t,u,l),o=n.slice(-h);g.forEach((e=>o[e]=0));const i=a.D5U.locToIndex(o,h,f),c=n.slice(-d);y.forEach((e=>c[e]=0));const x=a.D5U.locToIndex(c,d,m);p[t]=e(r[i],s[x])}return[p,i]}}function we(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",o)},i}function ke(e,t,n="float32"){if("complex64"===n)return we({inputs:{real:ke(e,t,"float32"),imag:ke(e,t,"float32")},backend:e});const r=a.D5U.makeZerosTypedArray(a.D5U.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function Se(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function Te(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:o}=r;if("complex64"===o){if("complex64"===s.dtype)return Se({inputs:{x:s},backend:n});const e=ke(n,s.shape,s.dtype),t=Te({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=we({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}({inputs:{input:s},backend:n}),t=Te({inputs:{x:e},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(e),t}if(!a.D5U.hasEncodingLoss(s.dtype,o)){const e=Se({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o){const e=n.data.get(s.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(s.shape,"int32",t)}if("bool"===o){const e=n.data.get(s.dataId).values,t=a.D5U.toTypedArray([0],s.dtype),[r,o]=ve(((e,t)=>e!==t?1:0))(s.shape,[],e,t,"bool");return n.makeTensorInfo(o,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${o}`)}function Ie(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:o,b:i}=n,u=s;xe([o,i],e);const l=u.data.get(o.dataId).values,c=u.data.get(i.dataId).values,p="string"===o.dtype?a.Wap.fromUint8ToStringArray(l):l,h="string"===o.dtype?a.Wap.fromUint8ToStringArray(c):c,d=r||o.dtype,[f,m]=t(o.shape,i.shape,p,h,d);return u.makeTensorInfo(m,d,f)}:({inputs:e,backend:a})=>{const{a:s,b:o}=e,i=a;if("complex64"===s.dtype||"complex64"===o.dtype){const e=Te({inputs:{x:s},backend:i,attrs:{dtype:"complex64"}}),t=i.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=i.data.get(r.dataId).values,l=i.data.get(a.dataId).values,c=Te({inputs:{x:o},backend:i,attrs:{dtype:"complex64"}}),p=i.data.get(c.dataId),h=p.complexTensorInfos.real,d=p.complexTensorInfos.imag,f=i.data.get(h.dataId).values,m=i.data.get(d.dataId).values,[g,y,x]=n(s.shape,o.shape,u,l,f,m),b=i.makeTensorInfo(x,"float32",g),v=i.makeTensorInfo(x,"float32",y),w=we({inputs:{real:b,imag:v},backend:i});return i.disposeIntermediateTensorInfo(e),i.disposeIntermediateTensorInfo(c),i.disposeIntermediateTensorInfo(b),i.disposeIntermediateTensorInfo(v),w}{const e=i.data.get(s.dataId).values,n=i.data.get(o.dataId).values,a=r||s.dtype,[u,l]=t(s.shape,o.shape,e,n,a);return i.makeTensorInfo(l,a,u)}}}function Ne(e){return(t,n,r,s,o,i)=>{const u=a.Wap.assertAndGetBroadcastShape(t,n),l=a.D5U.sizeFromShape(u),c=u.length,p=a.D5U.computeStrides(u),h=a.D5U.getTypedArrayFromDType("float32",l),d=a.D5U.getTypedArrayFromDType("float32",l),f=a.Wap.getBroadcastDims(t,u),m=a.Wap.getBroadcastDims(n,u),g=a.Wap.mergeRealAndImagArrays(r,s),y=a.Wap.mergeRealAndImagArrays(o,i),x=t.length,b=a.D5U.computeStrides(t),v=n.length,w=a.D5U.computeStrides(n);if(f.length+m.length===0)for(let t=0;t<h.length;t++){const n=t%g.length,r=t%y.length,a=e(g[2*n],g[2*n+1],y[2*r],y[2*r+1]);h[t]=a.real,d[t]=a.imag}else for(let t=0;t<h.length;t++){const n=a.D5U.indexToLoc(t,c,p),r=n.slice(-x);f.forEach((e=>r[e]=0));const s=a.D5U.locToIndex(r,x,b),o=n.slice(-v);m.forEach((e=>o[e]=0));const i=a.D5U.locToIndex(o,v,w),u=e(g[2*s],g[2*s+1],y[2*i],y[2*i+1]);h[t]=u.real,d[t]=u.imag}return[h,d,u]}}a.SYM,a.Zz9,a.iJz,a.xJR,a.RFZ;const Ce=ve(((e,t)=>e+t)),$e=Ne(((e,t,n,r)=>({real:e+n,imag:t+r})));function Ee(e,t,n,r,s){const o=a.D5U.sizeFromShape(r),i=a.D5U.makeZerosTypedArray(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=o>0?t[n]:1)}return i}function _e(e,t,n,r=!1){const s=e.shape[0],o=e.shape[1],i=(0,a.f3b)([s,n],t.dtype);for(let a=0;a<s;a++)for(let s=0;s<o;s++){const o=e.get(a,s);if(o<0)throw new Error("Input x must be non-negative!");o>=n||(r?i.set(1,a,o):t.size>0?i.set(i.get(a,o)+t.get(a,s),a,o):i.set(i.get(a,o)+1,a,o))}return i}function Re(e){return(t,n,r)=>{const s=a.D5U.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}function Ae(e,t,n){return({inputs:r,attrs:s,backend:o})=>{const{x:i}=r;if(xe(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=o,l=u.data.get(i.dataId).values,c=a.D5U.sizeFromShape(i.shape),p=n||i.dtype,h=a.D5U.getArrayFromDType(p,c);for(let e=0;e<c;++e)h[e]=t(l[e],s);return u.makeTensorInfo(i.shape,p,h)}}function Oe(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:o}=r;if(xe(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=s,u=i.data.get(o.dataId).values,l=n||o.dtype,c=t(u,l,a);return i.makeTensorInfo(o.shape,l,c)}}Ie(a.mm_,Ce,$e),a.mm_;const De=Re((e=>Math.ceil(e)));function Fe(e,t,n,r){const s=a.D5U.getArrayFromDType(n,a.D5U.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=a.D5U.sizeFromShape(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const o="string"===n?a.Wap.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const a=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[a+t]=o[i++]}r+=e.shape[1]}))}return s}Oe(a.gJX,De),a.gJX;const Me=ve(((e,t)=>e===t?1:0)),Be=(Ie(a.hdR,Me,null,"bool"),a.hdR,Re((e=>Math.exp(e)))),Pe=(Oe(a.NEP,Be,"float32"),a.NEP,Re((e=>Math.expm1(e)))),Le=(Oe(a.Y0y,Pe),a.Y0y,Re((e=>Math.floor(e))));function Ve(e,t,n,r,s,o,i,u,l){const c=(0,a.f3b)([r,o],n);for(let n=0;n<r;n++){const r=[];let a=0;for(let t=0;t<s;t++){const o=e[n*s+t];a+=o*i[t],r.push(o)}if(a<0||a>=l/o)throw new Error(`Invalid indices: ${r} does not index into ${u}`);for(let e=0;e<o;e++)c.values[n*o+e]=t.get(...t.indexToLoc(a*o+e))}return c}function Ue(e,t,n){const r=(0,a.f3b)(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),s=a[0],o=a[2],i=t.locToIndex([s,o]);a[2]=t.values[i];const u=e.locToIndex(a);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}Oe(a.OR,Le),a.OR;const We=ve(((e,t)=>e>t?1:0)),ze=(Ie(a.iZT,We,null,"bool"),a.iZT,ve(((e,t)=>e>=t?1:0))),Ge=(Ie(a.Acj,ze,null,"bool"),a.Acj,ve(((e,t)=>e<t?1:0))),He=(Ie(a.vtC,Ge,null,"bool"),a.vtC,ve(((e,t)=>e<=t?1:0)));function je(e,t,n){const r=(t-e)/(n-1),s=a.D5U.makeZerosTypedArray(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}Ie(a.CAk,He,null,"bool"),a.CAk;const Xe=Re((e=>Math.log(e)));function Ke(e,t,n,r){const s=a.D5U.getTypedArrayFromDType(r,a.D5U.sizeFromShape(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}Oe(a.ZbH,Xe),a.ZbH;const qe=ve(((e,t)=>Math.max(e,t))),Ye=(Ie(a.BMI,qe),a.BMI,ve(((e,t)=>Math.min(e,t)))),Qe=(Ie(a.q8u,Ye),a.q8u,ve(((e,t)=>e*t))),Ze=Ne(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})));function Je(e,t,n){const r=a.D5U.createScalarValue(-1,n);return Qe([],t,r,e,n)}Ie(a.wYn,Qe,Ze),a.wYn,a.kuV;const et=ve(((e,t)=>e!==t?1:0));function tt(e,t,n,r,s){const o=t.length,i=a.D5U.sizeFromShape(t),u=a.D5U.computeStrides(t),l=a.D5U.computeStrides(s),c=a.D5U.getTypedArrayFromDType(n,a.D5U.sizeFromShape(s));for(let t=0;t<i;++t){const n=a.D5U.indexToLoc(t,o,u),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];c[a.D5U.locToIndex(s,o,l)]=e[t]}return c}function nt(e,t,n,r){const[s,o]=a.Wap.computeOutAndReduceShapes(e,r),i=(0,a.x8V)(t,"int32"),u=a.D5U.makeZerosTypedArray(a.D5U.sizeFromShape(s),i),l=a.D5U.sizeFromShape(o);for(let e=0;e<u.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];u[e]=r}return{outVals:u,outShape:s,outDtype:i}}function rt(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return a.D5U.makeZerosTypedArray(0,r);const s=Math.abs(Math.ceil((t-e)/n)),o=a.D5U.makeZerosTypedArray(s,r);t<e&&1===n&&(n=-1),o[0]=e;for(let e=1;e<o.length;e++)o[e]=o[e-1]+n;return o}Ie(a.yQU,et,null,"bool"),a.yQU,a.G3Y,a.DlI;const at=Re((e=>1/Math.sqrt(e))),st=(Oe(a.bV0,at),a.bV0,Re((e=>1/(1+Math.exp(-e)))));function ot(e,t,n,r,s){const o=a.kuN.isSliceContinous(r,t,n),i=a.D5U.sizeFromShape(n),u=a.D5U.computeStrides(r);if(o){const n=a.kuN.computeFlatOffset(t,u);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const l="string"===s?a.Wap.fromUint8ToStringArray(e):e,c=(0,a.f3b)(r,s,l),p=(0,a.f3b)(n,s);for(let e=0;e<p.size;++e){const n=p.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));p.set(c.get(...r),...n)}return"string"===s?a.Wap.fromStringArrayToUint8(p.values):p.values}function it(e,t,n,r,s,o,i){const u=t[0],l=o[0],c=new Array(l),p=new Array(u),h=t[1];if(0===l){if(0!==u)throw new Error(a.Wap.getSparseFillEmptyRowsIndicesDenseShapeMismatch(u));return[a.D5U.getArrayFromDType(n,0),[0,h],a.D5U.getArrayFromDType(s,0),c,p]}let d=!0,f=0;const m=new Array(l).fill(0);for(let t=0;t<u;++t){const n=e[t*h];if(n<0)throw new Error(a.Wap.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=l)throw new Error(a.Wap.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,l));++m[n],d=d&&n>=f,f=n}let g=!0;for(let e=0;e<l;++e){const t=0===m[e];c[e]=t,g=g&&!t,m[e]=Math.max(m[e],1),e>0&&(m[e]+=m[e-1])}if(g&&d){const t=e,n=r;for(let e=0;e<u;++e)p[e]=e;return[t,[u,h],n,c,p]}{const t=m[l-1],o=a.D5U.getArrayFromDType(n,t*h),d=a.D5U.getArrayFromDType(s,t),f=new Array(l).fill(0);for(let t=0;t<u;++t){const n=e[t*h],a=f[n],s=(0===n?0:m[n-1])+a;f[n]++;for(let n=0;n<h;++n)o[s*h+n]=e[t*h+n];d[s]=r[t],p[t]=s}for(let e=0;e<l;++e)if(0===f[e]){const t=0===e?0:m[e-1];o[t*h+0]=e;for(let e=1;e<h;++e)o[t*h+e]=0;d[t]=i}return[o,[t,h],d,c,p]}}function ut(e,t,n,r,s){const o=a.D5U.sizeFromShape(r),i=t[0],u=s.length,l=[];let c=1,p=-1;for(let e=0;e<u;++e){const t=s[e];if(-1===t){if(-1!==p)throw new Error(a.Wap.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(p,e));p=e,l.push(1)}else{if(t<0)throw new Error(a.Wap.getSparseReshapeNegativeOutputDimErrorMessage(e,t));c*=t,l.push(t)}}if(-1!==p){if(c<=0)throw new Error(a.Wap.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(o/c);if(c*e!==o)throw new Error(a.Wap.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[p]=e}if(a.D5U.sizeFromShape(l)!==o)throw new Error(a.Wap.getSparseReshapeInputOutputMismatchErrorMessage(r,l));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const f=[];if(u>0){f[u-1]=1;for(let e=u-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}const m=a.D5U.getArrayFromDType(n,i*u);for(let t=0;t<i;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*d[r];for(let e=0;e<u;++e)m[t*u+e]=Math.trunc(n/f[e]),n%=f[e]}return[m,[i,u],l]}function lt(e,t,n,r,s,o=!1,i=0){const u=r.length,l=[t[0],e.length/t[0]],c=l[1],p=u>0?s[u-1]+1:0;if(p<0)throw new Error(a.Wap.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const h=t.slice();h[0]=p;const d=h.reduce(((e,t)=>e*t),1),f=a.D5U.getArrayFromDType(n,d);if(0===u)return p>0&&f.fill(i),[f,h];if(p<=0)throw new Error(a.Wap.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,x=s[m];for(;;){let t=0;if(g<u){if(t=s[g],x===t){++g;continue}if(x>=t)throw new Error(a.Wap.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(x<0||x>=p)throw new Error(a.Wap.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x,p));x>y&&f.fill(i,y*c,x*c);for(let t=m;t<g;++t){const n=r[t];if(n<0||n>=l[0])throw new Error(a.Wap.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,r[t],l[0]));for(let t=0;t<c;t++)f[x*c+t]+=e[n*c+t]}if(o)for(let e=0;e<c;e++)f[x*c+e]/=g-m;if(m=g,++g,y=x+1,x=t,g>u)break}return y<p&&f.fill(i,y*c,p*c),[f,h]}Ae(a.a5O,(e=>1/(1+Math.exp(-e)))),a.a5O,a.p2w;const ct=Re((e=>Math.sqrt(e))),pt=(Ae(a.FKq,(e=>Math.sqrt(e))),a.FKq,ve(((e,t)=>{const n=e-t;return n*n})));function ht(e,t,n,r){const s=(0,a.f3b)(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),o=new Array(a.length);for(let e=0;e<o.length;e++)o[e]=a[e]*n[e]+r[e];s.set(t.get(...o),...a)}return s}Ie(a._tC,pt),a._tC;class dt{constructor(e,t,n,r,s,o){this.separator=a.D5U.encodeString(e),this.nGramWidths=t,this.leftPad=a.D5U.encodeString(n),this.rightPad=a.D5U.encodeString(r),this.padWidth=s,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let o=0;o<a;++o){const i=this.getPadWidth(s),u=Math.max(0,i-o),l=Math.max(0,i-(a-(o+1))),c=s-(u+l),p=t+(u>0?0:o-i);let h=0;h+=u*this.leftPad.length;for(let t=0;t<c;++t)h+=e[p+t].length;h+=l*this.rightPad.length,h+=(u+l+c-1)*this.separator.length,n[r+o]=new Uint8Array(h);const d=n[r+o];let f=0;const m=e=>e.forEach((e=>d[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[p+t]),m(this.separator);if(c>0){m(e[p+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,o=a.D5U.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)o[e]=0;return[e,o]}o[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),o[e]=o[e-1]+r}const i=new Array(o[s]);for(let n=0;n<s;++n){const r=t[n];let a=o[n];if(this.nGramWidths.forEach((s=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,u,s),a+=u})),this.preserveShort&&a===o[n]){const s=t[n+1]-t[n];if(0===s)continue;const o=s+2*this.padWidth,u=1;this.createNGrams(e,r,i,a,u,o)}}return[i,o]}}function ft(e,t,n,r,a,s,o,i){return new dt(n,r,a,s,o,i).compute(e,t)}function mt(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function gt(e,t,n){const r=e.length,s=[];let o=0,i=0;const u=new Array(r);for(let a=0;a<r;++a){const r=s.length;mt(e[a],t,n,s);const l=s.length-r;u[a]=l,o+=l,i=Math.max(i,l)}const l=a.D5U.getArrayFromDType("int32",2*o),c=new Array(o),p=[r,i];let h=0;for(let e=0;e<r;++e)for(let t=0;t<u[e];++t)l[2*h]=e,l[2*h+1]=t,c[h]=s[h],++h;return[l,c,p]}function yt(e,t){const n=a.D5U.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=a.D5U.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}const xt=ve(((e,t)=>e-t)),bt=Ne(((e,t,n,r)=>({real:e-n,imag:t-r})));function vt(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=(0,a.f3b)(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r}Ie(a.Tr8,xt,bt),a.Tr8;const wt=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function kt(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const a=r-n+1,s=t-n+1,o=Math.log(a),i=.5*Math.exp(2*o/3),u=.5*Math.sqrt(o*i*(a-i)/a)*Math.sign(s-a/2);kt(e,t,Math.max(n,Math.floor(t-s*i/a+u)),Math.min(r,Math.floor(t+(a-s)*i/a+u)))}const s=e[t];let o=n,i=r;for(a.D5U.swap(e,n,t),wt(e[r],s)>0&&a.D5U.swap(e,n,r);o<i;){for(a.D5U.swap(e,o,i),o++,i--;wt(e[o],s)<0;)o+=1;for(;wt(e[i],s)>0;)i-=1}0===wt(e[n],s)?a.D5U.swap(e,n,i):(i+=1,a.D5U.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function St(e,t,n,r,s){const o=t[t.length-1],[i,u]=[e.length/o,o],l=a.D5U.getTypedArrayFromDType(n,i*r),c=a.D5U.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){const n=t*u,a=e.subarray(n,n+u);let o=new Array(a.length);a.forEach(((e,t)=>o[t]={value:e,index:t})),r<o.length&&(kt(o,r),o=o.slice(0,r)),s&&o.sort(wt);const i=t*r,p=l.subarray(i,i+r),h=c.subarray(i,i+r);for(let e=0;e<r;e++)p[e]=o[e].value,h[e]=o[e].index}const p=t.slice();return p[p.length-1]=r,[(0,a.f3b)(p,n,l),(0,a.f3b)(p,"int32",c)]}function Tt(e,t,n,r){const s=a.D5U.parseAxisParam(t,n)[0],o=[1,n[0],1];for(let e=0;e<s;e++)o[0]*=n[e];o[1]=n[s];for(let e=s+1;e<n.length;e++)o[2]*=n[e];const i={},u=new Int32Array(n[s]),l=new a.YDk(o,r,e),c=[],p=1===o[0]&&1===o[2];for(let t=0;t<n[s];t++){let n;if(p)n=e[t].toString();else{const e=[];for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==i[n])u[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,u[t]=e,c.push(t)}}const h=o.slice();h[1]=Object.keys(i).length;const d=new a.YDk(h,r);c.forEach(((e,t)=>{for(let n=0;n<o[0];n++)for(let r=0;r<o[2];r++)d.set(l.get(n,e,r),n,t,r)}));const f=n.slice();return f[s]=h[1],{outputValues:d.values,outputShape:f,indices:u}}const{addImpl:It,bincountImpl:Nt,bincountReduceImpl:Ct,ceilImpl:$t,concatImpl:Et,equalImpl:_t,expImpl:Rt,expm1Impl:At,floorImpl:Ot,gatherNdImpl:Dt,gatherV2Impl:Ft,greaterImpl:Mt,greaterEqualImpl:Bt,lessImpl:Pt,lessEqualImpl:Lt,linSpaceImpl:Vt,logImpl:Ut,maxImpl:Wt,maximumImpl:zt,minimumImpl:Gt,multiplyImpl:Ht,negImpl:jt,notEqualImpl:Xt,prodImpl:Kt,rangeImpl:qt,rsqrtImpl:Yt,sigmoidImpl:Qt,simpleAbsImpl:Zt,sliceImpl:Jt,sparseFillEmptyRowsImpl:en,sparseReshapeImpl:tn,sparseSegmentReductionImpl:nn,sqrtImpl:rn,stridedSliceImpl:an,stringNGramsImpl:sn,stringSplitImpl:on,stringToHashBucketFastImpl:un,subImpl:ln,tileImpl:cn,topKImpl:pn,transposeImpl:hn,uniqueImpl:dn}=r;function fn(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function mn(e,t){return 1===t?[e]:fn(e,t)}class gn{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=ae(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=mn("rc",this.rank),t=J(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),a=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${a}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class yn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ae(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${r[a]}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}(["r","c","d"],"inputShape"):L(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":U(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class xn{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=vn(t,n),a=wn(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=bn(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let o;return r===c.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===c.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===c.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===c.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===c.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=vn(n,r),o=wn(t,s,r);o in this.freeTextures||(this.freeTextures[o]=[]);const i=bn(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),u=(0,a.OBj)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[o],c=l.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function bn(e,t,n,r,a){const s=function(e,t){switch(e){case c.PACKED_2X2_FLOAT32:return me(t);case c.PACKED_2X2_FLOAT16:return ge(t);case c.UNPACKED_FLOAT32:return he(t);case c.UNPACKED_FLOAT16:return de(t);case c.PACKED_4X1_UNSIGNED_BYTE:return fe(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let o;if(a){const[t,n]=d(e[0],e[1]);o=t*n}else{const[t,n]=p(e[0],e[1]);o=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s);return o*i}function vn(e,t){if(e===l.UPLOAD)return c.PACKED_2X2_FLOAT32;if(e===l.RENDER||null==e)return function(e){return(0,a.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?c.PACKED_2X2_FLOAT32:c.UNPACKED_FLOAT32:e?c.PACKED_2X2_FLOAT16:c.UNPACKED_FLOAT16}(t);if(e===l.DOWNLOAD||e===l.PIXELS)return c.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function wn(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class kn{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ae(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Sn="return abs(x);",Tn="return x;";class In{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ae(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Nn{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=ae(this.outputShape.length);const t=e.length,n=mn("rc",t),r=J(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),o=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}const Cn=a.GDt.ZA,$n={},En=(0,a.OBj)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class _n extends a.Zuw{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,a.OBj)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof ye)t=e;else{const n=i((0,a.OBj)().getNumber("WEBGL_VERSION"),e);t=new ye(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=i((0,a.OBj)().getNumber("WEBGL_VERSION"));t=new ye(e),this.binaryCache=((n=(0,a.OBj)().getNumber("WEBGL_VERSION"))in $n||($n[n]={}),$n[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new xn(this.gpgpu),this.numMBBeforeWarning=null==(0,a.OBj)().global.screen?1024:(0,a.OBj)().global.screen.height*(0,a.OBj)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new a.JLz(this,(0,a.SRH)())}nextDataId(){return _n.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if(((0,a.OBj)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,a.OBj)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:l.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if((0,a.OBj)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:l.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:o,shape:i,isPacked:u}=t;if(null!=o){let t;t=u?new In(i,Tn):new kn(i,Tn);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let c,p;if(l&&(c=a.D5U.now()),"complex64"===r){const e=this.readSync(s.real.dataId),t=this.readSync(s.imag.dataId);p=a.Wap.mergeRealAndImagArrays(e,t)}else p=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=a.D5U.now()-c),this.convertAndCacheOnCPU(e,p)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:o,complexTensorInfos:i,isPacked:u}=t;if(null!=s){let t;t=u?new In(r,Tn):new kn(r,Tn);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:o}],o),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,a.OBj)().getBool("DEBUG")&&!(0,a.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,a.OBj)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,c,p=null;if("complex64"!==o&&(0,a.OBj)().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);p=this.gpgpu.createBufferFromTexture(t.texture.texture,...h(r))}if(this.pendingRead.set(e,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];c=a.Wap.mergeRealAndImagArrays(t,n)}else if(null==p)c=this.getValuesFromTexture(e);else{const e=a.D5U.sizeFromShape(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(p,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=p){const e=this.gpgpu.gl;m(e,(()=>e.deleteBuffer(p)))}const d=this.convertAndCacheOnCPU(e,c),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,a.SRH)().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:o,dtype:i,isPacked:u,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=o){let n;n=u?new In(s,Tn):new kn(s,Tn);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:i}],i),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),p=(0,a.SRH)().makeTensorFromDataId(c.dataId,c.shape,c.dtype),h=this.texData.get(c.dataId);return Object.assign({tensorRef:p},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>a.D5U.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,a.f3b)(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!g(n)){if((0,a.OBj)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=a.D5U.sizeFromShape(t);if((0,a.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...h(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const o=(0,a.OBj)().getBool("WEBGL_PACK")&&!0===r,i=o?$(t):t,u=o?new ue(i):new ie(i),l=this.runWebGLProgram(u,[{shape:i,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),p}timerAvailable(){return(0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=a.D5U.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),o=a.D5U.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=a.D5U.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:o[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:a.D5U.now(),endMs:null}}endTimer(e){return(0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=a.D5U.now(),e)}async getQueryTime(e){if((0,a.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=En){return(0,a.OBj)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&a.D5U.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){a.Wap.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Cn(e.shape,t)}packedUnaryOp(e,t,n){const r=new In(e.shape,t),s=this.compileAndRun(r,[e],n);return(0,a.SRH)().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Zt(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,a.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Sn,e.dtype);const t=new kn(e.shape,Sn),n=this.compileAndRun(t,[e]);return(0,a.SRH)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&a.D5U.isString(n[0])){const s=n.map((e=>a.D5U.encodeString(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return(0,a.SRH)().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new Nn(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new gn(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[N(e.shape),...C(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[N(t),...C(t)],s=new yn(a,n),o=[n],i=this.runWebGLProgram(s,[r],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:o}=n;if(null!=t){const e=a.D5U.sizeFromShape(s),n=t[0]*t[1]*4;a.D5U.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=$(s);let u;u=r?new oe(i):new se(i);const l=[null!=t?t:h(i)];return{dtype:o,shape:s,dataId:this.runWebGLProgram(u,[{shape:i,dtype:o,dataId:e}],o,l,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,o){const i=this.makeTensorInfo(e.outputShape,n),l=this.texData.get(i.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===u.DENSE){const t=null!=o?o:h(e.outputShape);l.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(l.usage=e.outTexUsage),0===a.D5U.sizeFromShape(i.shape))return l.values=a.D5U.getTypedArrayFromDType(i.dtype,0),i;const c=[],p=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&a.D5U.sizeFromShape(t.shape)<=(0,a.OBj)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),c.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!_(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),c.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const d={shape:i.shape,texData:l,isUniform:!1},f=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const o=t.texData.texShape,{useSqueezeShape:i,uniformShape:u,keptDims:l}=ee(e.packedInputs,t.shape,o);let c="",p="",h="";if(1===u.length&&e.packedInputs){const e=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];c=`${e[0]>1}_${e[1]>1}`}else if(2!==u.length||e.packedInputs){if(u.length>2&&!e.packedInputs){const e=a.D5U.computeStrides(u);h=`${e[0]===o[1]}_${e[e.length-1]===o[1]}`}}else p=`${u[0]>1}_${u[1]>1}`;const d=t.shape.length,f=2===u.length&&a.D5U.arraysEqual(t.shape,o),m=1===a.D5U.sizeFromShape(t.shape),g=a.Wap.getBroadcastDims(t.shape,n.shape),y=!e.packedInputs&&d===n.shape.length&&a.D5U.arraysEqual(o,n.texData.texShape),x=e.packedInputs||u.length>2?"":`${o[0]>1}_${o[1]>1}`;r+=`${d}_${y}_${i?l:""}_${u.length}_${m}_${g}_${f}_${c}_${p}_${h}_${x}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let o=e.constructor.name;return o+="_"+r+"_"+s+`${(0,a.OBj)().getNumber("WEBGL_VERSION")}`,o}(e,p,d),g=this.getAndSaveBinary(f,(()=>function(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),o=s.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=G(s,i,t),l=function(e,t){const n=I(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(m(e,(()=>e.shaderSource(n,t))),m(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=x.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),o=s.length.toString().length+2,i=s.map(((e,t)=>a.D5U.rightPad((t+1).toString(),o)+e));let u=0;for(let e=0;e<i.length;e++)u=Math.max(i[e].length,u);const l=i.slice(0,r-1),c=i.slice(r-1,r),p=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${a.D5U.rightPad(c[0],u)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,u),c=e.createProgram(l);let p=null;const h=e.getUniformLocation(c,"NAN",!1);1===(0,a.OBj)().getNumber("WEBGL_VERSION")&&(p=e.getUniformLocation(c,"INFINITY",!1));const d=!1,f={},g={},y={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n];f[r]=e.getUniformLocation(c,r,d),f[`offset${r}`]=e.getUniformLocation(c,`offset${r}`,d),t.enableShapeUniforms&&(g[`${r}Shape`]=e.getUniformLocation(c,`${r}Shape`,d),y[`${r}TexShape`]=e.getUniformLocation(c,`${r}TexShape`,d))}let b,v,w;t.enableShapeUniforms&&(b=e.getUniformLocation(c,"outShape",d),w=e.getUniformLocation(c,"outShapeStrides",d),v=e.getUniformLocation(c,"outTexShape",d));const k=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{k[n]=e.getUniformLocation(c,t.name,d)})),{program:t,fragmentShader:l,source:u,webGLProgram:c,uniformLocations:f,customUniformLocations:k,inShapeInfos:o,outShapeInfo:i,infLoc:p,nanLoc:h,inShapesLocations:g,inTexShapesLocations:y,outShapeLocation:b,outShapeStridesLocation:w,outTexShapeLocation:v}}(this.gpgpu,e,p,d))),y=null!=this.activeTimers;let b;y&&(b=this.startTimer()),function(e,t,n,r,s){t.program.enableShapeUniforms||(re(t.inShapeInfos,n),re([t.outShapeInfo],[r]));const o=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(o.texture,i[0],i[1]):e.setOutputMatrixTexture(o.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===(0,a.OBj)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const s=t.program.variableNames[r],o=t.uniformLocations[s],i=t.uniformLocations[`offset${s}`],u=t.inShapesLocations[`${s}Shape`],l=t.inTexShapesLocations[`${s}TexShape`];if(u){const{uniformShape:r}=ee(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(u,new Int32Array(r));break;case 2:e.gl.uniform2iv(u,new Int32Array(r));break;case 3:e.gl.uniform3iv(u,new Int32Array(r));break;case 4:e.gl.uniform4iv(u,new Int32Array(r))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=o)if(n.isUniform)if(a.D5U.sizeFromShape(n.shape)<2)e.gl.uniform1f(o,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(o,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,o,r)}));const u=t.outShapeLocation;if(u)switch(r.shape.length){case 1:e.gl.uniform1iv(u,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(u,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(u,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(u,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=a.D5U.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s&&t.program.customUniforms.forEach(((n,r)=>{const a=t.customUniformLocations[r],o=s[r];if("float"===n.type)e.gl.uniform1fv(a,o);else if("vec2"===n.type)e.gl.uniform2fv(a,o);else if("vec3"===n.type)e.gl.uniform3fv(a,o);else if("vec4"===n.type)e.gl.uniform4fv(a,o);else if("int"===n.type)e.gl.uniform1iv(a,o);else if("ivec2"===n.type)e.gl.uniform2iv(a,o);else if("ivec3"===n.type)e.gl.uniform3iv(a,o);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,o)}})),e.executeProgram()}(this.gpgpu,g,p,d,r),c.forEach((e=>this.disposeIntermediateTensorInfo(e))),y&&(b=this.endTimer(b),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(b)}));const v=(0,a.OBj)().get("WEBGL_FLUSH_THRESHOLD");if(v>0){const e=a.D5U.now();e-this.lastGlFlushTime>v&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,a.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,a.OBj)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,a.lub)((()=>{if(!(0,a.OBj)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,a.OBj)().getBool("DEBUG");(0,a.OBj)().set("DEBUG",!1);const t=this.abs((0,a.iD$)(1e-8)).dataSync()[0];if((0,a.OBj)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:o,usage:i,isPacked:u}=t;if(null!=o)return;const c=null!=this.activeTimers;let p;c&&(p=a.D5U.now());let h=t.texShape;if(null==h&&(h=function(e,t=!1){let n=(0,a.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?a.D5U.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=a.D5U.squeezeShape(e);e=t.newShape}let r=a.D5U.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=N(e);let n=2,s=2;return e.length&&([n,s]=C(e)),r=t*(n/2)*(s/2),a.D5U.sizeToSquarishShape(r).map((e=>2*e))}return a.D5U.sizeToSquarishShape(r)}(n,u),t.texShape=h),null!=s){const e=$(n);let o,i=h[1],f=h[0];const m=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!u&&m||([i,f]=d(h[0],h[1])),o=u?new ce(e,m):new le(e,m);const g=m?[f,i]:h,y=this.makeTensorInfo(g,r),x=this.texData.get(y.dataId);x.usage=m?l.PIXELS:l.UPLOAD,x.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),i,f,s);const b=[[f,i]],v=!0,w=this.runWebGLProgram(o,[y],r,b,v),k=this.texData.get(w.dataId);t.texture=k.texture,t.texShape=k.texShape,t.isPacked=k.isPacked,t.usage=k.usage,this.disposeIntermediateTensorInfo(y),this.texData.delete(w.dataId),t.values=null,c&&(this.uploadWaitMs+=a.D5U.now()-p)}else{const e=this.acquireTexture(h,i,r,u);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*a.D5U.bytesPerElement(t)}}_n.nextDataId=0,a.C2$.isBrowser()&&(0,a.jqO)("webgl",(()=>new _n),2);class Rn{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=a.Wap.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=ae(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class An{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a.Wap.assertAndGetBroadcastShape(t,n);const s=this.outputShape.length;this.enableShapeUniforms=ae(s);let o="";if(r)if(0===s||1===a.D5U.sizeFromShape(this.outputShape))o="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(o=`\n          ${J(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?o+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":o+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=mn("coords",s);this.enableShapeUniforms?o+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:o+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${o}\n\n        setOutput(result);\n      }\n    `}}function On(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Dn={kernelName:a.iJz,backendName:"webgl",kernelFunc:On};function Fn(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(s.dataId),i=On({inputs:{x:r},backend:n}),u=On({inputs:{x:a},backend:n});return o.complexTensorInfos={real:i,imag:u},s}const Mn={kernelName:a.Zz9,backendName:"webgl",kernelFunc:Fn},Bn="return (a < 0.) ? b * a : a;",Pn="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Ln={kernelName:a.J$2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:o}=r,i=n.makeTensorInfo([],"float32",a.D5U.createScalarValue(o,"float32")),u=(0,a.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new An(Pn,s.shape,i.shape):new Rn(Bn,s.shape,i.shape),l=n.runWebGLProgram(u,[s,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},Vn="return (a < 0.) ? b * a : a;",Un="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Wn={kernelName:a.o0g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,o=(0,a.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new An(Un,r.shape,s.shape):new Rn(Vn,r.shape,s.shape);return n.runWebGLProgram(o,[r,s],"float32")}};function zn({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:o})=>{const{x:i}=s,u=o,l=r||i.dtype;if(u.shouldExecuteOnCPU([i])&&null!=n){const e=u.texData.get(i.dataId),t=n(e.values,l);return u.makeTensorInfo(i.shape,l,t)}let c;return c=(0,a.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new In(i.shape,t):new kn(i.shape,e),u.runWebGLProgram(c,[i],l)}}function Gn({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}){return({inputs:i,backend:u})=>{const{a:l,b:c}=i,p=u;if(r&&"complex64"===l.dtype){const t=p.texData.get(l.dataId),n=p.texData.get(c.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},o={dataId:r.dataId,dtype:r.dtype,shape:c.shape},i=new Rn(e,l.shape,c.shape);return p.runWebGLProgram(i,[s,o],(0,a.x8V)(n.dtype,r.dtype))})),o=Fn({inputs:{real:r,imag:s},backend:p});return p.disposeIntermediateTensorInfo(r),p.disposeIntermediateTensorInfo(s),o}const h=o||(0,a.x8V)(l.dtype,c.dtype);if(("string"===l.dtype||"string"===c.dtype||p.shouldExecuteOnCPU([l,c]))&&null!=s){const e=p.texData.get(l.dataId).values,t=p.texData.get(c.dataId).values,n="string"===l.dtype?a.Wap.fromUint8ToStringArray(e):e,r="string"===l.dtype?a.Wap.fromUint8ToStringArray(t):t,[o,i]=s(l.shape,c.shape,n,r,h),u=p.makeTensorInfo(i,h);return p.texData.get(u.dataId).values=o,u}let d;return d=(0,a.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new An(t,l.shape,c.shape,n):new Rn(e,l.shape,c.shape),p.runWebGLProgram(d,[l,c],h)}}function Hn(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?Un:Vn;if("leakyrelu"===e)return t?Pn:Bn;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class jn{constructor(e,t,n,r=!1,a=!1,s=!1,o=null,i=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=ae(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),p=r?"i * 2, rc.y":"rc.y, i * 2",h=a?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let x="rc.x",b="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(b=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${x};\n          int batchB = ${b};\n          vec4 a = getMatrixA(batchA, ${p});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class Xn{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=a.Wap.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const Kn="return a * b;";function qn(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,o=a.Wap.upcastType(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new Xn("return areal * breal - aimag * bimag;",r.shape,s.shape),o=new Xn("return areal * bimag + aimag * breal;",r.shape,s.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),c=Fn({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[a,i]=Ht(r.shape,s.shape,e.values,t.values,o),u=n.makeTensorInfo(i,o);return n.texData.get(u.dataId).values=a,u}let i;return i=(0,a.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new An(Kn,r.shape,s.shape):new Rn(Kn,r.shape,s.shape),n.runWebGLProgram(i,[r,s],o)}const Yn={kernelName:a.wYn,backendName:"webgl",kernelFunc:qn};function Qn(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:o}=r,i=n,u=a.D5U.sizeFromShape(s.shape),l=a.D5U.inferFromImplicitShape(o,u),c=a.D5U.sizeFromShape(l);a.D5U.assert(u===c,(()=>`The new shape (${l}) has ${c} elements and the old shape (${s.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`));const p=i.texData.get(s.dataId);return!p.isPacked||_(s.shape,l)||null!==p.texture&&_(p.shape,l)?(i.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[N(e.shape),...C(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[N(t),...C(t)],o=new yn(s,r),i=[r],u=n.runWebGLProgram(o,[a],e.dtype,i,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(s,l,i)}const Zn={kernelName:a.HZH,backendName:"webgl",kernelFunc:Qn};class Jn{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:o}=e;this.outputShape=[r,o];const i=4*Math.floor(n/4),u=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${a.D5U.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class er{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let p=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${i}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,h="vec4";"all"===t?(o="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(o="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${u});\n      }\n    `}}function tr(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=a.Wap.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let o=e;for(let a=0;a<s.length;a++){const{inSize:i,windowSize:u,outSize:l}=s[a];let c,p;c="mean"===n?0===a?new Jn({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},i):new Jn({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l}):new er({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},n),p=o,o=r.runWebGLProgram(c,[o],t),p.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(p)}return o}class nr{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=J(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class rr{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=J(this.rank),a=fn("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const o=`vec2(${s.slice(-2).join()})`,i=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${i}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${i}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function ar(e,t,n){const r=(0,a.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rr(e.shape,t):new nr(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function sr(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:i}=r;return function(e,t,n,r){const s=t,o=e.shape.length,i=a.D5U.parseAxisParam(s,e.shape);let u=i;const l=a.Wap.getAxesPermutation(u,o),c=null!=l;let p=e;c&&(p=ar(e,l,r),u=a.Wap.getInnerMostAxes(u.length,o)),a.Wap.assertAxesAreInnerMostDims("sum",u,o);const[h,d]=a.Wap.computeOutAndReduceShapes(p.shape,u);let f=h;n&&(f=a.Wap.expandShapeToKeepDim(h,i));const m=a.D5U.sizeFromShape(d),g=Qn({inputs:{x:p},attrs:{shape:[a.D5U.sizeFromShape(e.shape)/m,m]},backend:r}),y=tr(g,(0,a.z4k)(e.dtype),"sum",r),x=Qn({inputs:{x:y},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(y),c&&r.disposeIntermediateTensorInfo(p),x}(s,o,i,n)}const or={kernelName:a.GBy,backendName:"webgl",kernelFunc:sr};function ir(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,o=n,i=a.shape.length,u=new Array(i);for(let e=0;e<u.length;e++)u[e]=a.shape[s[e]];let l;if(o.shouldExecuteOnCPU([a])){const e=o.texData.get(a.dataId).values,t=hn(e,a.shape,a.dtype,s,u);l=o.makeTensorInfo(u,a.dtype),o.texData.get(l.dataId).values=t}else l=ar(a,s,o);return l}const ur={kernelName:a.G3Y,backendName:"webgl",kernelFunc:ir};function lr({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:u=0,activation:l=null}){const c=e.shape.length,p=t.shape.length,h=n?e.shape[c-2]:e.shape[c-1],d=r?t.shape[p-1]:t.shape[p-2],f=n?e.shape[c-1]:e.shape[c-2],m=r?t.shape[p-2]:t.shape[p-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),x=a.D5U.sizeFromShape(g),b=a.D5U.sizeFromShape(y),v=a.Jyw.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,m]);a.D5U.assert(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=n?[x,h,f]:[x,f,h],k=r?[b,m,d]:[b,d,m],S=Qn({inputs:{x:e},backend:s,attrs:{shape:w}}),T=Qn({inputs:{x:t},backend:s,attrs:{shape:k}}),I=[S,T],N=Math.max(x,b),C=n?S.shape[1]:S.shape[2],$=null!=o,E=null!=i,_="leakyrelu"===l,R=null!=l?Hn(l,!0):null;let A;if((1===f||1===m)&&C>1e3&&!1===($||E||_||null!=R)){let e=S,t=T;n&&(e=ir({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),I.push(e)),r&&(t=ir({inputs:{x:T},backend:s,attrs:{perm:[0,2,1]}}),I.push(t));const a=1===m;let o=e;1!==m&&(o=Qn({inputs:{x:e},backend:s,attrs:{shape:[N,C,1]}}),I.push(o));const i=1===m?2:1;let u=t;a&&(u=Qn({inputs:{x:t},backend:s,attrs:{shape:[N,1,C]}}),I.push(u));const l=qn({inputs:{a:o,b:u},backend:s});A=sr({inputs:{x:l},backend:s,attrs:{axis:i,keepDims:!0}}),I.push(l)}else{const l=(0,a.x8V)(e.dtype,t.dtype),c=new jn(w,k,[N,f,m],n,r,$,R,E,_),p=[S,T];if(null!=o&&p.push(o),E&&p.push(i),_){const e=s.makeTensorInfo([],"float32",a.D5U.createScalarValue(u,"float32"));p.push(e),I.push(e)}A=s.runWebGLProgram(c,p,l)}const O=Qn({inputs:{x:A},backend:s,attrs:{shape:v}});I.push(A);for(const e of I)s.disposeIntermediateTensorInfo(e);return O}const cr={kernelName:a.usg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=r;return lr({a,b:s,transposeA:u,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:p,activation:c})}},pr="return abs(x);",hr={kernelName:a.SYM,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=Zt(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=(0,a.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new In(r.shape,pr):new kn(r.shape,pr),n.runWebGLProgram(s,[r],r.dtype)}},dr=zn({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),fr={kernelName:a.VGw,backendName:"webgl",kernelFunc:dr},mr=zn({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),gr={kernelName:a.SpW,backendName:"webgl",kernelFunc:mr},yr="return a + b;",xr=Gn({opSnippet:yr,packedOpSnippet:yr,supportsComplex:!0,cpuKernelImpl:It}),br={kernelName:a.mm_,backendName:"webgl",kernelFunc:xr};class vr{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class wr{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const kr={kernelName:a.Xze,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return On({inputs:{x:s[0]},backend:r});if(s.length>(0,a.OBj)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const o=s.map((e=>e.dtype)).reduce(((e,t)=>(0,a.x8V)(e,t))),i=s.map((e=>e.shape)),u=(0,a.OBj)().getBool("WEBGL_PACK")?new wr(s[0].shape,i):new vr(s[0].shape,i);return r.runWebGLProgram(u,s,o)}},Sr={kernelName:a.oT6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:i}=r,u=s.shape.length,l=a.D5U.parseAxisParam(o,s.shape);let c=l;const p=a.Wap.getAxesPermutation(c,u);let h=s;null!=p&&(h=ir({inputs:{x:s},backend:n,attrs:{perm:p}}),c=a.Wap.getInnerMostAxes(c.length,u)),a.Wap.assertAxesAreInnerMostDims("all",c,u);const[d,f]=a.Wap.computeOutAndReduceShapes(h.shape,c),m=Qn({inputs:{x:h},backend:n,attrs:{shape:[-1,a.D5U.sizeFromShape(f)]}}),g=tr(m,m.dtype,"all",n);let y;return y=Qn(i?{inputs:{x:g},backend:n,attrs:{shape:a.Wap.expandShapeToKeepDim(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=p&&n.disposeIntermediateTensorInfo(h),y}},Tr={kernelName:a.IKK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:i}=r,u=s.shape.length,l=a.D5U.parseAxisParam(o,s.shape);let c=l;const p=a.Wap.getAxesPermutation(c,u);let h=s;null!=p&&(h=ir({inputs:{x:s},backend:n,attrs:{perm:p}}),c=a.Wap.getInnerMostAxes(c.length,u)),a.Wap.assertAxesAreInnerMostDims("any",c,u);const[d,f]=a.Wap.computeOutAndReduceShapes(h.shape,c),m=Qn({inputs:{x:h},backend:n,attrs:{shape:[-1,a.D5U.sizeFromShape(f)]}}),g=tr(m,m.dtype,"any",n);let y;return y=Qn(i?{inputs:{x:g},backend:n,attrs:{shape:a.Wap.expandShapeToKeepDim(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=p&&n.disposeIntermediateTensorInfo(h),y}};class Ir{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Nr{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,a.D5U.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],o=Math.ceil(s/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,u=i.length,l=J(u),c=mn("coords",u);let p,h;if(1===o){h=u+1;const e=J(h);p=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[u-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[u-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[u-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[u-2]};`}else h=u,p=`\n        ${l} sourceLocR = coords;\n        ++${c[u-1]};\n        ${l} sourceLocG = coords;\n        ++${c[u-2]};\n        ${l} sourceLocA = coords;\n        --${c[u-1]};\n        ${l} sourceLocB = coords;\n        --${c[u-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),f="."+d[h-1],m=d.map((e=>"int "+e)),g=mn("sourceLocR",h-1).concat("inIdx.r"),y=mn("sourceLocG",h-1).concat("inIdx.g"),x=mn("sourceLocB",h-1).concat("inIdx.b"),b=mn("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,S=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${S}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${c[u-1]} < ${i[u-1]-1};\n        bool hasNextRow = ${c[u-2]} < ${i[u-2]-1};\n        ${p}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function Cr(e,t,n,r=null){let s=t.shape[0],o=t.shape[1];null!=r&&(s=r.shape[0],o=r.shape[1]);const i=a.Wap.computeOptimalWindowSize(o),u={windowSize:i,inSize:o,batchSize:s,outSize:Math.ceil(o/i)},l=new Ir(u,n,null==r),c=[t];null!=r&&c.push(r);const p=e.runWebGLProgram(l,c,"int32");if(1===p.shape[1])return p;const h=Cr(e,t,n,p);return e.disposeIntermediateTensorInfo(p),h}function $r(e,t,n,r=null){const s=null!=r?r.shape:t.shape,o=s[s.length-1],i=a.Wap.computeOptimalWindowSize(o),u=new Nr(s,i,n,null==r),l=null==r?[t]:[t,r],c=e.runWebGLProgram(u,l,"int32");if(c.shape.length===t.shape.length){const r=$r(e,t,n,c);return e.disposeIntermediateTensorInfo(c),r}return c}function Er(e,t,n,r){const s=[n];if(a.Wap.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!(0,a.OBj)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],o=e.texData.get(t.dataId);let i=t;null!==o&&o.isPacked&&(i=e.unpackTensor(t),n.push(i));const[u,l]=a.Wap.computeOutAndReduceShapes(i.shape,s),c=a.D5U.sizeFromShape(l),p=Qn({inputs:{x:i},backend:e,attrs:{shape:[-1,c]}});n.push(p);const h=Cr(e,p,r);n.push(h);const d=Qn({inputs:{x:h},backend:e,attrs:{shape:u}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return $r(e,t,r)}const _r={kernelName:a.sJF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o}=r;let i=a.D5U.parseAxisParam(o,s.shape);const u=a.Wap.getAxesPermutation(i,s.shape.length);let l=s;const c=[];null!=u&&(l=ir({inputs:{x:s},backend:n,attrs:{perm:u}}),c.push(l),i=a.Wap.getInnerMostAxes(i.length,l.shape.length)),a.Wap.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);const p=Er(n,l,i[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},Rr={kernelName:a.aJk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o}=r;let i=a.D5U.parseAxisParam(o,s.shape);const u=a.Wap.getAxesPermutation(i,s.shape.length);let l=s;const c=[];null!=u&&(l=ir({inputs:{x:s},backend:n,attrs:{perm:u}}),c.push(l),i=a.Wap.getInnerMostAxes(i.length,l.shape.length)),a.Wap.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);const p=Er(n,l,i[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},Ar=zn({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Or={kernelName:a.M2y,backendName:"webgl",kernelFunc:Ar},Dr=zn({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Fr={kernelName:a.qw7,backendName:"webgl",kernelFunc:Dr},Mr=zn({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Br={kernelName:a.jMg,backendName:"webgl",kernelFunc:Mr},Pr=Gn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Lr={kernelName:a.QCc,backendName:"webgl",kernelFunc:Pr},Vr=zn({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Ur={kernelName:a.Oyi,backendName:"webgl",kernelFunc:Vr};class Wr{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${i});\n        const ivec2 pads = ivec2(${h}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const b=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${i});\n      const ivec2 pads = ivec2(${h}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${b}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${b};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class zr{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,p=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let b="0.0";if(x||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${i}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(s/4),k=s%4,S=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${i}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const Gr={kernelName:a.JhU,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;M(s,"avgPool");const{filterSize:o,strides:i,pad:u,dimRoundingMode:l}=r;a.D5U.assert(a.Wap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=a.Wap.computePool2DInfo(s.shape,o,i,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&a.D5U.arraysEqual(c.inShape,c.outShape))return On({inputs:{x:s},backend:n});const p=new Wr(c,"avg",!1);return n.runWebGLProgram(p,[s],"float32")}},Hr={kernelName:a._k9,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:o,strides:i,pad:u,dimRoundingMode:l,dataFormat:c}=r,p=a.Wap.computePool3DInfo(s.shape,o,i,[1,1,1],u,l,c),h=new zr(p,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class jr{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=i-1-e.padInfo.top,c=u-1-e.padInfo.left,p=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${p});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Xr{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,p=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=p-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Kr={kernelName:a.IMb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o}=t,i=o,{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=r,h=a.Wap.computePool3DInfo(i.shape,u,l,[1,1,1],c,p),d=new Xr(h);return n.runWebGLProgram(d,[s],i.dtype)}},qr={kernelName:a.ROF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o}=t,i=o;M([s,o],"avgPoolGrad");const{filterSize:u,strides:l,pad:c}=r,p=a.Wap.computePool2DInfo(i.shape,u,l,1,c),h=new jr(p);return n.runWebGLProgram(h,[s],i.dtype)}},Yr={kernelName:a.XLW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:o,transposeB:i}=r;return lr({a,b:s,transposeA:o,transposeB:i,backend:n})}};class Qr{constructor(e,t,n,r,s,o){this.outputShape=[],this.variableNames=["x","mean","variance"],a.Wap.assertAndGetBroadcastShape(e,t),a.Wap.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(a.Wap.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";null!=s&&(a.Wap.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${o}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Zr{constructor(e,t,n,r,s,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],a.Wap.assertAndGetBroadcastShape(e,t),a.Wap.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(a.Wap.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=s&&(a.Wap.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${o}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Jr={kernelName:a.sHE,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:o,offset:i,scale:u}=e;a.D5U.assert(s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),a.D5U.assert(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),a.D5U.assert(null==u||s.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const c=[r,s,o];let p=null;null!=i&&(p=i.shape,c.push(i));let h=null;null!=u&&(h=u.shape,c.push(u));const d=(0,a.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Zr(r.shape,s.shape,o.shape,p,h,l):new Qr(r.shape,s.shape,o.shape,p,h,l);return t.runWebGLProgram(d,c,c[0].dtype)}};class ea{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=J(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return ta.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${ta[t]} = start[${t}] + coords.${ta[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const ta=["x","y","z","w","u","v"];class na{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=J(this.rank),n=mn("coords",this.rank),r=mn("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,o=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${o}\n        ${i}\n        setOutput(result);\n      }\n    `}}function ra(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:o,size:i}=r,[u,l]=a.kuN.parseSliceParams(s,o,i);if(a.kuN.assertParamsValid(s,u,l),0===a.D5U.sizeFromShape(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=Jt(e.values,u,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:c}=n.texData.get(s.dataId),p=a.kuN.isSliceContinous(s.shape,u,l);if(c||!p){const e=(0,a.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new na(l):new ea(l),t=[u];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),o=r.makeTensorInfo(n,e.dtype),i=r.texData.get(o.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let u=a.kuN.computeFlatOffset(t,a.D5U.computeStrides(e.shape));s.slice&&(u+=s.slice.flatOffset),i.slice={flatOffset:u,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),o}(s,u,l,n)}const aa={kernelName:a.p2w,backendName:"webgl",kernelFunc:ra},sa={kernelName:a.zws,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:o,crops:i}=r;a.D5U.assert(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const u=o.reduce(((e,t)=>e*t)),l=a.Wap.getReshaped(s.shape,o,u),c=a.Wap.getPermuted(l.length,o.length),p=a.Wap.getReshapedPermuted(s.shape,o,u),h=a.Wap.getSliceBeginCoords(i,o.length),d=a.Wap.getSliceSize(p,i,o.length),f=[],m=Qn({inputs:{x:s},backend:n,attrs:{shape:l}}),g=ir({inputs:{x:m},backend:n,attrs:{perm:c}}),y=Qn({inputs:{x:g},backend:n,attrs:{shape:p}}),x=ra({inputs:{x:y},backend:n,attrs:{begin:h,size:d}});return f.push(m),f.push(g),f.push(y),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},oa={kernelName:a.zvY,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o}=r,i=n.readSync(a.dataId),u=n.readSync(s.dataId),l=Nt(i,u,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,l)}},ia={kernelName:a.eEB,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,o=n.readSync(r.dataId),i=n.readSync(s.dataId),u=a.Wap.assertAndGetBroadcastShape(Array.from(o),Array.from(i));return n.makeTensorInfo([u.length],"int32",Int32Array.from(u))}},ua=Gn({opSnippet:"return float(a != b);",cpuKernelImpl:Xt,dtype:"bool"}),la={kernelName:a.yQU,backendName:"webgl",kernelFunc:ua};function ca(e){const{inputs:t,backend:n}=e,{input:r}=t;return On({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const pa={kernelName:a.xJR,backendName:"webgl",kernelFunc:ca},ha={kernelName:a.RFZ,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:o}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===o.dtype)return On({inputs:{x:o},backend:r});const t=a.lls(o.shape),n=e({inputs:{x:o},backend:r,attrs:{dtype:"float32"}}),s=Fn({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===o.dtype){const t=ca({inputs:{input:o},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!a.D5U.hasEncodingLoss(o.dtype,i)){const e=On({inputs:{x:o},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new kn(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(o,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",a.D5U.getTypedArrayFromDType("bool",1)),t=ua({inputs:{a:o,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${i}`)}},da="return ceil(x);",fa=zn({opSnippet:da,packedOpSnippet:da,cpuKernelImpl:$t}),ma={kernelName:a.gJX,backendName:"webgl",kernelFunc:fa};class ga{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class ya{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const xa={kernelName:a.xnO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:o,clipValueMax:i}=r;let u;u=(0,a.OBj)().getBool("WEBGL_PACK_CLIP")?new ya(s.shape):new ga(s.shape);const l=[[o],[i]];return n.runWebGLProgram(u,[s],s.dtype,l)}};class ba{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function va(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const wa={kernelName:a.yj2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new ba(r.shape),o=[va(r,a.complexTensorInfos.real),va(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};class ka{constructor(e){this.outputShape=[],this.outputShape=a.Wap.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class Sa{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=a.Wap.computeOutShape(e,t);const n=this.outputShape,r=n.length,s=J(r),o=mn("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const u=new Array(e.length-1);u[0]=e[0][t];for(let n=1;n<u.length;n++)u[n]=u[n-1]+e[n][t];const l=i[t],c=i.slice(-2),p=i.join();let h=`if (${l} < ${u[0]}) {\n        return getChannel(\n            getT0(${p}), vec2(${c.join()}));\n        }`;for(let e=1;e<u.length;e++){const t=u[e-1];h+=`\n        if (${l} < ${u[e]}  && ${l} >= ${u[e-1]}) {\n          return getChannel(\n            getT${e}(${Ta(i,l,t)}),\n            vec2(${Ta(c,l,t)}));\n        }`}const d=u.length,f=u[u.length-1];h+=`\n        return getChannel(\n          getT${d}(${Ta(i,l,f)}),\n          vec2(${Ta(c,l,f)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${o}), 0., 0., 0.);\n\n        ${o[r-1]} = ${o[r-1]} + 1;\n        if (${o[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${o});\n        }\n\n        ${o[r-2]} = ${o[r-2]} + 1;\n        if (${o[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${o});\n        }\n\n        ${o[r-1]} = ${o[r-1]} - 1;\n        if (${o[r-2]} < ${n[r-2]} &&\n            ${o[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${o});\n        }\n        setOutput(result);\n      }\n    `}}function Ta(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function Ia(e){const{inputs:t,backend:n}=e,{input:r}=t;return On({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const Na={kernelName:a.J_u,backendName:"webgl",kernelFunc:Ia};function Ca(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>ca({inputs:{input:e},backend:n}))),a=e.map((e=>Ia({inputs:{input:e},backend:n}))),s=Ca(r,t,n),o=Ca(a,t,n),i=Fn({inputs:{real:s,imag:o},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=a.D5U.sizeFromShape(e.shape.slice(t));return Qn({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),o=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=a.Wap.computeOutShape(s.map((e=>e.shape)),1),u=1===s[0].shape[0],l=Et(o,i,r,u),c=a.Wap.computeOutShape(e.map((e=>e.shape)),t),p=n.makeTensorInfo(c,r,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}if(e.length>(0,a.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=Ca(e.slice(0,r),t,n),s=Ca(e.slice(r),t,n),o=Ca([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}if((0,a.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new Sa(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:o,outShape:i}=function(e,t,n){const r=a.Wap.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>Qn({inputs:{x:e},attrs:{shape:[-1,a.D5U.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),u=new ka(o.map((e=>e.shape))),l=n.runWebGLProgram(u,o,r);o.forEach((e=>n.disposeIntermediateTensorInfo(e)));const c=Qn({inputs:{x:l},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(l),c}function $a(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,o=a.D5U.parseAxisParam(s,t[0].shape)[0],i=a.Wap.computeOutShape(t.map((e=>e.shape)),o);if(0===a.D5U.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const u=t.filter((e=>a.D5U.sizeFromShape(e.shape)>0));if(1===u.length)return On({inputs:{x:u[0]},backend:n});const l=u.map((e=>e.shape));return a.Wap.assertParamsConsistent(l,o),Ca(u,o,n)}const Ea={kernelName:a.Eh3,backendName:"webgl",kernelFunc:$a};class _a{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,p=e.filterHeight,h=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,x=m?3:1;let b="",v="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${i}, ${u});\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class Ra{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,p=e.filterHeight,h=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${o});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Aa{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ae(this.outputShape.length);const{dataFormat:n}=t,r=P(),a="channelsLast"===n,s=a?0:1,o=a?1:2,i=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${i}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${o}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function Oa({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}){const l=e.shape,c=r.texData.get(e.dataId),p=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,f="channelsLast"===n.dataFormat;let m;const g=[];if((1!==h&&1!==d||!(p>1e3))&&c.isPacked&&f&&null!=c.texture&&l[2]%2!=0&&a.D5U.arraysEqual(c.shape.slice(-3),l.slice(-3))){const p=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,p,n.inChannels],dtype:e.dtype},d=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,a.D5U.assert(_(c.shape,h.shape),(()=>`packed reshape ${c.shape} to ${h.shape} isn't free`));const f=Qn({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(f);const y=lr({a:h,b:f,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:u,preluActivationWeights:o,leakyreluAlpha:i}),x=r.texData.get(y.dataId);a.D5U.assert(x.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=d,x.shape=n.outShape,m=On({inputs:{x:y},backend:r}),m.shape=n.outShape,g.push(y)}else{const a=Qn({inputs:{x:e},backend:r,attrs:{shape:[1,f?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=Qn({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),p=lr({a,b:c,transposeA:!1,transposeB:!1,backend:r,bias:s,activation:u,preluActivationWeights:o,leakyreluAlpha:i});m=Qn({inputs:{x:p},backend:r,attrs:{shape:n.outShape}}),g.push(a),g.push(c),g.push(p)}for(const e of g)r.disposeIntermediateTensorInfo(e);return m}function Da({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}){const{filterWidth:l,filterHeight:c,inChannels:p,outWidth:h,outHeight:d,dataFormat:f}=n,m="channelsLast"===f,g=l*c*p,y=d*h,x=[g,y],b=[],v=Qn({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),w=Qn({inputs:{x:t},backend:r,attrs:{shape:[1,g,a.D5U.sizeFromShape(t.shape)/g]}});b.push(v),b.push(w);const k=new Aa(x,n),S=[v.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],T=r.runWebGLProgram(k,[v],"float32",S),I=Qn({inputs:{x:T},backend:r,attrs:{shape:[1,x[0],x[1]]}});b.push(T),b.push(I);const N=null!=s,C=null!=o,$="leakyrelu"===u,E=u?Hn(u,!0):null,_=new jn(I.shape,w.shape,[1,y,n.outChannels],!0,!1,N,E,C,$),R=[I,w];if(s&&R.push(s),C&&R.push(o),$){const e=r.makeTensorInfo([],"float32",a.D5U.createScalarValue(i,"float32"));R.push(e),b.push(e)}const A=r.runWebGLProgram(_,R,"float32"),O=Qn({inputs:{x:A},backend:r,attrs:{shape:m?[1,d,h,n.outChannels]:[1,n.outChannels,d,h]}});b.push(A);for(const e of b)r.disposeIntermediateTensorInfo(e);return O}const Fa={kernelName:a.mhS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o}=t,{strides:i,pad:u,dataFormat:l,dilations:c,dimRoundingMode:p}=r,h=a.Wap.convertConv2DDataFormat(l),d=a.Wap.computeConv2DInfo(s.shape,o.shape,i,c,u,p,!1,h);let f;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if((0,a.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])f=Da({x:s,filter:o,convInfo:d,backend:n});else{const e=new _a(d);f=n.runWebGLProgram(e,[s,o],"float32")}else f=Oa({x:s,filter:o,convInfo:d,backend:n});const m=Qn({inputs:{x:f},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class Ma{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ba{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Pa{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class La{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Va={kernelName:a.wUP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:o}=t,{strides:i,pad:u,dataFormat:l,dimRoundingMode:c,filterShape:p}=r,h=a.Wap.convertConv2DDataFormat(l),d=a.Wap.computeConv2DInfo(s.shape,p,i,1,u,c,!1,h),f=new Ma(d);return n.runWebGLProgram(f,[s,o],"float32")}},Ua={kernelName:a.wm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:o}=t,{inputShape:i,strides:u,pad:l,dataFormat:c,dimRoundingMode:p}=r,h=a.Wap.convertConv2DDataFormat(c),d=a.Wap.computeConv2DInfo(i,o.shape,u,1,l,p,!1,h),f=new Ba(d);return n.runWebGLProgram(f,[s,o],"float32")}},Wa={kernelName:a.x12,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o}=t,{strides:i,pad:u,dilations:l}=r,c=a.Wap.computeConv3DInfo(s.shape,o.shape,i,l,u),p=new Ra(c);return n.runWebGLProgram(p,[s,o],"float32")}},za={kernelName:a.o2y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:o}=t,{strides:i,pad:u,filterShape:l}=r,c=a.Wap.computeConv3DInfo(s.shape,l,i,1,u),p=new Pa(c);return n.runWebGLProgram(p,[s,o],"float32")}},Ga={kernelName:a.ik2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:o}=t,{pad:i,strides:u,inputShape:l}=r,c=a.Wap.computeConv3DInfo(l,o.shape,u,1,i),p=new La(c);return n.runWebGLProgram(p,[s,o],"float32")}},Ha=zn({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),ja={kernelName:a.mc4,backendName:"webgl",kernelFunc:Ha},Xa=zn({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Ka={kernelName:a.TR1,backendName:"webgl",kernelFunc:Xa};class qa{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,u]=e,[l]=t,[c,p]=n;this.outputShape=[l,c,p,u];const h="bilinear"===r?1:0,[d,f]=[o-1+".0",i-1+".0"],[m,g,y]=c>1?[""+(o-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[x,b,v]=p>1?[""+(i-1)/(p-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${b};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Ya={kernelName:a.VcC,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:l}=r,c=new qa(a.shape,s.shape,i,u,l);return n.runWebGLProgram(c,[a,s,o],"float32")}};class Qa{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${Za(r,"coords")})`,s=e[e.length-1];let o="",i="";t?(o=n?"end != "+(s-1):"end != 0",i=n?"end + 1":"end - 1"):(o=n?`end + pow2 < ${s}`:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${J(r)} coords = getOutputCoords();\n        int end = ${Ja(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${o}) {\n          int idx = ${i};\n          ${Ja(r,"coords")} = idx;\n          val += getX(${Za(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function Za(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function Ja(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const es={kernelName:a.iHb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,exclusive:i,reverse:u}=r,l=s.shape.length,c=a.Wap.getAxesPermutation([o],l);let p=s;null!=c&&(p=ir({inputs:{x:s},backend:n,attrs:{perm:c}}));const h=a.Wap.getInnerMostAxes(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${o}`);const d=p.shape[h];let f=On({inputs:{x:p},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new Qa(p.shape,!1,u),r=[[e]],a=f;f=n.runWebGLProgram(t,[f],f.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){const e=new Qa(p.shape,i,u),t=f;f=n.runWebGLProgram(e,[f],f.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=c){const e=ir({inputs:{x:f},backend:n,attrs:{perm:a.Wap.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),e}return f}},ts={kernelName:a.QRR,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o,binaryOutput:i}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=Nt(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=Ct(e,t,o,i);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class ns{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const rs={kernelName:a.T0n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:o}=r,i=a.shape[0],u=("NHWC"===o?a.shape[1]:a.shape[2])*s,l=("NHWC"===o?a.shape[2]:a.shape[3])*s,c=("NHWC"===o?a.shape[3]:a.shape[1])/(s*s),p=new ns("NHWC"===o?[i,u,l,c]:[i,c,u,l],s,o);return n.runWebGLProgram(p,[a],a.dtype)}};class as{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ae(this.outputShape.length);const s=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class ss{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ae(this.outputShape.length);const o=e.outChannels/e.inChannels,i=e.padInfo.left,u=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,p=e.filterWidth,h=p;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<p;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${c}; r++) {\n      `;for(let e=0;e<p;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(d+=`\n          xC = xCCorner + ${t*l};\n          `,1===u){if(t<p&&(i%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<p)){const e=i%2==0?a.D5U.nearestLargerEven(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,l>1&&(d+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<p&&(i%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<p&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<p&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<p&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<p&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let f="",m="";n&&(f=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${m}\n        setOutput(result);\n      }\n    `}}const os={kernelName:a.cie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o}=t,{strides:i,pad:u,dilations:l,dimRoundingMode:c}=r;let p=l;null==p&&(p=[1,1]),a.D5U.assert(a.Wap.eitherStridesOrDilationsAreOne(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const h=a.Wap.computeConv2DInfo(s.shape,o.shape,i,p,u,c,!0);let d;d=(0,a.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new ss(h):new as(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[s,o],"float32",f)}};class is{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class us{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ls={kernelName:a.sL$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:o}=t,{strides:i,dilations:u,pad:l,dimRoundingMode:c,filterShape:p}=r,h=a.Wap.computeConv2DInfo(s.shape,p,i,u,l,c,!0),d=new is(h);return n.runWebGLProgram(d,[s,o],"float32")}},cs={kernelName:a.y7R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:o}=t,{strides:i,dilations:u,pad:l,dimRoundingMode:c,inputShape:p}=r,h=a.Wap.computeConv2DInfo(p,o.shape,i,u,l,c,!0),d=new us(h);return n.runWebGLProgram(d,[s,o],"float32")}};class ps{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const hs={kernelName:a.$w,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],o=a.D5U.sizeFromShape(r.shape),i=Qn({inputs:{x:r},backend:n,attrs:{shape:[o]}}),u=new ps(o),l=n.runWebGLProgram(u,[i],i.dtype),c=Qn({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}};class ds{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:u,dilationWidth:l}=e,{top:c,left:p}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${p});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${o}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const fs={kernelName:a.p4S,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o}=t,{strides:i,pad:u,dilations:l}=r,c=a.Wap.computeDilation2DInfo(s.shape,o.shape,i,u,"NHWC",l);let p;const h=new ds(c);p=n.runWebGLProgram(h,[s,o],"float32");const d=Qn({inputs:{x:p},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(p),d}},ms={kernelName:a.$g6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,o=t,{allDims:i,summedDims:u,idDims:l}=a.Wap.decodeEinsumEquation(s,o.length);a.Wap.checkEinsumDimSizes(i.length,l,o);const{path:c,steps:p}=a.Wap.getEinsumComputePath(u,l),h=p.length;let d=null,f=i.length;const m=[];for(let e=0;e<h;++e){for(const t of p[e]){const{permutationIndices:e,expandDims:r}=a.Wap.getEinsumPermutation(f,l[t]);let s;a.Wap.isIdentityPermutation(e)?s=o[t]:(s=ir({inputs:{x:o[t]},backend:n,attrs:{perm:e}}),m.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);a.D5U.arraysEqual(s.shape,i)||(s=Qn({inputs:{x:s},backend:n,attrs:{shape:i}}),m.push(s)),null===d?d=s:(d=qn({inputs:{a:s,b:d},backend:n}),m.push(d))}e<h-1&&(c[e]>=0&&(d=sr({inputs:{x:d},backend:n,attrs:{axis:c[e]-(i.length-f),keepDims:!1}}),m.push(d)),f--)}for(const e of m)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},gs=zn({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),ys={kernelName:a.SX0,backendName:"webgl",kernelFunc:gs},xs={kernelName:a.HEU,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,o=(0,a.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new An("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new Rn("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(o,[r,s],r.dtype)}},bs=Gn({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:_t}),vs={kernelName:a.hdR,backendName:"webgl",kernelFunc:bs},ws=zn({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${a.Wap.ERF_P};\n  float a1 = ${a.Wap.ERF_A1};\n  float a2 = ${a.Wap.ERF_A2};\n  float a3 = ${a.Wap.ERF_A3};\n  float a4 = ${a.Wap.ERF_A4};\n  float a5 = ${a.Wap.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),ks={kernelName:a.Omj,backendName:"webgl",kernelFunc:ws},Ss=zn({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Rt,dtype:"float32"}),Ts={kernelName:a.NEP,backendName:"webgl",kernelFunc:Ss};function Is(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:o}=t,i=o.shape.length,u=o.shape.slice();let l=s;return s<0&&(a.D5U.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),u.splice(l,0,1),Qn({inputs:{x:o},backend:r,attrs:{shape:u}})}const Ns={kernelName:a.YFo,backendName:"webgl",kernelFunc:Is},Cs="return exp(x) - 1.0;",$s=zn({opSnippet:Cs,packedOpSnippet:Cs,cpuKernelImpl:At}),Es={kernelName:a.Y0y,backendName:"webgl",kernelFunc:$s};class _s{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function Rs(e,t,n){const r=n.texData.get(e.dataId),s=a.D5U.sizeFromShape(e.shape),o=e.shape[e.shape.length-1],i=Qn({inputs:{x:e},backend:n,attrs:{shape:[s/o,o]}}),u=i.shape,l=new _s("real",u,t),c=new _s("imag",u,t),p=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],h=n.runWebGLProgram(l,p,"float32"),d=n.runWebGLProgram(c,p,"float32"),f=Fn({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const m=Qn({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}const As={kernelName:a.vwp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Rs(r,!1,n)}};class Os{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function Ds(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:o}=n;if(o=o||a.D5U.inferDtype(s),"string"===o){const e=a.D5U.getArrayFromDType(o,a.D5U.sizeFromShape(r));return e.fill(s),t.makeTensorInfo(r,o,e)}{const e=new Os(r,s),n=[[s]];return t.runWebGLProgram(e,[],o,n)}}const Fs={kernelName:a.deh,backendName:"webgl",kernelFunc:Ds};class Ms{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Bs={kernelName:a.Uyb,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new Ms(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},Ps="return floor(x);",Ls=zn({opSnippet:Ps,packedOpSnippet:Ps,cpuKernelImpl:Ot}),Vs={kernelName:a.OR,backendName:"webgl",kernelFunc:Ls},Us=Gn({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Ws={kernelName:a.jeX,backendName:"webgl",kernelFunc:Us};class zs{constructor(e){this.variableNames=["A"];const t=P(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Gs{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=P(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Hs={kernelName:a.eBW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:o}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,u="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[c,p]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],h=[p,c],d=[p,c,o];(u||i)&&(null==js&&(js=document.createElement("canvas").getContext("2d")),js.canvas.width=c,js.canvas.height=p,js.drawImage(s,0,0,c,p),s=js.canvas);const f=n.makeTensorInfo(h,"int32");n.texData.get(f.dataId).usage=l.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),s);const m=(0,a.OBj)().getBool("WEBGL_PACK")?new Gs(d):new zs(d),g=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),g}};let js;const Xs={kernelName:a._V0,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o,bias:i,preluActivationWeights:u}=t,{strides:l,pad:c,dataFormat:p,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:m}=r,g=a.Wap.convertConv2DDataFormat(p),y=a.Wap.computeConv2DInfo(s.shape,o.shape,l,h,c,d,!1,g);let x;const b=[];if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if((0,a.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])x=Da({x:s,filter:o,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else{const e=null!=i,t=null!=u,r="leakyrelu"===f,l=f?Hn(f,!1):null,c=new _a(y,e,l,t,r),p=[s,o];if(i&&p.push(i),u&&p.push(u),r){const e=n.makeTensorInfo([],"float32",a.D5U.createScalarValue(m,"float32"));p.push(e),b.push(e)}x=n.runWebGLProgram(c,p,"float32")}else x=Oa({x:s,filter:o,convInfo:y,backend:n,bias:i,activation:f,preluActivationWeights:u,leakyreluAlpha:m});const v=Qn({inputs:{x},backend:n,attrs:{shape:y.outShape}});return b.push(x),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}},Ks={kernelName:a.luS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:o,bias:i,preluActivationWeights:u}=t,{strides:l,pad:c,dilations:p,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=r,m=[];let g=p;null==g&&(g=[1,1]),a.D5U.assert(a.Wap.eitherStridesOrDilationsAreOne(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const y=a.Wap.computeConv2DInfo(s.shape,o.shape,l,g,c,h,!0),x=(0,a.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,b=d?Hn(d,x):null,v=[s,o],w=null!=i,k=null!=u,S="leakyrelu"===d;if(w&&v.push(i),k&&v.push(u),S){const e=n.makeTensorInfo([],"float32",a.D5U.createScalarValue(f,"float32"));v.push(e),m.push(e)}let T;T=x?new ss(y,w,b,k,S):new as(y,w,b,k,S);const I=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],N=n.runWebGLProgram(T,v,"float32",I);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class qs{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=J(t.length),a=J(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const Ys={kernelName:a.q1x,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,o=s.shape,i=o[o.length-1],u=a.D5U.sizeFromShape(r.shape),[l,c,p,h]=a.Wap.prepareAndValidate(r,s),d=Qn({inputs:{x:s},backend:n,attrs:{shape:[c,i]}}),f=Qn({inputs:{x:r},backend:n,attrs:{shape:[a.D5U.sizeFromShape(r.shape)/p,p]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=Dt(e,t,r.dtype,c,i,p,h,r.shape,u);return n.makeTensorInfo(l,r.dtype,a.values)}const m=new qs(i,h,[c,p]),g=n.runWebGLProgram(m,[f,d],f.dtype),y=Qn({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}};class Qs{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=J(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function Zs(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:o}=t,{axis:i,batchDims:u}=r,l=a.D5U.parseAxisParam(i,s.shape)[0];if((0,a.OBj)().get("DEBUG")){const e=n.readSync(o.dataId),t=s.shape[l];for(let n=0;n<e.length;++n){const r=e[n];a.D5U.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const c=a.Wap.segment_util.collectGatherOpShapeInfo(s,o,l,u),p=a.D5U.sizeFromShape(o.shape),h=[],d=Qn({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=Qn({inputs:{x:o},backend:n,attrs:{shape:[c.batchSize,p/c.batchSize]}});h.push(d),h.push(f);const m=[c.batchSize,c.outerSize,p/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([s,o])||"string"===s.dtype){const e=n.bufferSync(f),t=n.bufferSync(d),r=Ft(t,e,m);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const g=new Qs(d.shape,m),y=n.runWebGLProgram(g,[d,f],d.dtype);h.push(y);const x=Qn({inputs:{x:y},backend:n,attrs:{shape:c.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}const Js={kernelName:a.qi_,backendName:"webgl",kernelFunc:Zs},eo=Gn({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Mt,dtype:"bool"}),to={kernelName:a.iZT,backendName:"webgl",kernelFunc:eo},no=Gn({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Bt}),ro={kernelName:a.Acj,backendName:"webgl",kernelFunc:no},ao={kernelName:a.Qg5,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Rs(r,!0,n)}},so=zn({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),oo={kernelName:a.avt,backendName:"webgl",kernelFunc:so},io=zn({opSnippet:"return float(isinf(x));",dtype:"bool"}),uo={kernelName:a.iWB,backendName:"webgl",kernelFunc:io},lo=zn({opSnippet:"return float(isnan(x));",dtype:"bool"}),co={kernelName:a.r7n,backendName:"webgl",kernelFunc:lo},po=Gn({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Pt,dtype:"bool"}),ho={kernelName:a.vtC,backendName:"webgl",kernelFunc:po},fo=Gn({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Lt,dtype:"bool"}),mo={kernelName:a.CAk,backendName:"webgl",kernelFunc:fo},go={kernelName:a.e7N,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,o=Vt(r,a,s);return t.makeTensorInfo([o.length],"float32",o)}},yo=zn({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:Ut}),xo={kernelName:a.ZbH,backendName:"webgl",kernelFunc:yo},bo=zn({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),vo={kernelName:a.kU,backendName:"webgl",kernelFunc:bo},wo=Gn({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),ko={kernelName:a.PYm,backendName:"webgl",kernelFunc:wo},So=zn({opSnippet:"return float(!(x >= 1.0));"}),To={kernelName:a.VfG,backendName:"webgl",kernelFunc:So},Io=Gn({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),No={kernelName:a.MZg,backendName:"webgl",kernelFunc:Io};class Co{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}class $o{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}const Eo={kernelName:a.eZ0,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:o,bias:i,alpha:u,beta:l}=r,c=(0,a.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new $o(s.shape,o,i,u,l):new Co(s.shape,o,i,u,l);return n.runWebGLProgram(c,[s],s.dtype)}};class _o{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Ro={kernelName:a.Hhh,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:o}=t,{depthRadius:i,bias:u,alpha:l,beta:c}=r,p=new _o(a.shape,i,u,l,c);return n.runWebGLProgram(p,[a,s,o],a.dtype)}};function Ao(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:o,keepDims:i}=r,u=s.shape.length,l=a.D5U.parseAxisParam(o,s.shape);let c=l;const p=a.Wap.getAxesPermutation(c,u),h=null!=p,d=n.shouldExecuteOnCPU([s]);let f=s;if(h){if(d){const e=n.texData.get(f.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=s.shape[p[e]];const r=hn(e,s.shape,s.dtype,p,t);f=n.makeTensorInfo(t,s.dtype),n.texData.get(f.dataId).values=r}else f=ar(s,p,n);c=a.Wap.getInnerMostAxes(c.length,u)}a.Wap.assertAxesAreInnerMostDims("max",c,u);const[m,g]=a.Wap.computeOutAndReduceShapes(f.shape,c);let y,x=m;if(i&&(x=a.Wap.expandShapeToKeepDim(m,l)),d){const e=n.texData.get(f.dataId).values,t=Wt(e,a.D5U.sizeFromShape(g),x,s.dtype);y=n.makeTensorInfo(x,s.dtype),n.texData.get(y.dataId).values=t}else y=function(e,t,n,r){const s=a.D5U.sizeFromShape(t),o=Qn({inputs:{x:e},attrs:{shape:[a.D5U.sizeFromShape(e.shape)/s,s]},backend:r}),i=tr(o,e.dtype,"max",r),u=Qn({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(i),u}(f,g,x,n);return h&&n.disposeIntermediateTensorInfo(f),y}const Oo={kernelName:a.YoZ,backendName:"webgl",kernelFunc:Ao},Do=Gn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:zt}),Fo={kernelName:a.BMI,backendName:"webgl",kernelFunc:Do},Mo={kernelName:a.mTV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;M(s,"maxPool");const{filterSize:o,strides:i,pad:u,dimRoundingMode:l}=r;a.D5U.assert(a.Wap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=a.Wap.computePool2DInfo(s.shape,o,i,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&a.D5U.arraysEqual(c.inShape,c.outShape))return On({inputs:{x:s},backend:n});const p=new Wr(c,"max",!1);return n.runWebGLProgram(p,[s],s.dtype)}},Bo={kernelName:a.OAf,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:o,strides:i,pad:u,dataFormat:l,dimRoundingMode:c}=r,p=a.Wap.computePool3DInfo(s.shape,o,i,[1,1,1],u,c,l),h=new zr(p,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class Po{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=a-1-e.padInfo.top,i=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Lo{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=i-1-e.padInfo.front,p=u-1-e.padInfo.top,h=l-1-e.padInfo.left,d=i*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${p}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Vo={kernelName:a.OU7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o}=t,i=o,{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=r,h=a.Wap.computePool3DInfo(i.shape,u,l,[1,1,1],c,p),d=new zr(h,"max",!0),f=n.runWebGLProgram(d,[i],i.dtype),m=new Lo(h),g=n.runWebGLProgram(m,[s,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}},Uo={kernelName:a.OV7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:o,output:i}=t,u=o;M([o,i],"maxPoolGrad");const{filterSize:l,strides:c,pad:p,dimRoundingMode:h}=r,d=a.Wap.computePool2DInfo(u.shape,l,c,1,p,h),f=new Wr(d,"max",!0),m=n.runWebGLProgram(f,[u],u.dtype),g=new Po(d),y=n.runWebGLProgram(g,[s,m],u.dtype);return n.disposeIntermediateTensorInfo(m),y}},Wo={kernelName:a.vFR,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:o,pad:i,includeBatchInIndex:u}=t,l=n;a.D5U.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const c=[1,1];a.D5U.assert(a.Wap.eitherStridesOrDilationsAreOne(o,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`));const p=a.Wap.computePool2DInfo(r.shape,s,o,c,i),[h,d]=function(e,t,n,r){let a=new Wr(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new Wr(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,u,p,l);return[h,d]}},zo={kernelName:a.q2K,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:o}=t,i=n,u=r.shape.length,l=a.D5U.parseAxisParam(o,r.shape);let c=l;const p=a.Wap.getAxesPermutation(c,u),h=null!=p,d=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(h){if(d){const e=i.texData.get(m.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=r.shape[p[e]];const n=hn(e,r.shape,r.dtype,p,t);m=i.makeTensorInfo(t,r.dtype),i.texData.get(m.dataId).values=n}else m=ar(r,p,i);f.push(m),c=a.Wap.getInnerMostAxes(c.length,u)}a.Wap.assertAxesAreInnerMostDims("sum",c,u);const[g,y]=a.Wap.computeOutAndReduceShapes(m.shape,c);let x=g;s&&(x=a.Wap.expandShapeToKeepDim(g,l));const b=function(e,t,n,r){const s=a.D5U.sizeFromShape(t),o=Qn({inputs:{x:e},attrs:{shape:[a.D5U.sizeFromShape(e.shape)/s,s]},backend:r}),i=tr(o,"float32","mean",r),u=Qn({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(i),u}(m,y,x,i);for(const e of f)i.disposeIntermediateTensorInfo(e);return b}},Go={kernelName:a.c17,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:i}=r,u=s.shape.length,l=a.D5U.parseAxisParam(o,s.shape);let c=l;const p=a.Wap.getAxesPermutation(c,u);let h=s;null!=p&&(h=ir({inputs:{x:s},backend:n,attrs:{perm:p}}),c=a.Wap.getInnerMostAxes(c.length,s.shape.length)),a.Wap.assertAxesAreInnerMostDims("min",c,u);const[d,f]=a.Wap.computeOutAndReduceShapes(h.shape,c),m=Qn({inputs:{x:h},backend:n,attrs:{shape:[-1,a.D5U.sizeFromShape(f)]}}),g=tr(m,m.dtype,"min",n);let y;return y=Qn(i?{inputs:{x:g},backend:n,attrs:{shape:a.Wap.expandShapeToKeepDim(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=p&&n.disposeIntermediateTensorInfo(h),y}},Ho=Gn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Gt}),jo={kernelName:a.q8u,backendName:"webgl",kernelFunc:Ho};class Xo{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=J(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class Ko{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=J(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=mn("rc",r),u=mn("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,p="reflect"===n?0:1;let h="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${i[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const qo={kernelName:a.jQs,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:o}=n,i=(0,a.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ko(r.shape,s,o):new Xo(r.shape,s,o);return t.runWebGLProgram(i,[r],r.dtype)}},Yo=Gn({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Qo={kernelName:a.Vbg,backendName:"webgl",kernelFunc:Yo};class Zo{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const Jo=Gn({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),ei={kernelName:a.oHH,backendName:"webgl",kernelFunc:Jo},ti="return a - b;",ni=Gn({opSnippet:ti,packedOpSnippet:ti,supportsComplex:!0,cpuKernelImpl:ln}),ri={kernelName:a.Tr8,backendName:"webgl",kernelFunc:ni};function ai(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:o}=r,i=a.D5U.parseAxisParam([o],s.shape),u=Ao({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=a.Wap.expandShapeToKeepDim(u.shape,i),c=Qn({inputs:{x:u},backend:n,attrs:{shape:l}}),p=ni({inputs:{a:s,b:c},backend:n}),h=Ss({inputs:{x:p},backend:n}),d=sr({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),f=Qn({inputs:{x:d},backend:n,attrs:{shape:l}}),m=Jo({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}const si={kernelName:a.Gcp,backendName:"webgl",kernelFunc:ai},oi={kernelName:a.NZg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:o,normalized:i}=r,u=i?a:ai({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],p=new Zo(l,c,s),h=[[o]],d=n.runWebGLProgram(p,[u],"int32",h);return i||n.disposeIntermediateTensorInfo(u),d}},ii={kernelName:a.kuV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=jt(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let s;return s=(0,a.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new In(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new kn(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(s,[r],r.dtype)}},ui=a.GDt.GP,li={kernelName:a.uv1,backendName:"webgl",kernelFunc:function(e){a.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:l}=r,c=n.readSync(s.dataId),p=n.readSync(o.dataId),{selectedIndices:h}=ui(c,p,i,u,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},ci=a.GDt.qP,pi={kernelName:a.cye,backendName:"webgl",kernelFunc:function(e){a.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:l,padToMaxOutputSize:c}=r,p=n.readSync(s.dataId),h=n.readSync(o.dataId),{selectedIndices:d,validOutputs:f}=ci(p,h,i,u,l,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},hi=a.GDt.pA,di={kernelName:a.W0H,backendName:"webgl",kernelFunc:function(e){a.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:o}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:l,softNmsSigma:c}=r,p=n.readSync(s.dataId),h=n.readSync(o.dataId),d=i,f=u,m=l,g=c,{selectedIndices:y,selectedScores:x}=hi(p,h,d,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([x.length],"float32",new Float32Array(x))]}};class fi{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const mi={kernelName:a.we_,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:o,onValue:i,offValue:u}=r,l=a.D5U.sizeFromShape(s.shape),c=new fi(l,o,i,u),p=Qn({inputs:{x:s},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(c,[p],s.dtype);n.disposeIntermediateTensorInfo(p);const d=Qn({inputs:{x:h},backend:n,attrs:{shape:[...s.shape,o]}});return n.disposeIntermediateTensorInfo(h),d}};function gi(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=ca({inputs:{input:r},backend:n}),t=gi({inputs:{x:e},backend:n}),a=Ia({inputs:{input:r},backend:n}),s=gi({inputs:{x:a},backend:n}),o=Fn({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}return Ds({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const yi={kernelName:a.RuY,backendName:"webgl",kernelFunc:gi},xi={kernelName:a.qWM,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=ca({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=Ia({inputs:{input:a},backend:r}),o=gi({inputs:{x:s},backend:r}),i=Fn({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),i}return Ds({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},bi={kernelName:a.QiL,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return Is({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const o=t[0].shape,i=t[0].dtype;t.forEach((e=>{a.D5U.assertShapesMatch(o,e.shape,"All tensors passed to stack must have matching shapes"),a.D5U.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],l=$a({inputs:t.map((e=>{const t=Is({inputs:{input:e},backend:n,attrs:{dim:s}});return u.push(t),t})),backend:n,attrs:{axis:s}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class vi{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=J(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class wi{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=J(r),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=mn("rc",r),u=mn("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,p=[`${a} rc = outputLoc;`,`${i[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${l}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===r?2:4;e<t;e++)d+=`\n        ${p[e]}\n        if (${h}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const ki=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:o,constantValue:i}=r;if(0===a.D5U.sizeFromShape(s.shape))return Ds({backend:n,attrs:{shape:o.map(((e,t)=>e[0]+s.shape[t]+e[1])),value:i,dtype:s.dtype}});const u=(0,a.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wi(s.shape,o,i):new vi(s.shape,o,i),l=[[i]];return n.runWebGLProgram(u,[s],s.dtype,l)},Si={kernelName:a.lyA,backendName:"webgl",kernelFunc:ki},Ti=Gn({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Ii={kernelName:a.pe_,backendName:"webgl",kernelFunc:Ti},Ni={kernelName:a.DlI,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:o,keepDims:i}=r,u=s.shape.length,l=[],c=a.D5U.parseAxisParam(o,s.shape);let p=c;const h=a.Wap.getAxesPermutation(p,u);let d,f=s;if(null!=h&&(f=ir({inputs:{x:s},backend:n,attrs:{perm:h}}),p=a.Wap.getInnerMostAxes(p.length,u),l.push(f)),a.Wap.assertAxesAreInnerMostDims("prod",p,u),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:a}=Kt(f.shape,f.dtype,e,p);d=n.makeTensorInfo(r,a,t)}else{const[e,t]=a.Wap.computeOutAndReduceShapes(f.shape,p),r=a.D5U.sizeFromShape(t),o=Qn({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),i=tr(o,(0,a.z4k)(s.dtype),"prod",n);d=Qn({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(o),l.push(i)}if(i){l.push(d);const e=a.Wap.expandShapeToKeepDim(d.shape,c);d=Qn({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},Ci=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:o}=n,i=qt(r,a,s,o);return t.makeTensorInfo([i.length],o,i)},$i={kernelName:a.e6w,backendName:"webgl",kernelFunc:Ci},Ei=zn({opSnippet:"return 1.0 / x;"}),_i={kernelName:a.$HU,backendName:"webgl",kernelFunc:Ei},Ri=zn({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Ai={kernelName:a.qkr,backendName:"webgl",kernelFunc:Ri},Oi=zn({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Di={kernelName:a.SbG,backendName:"webgl",kernelFunc:Oi};class Fi{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let p;p=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class Mi{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let p;p=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const Bi={kernelName:a._Yw,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:o,halfPixelCenters:i,size:u}=r,[l,c]=u,p=(0,a.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Mi(s.shape,l,c,o,i):new Fi(s.shape,l,c,o,i);return n.runWebGLProgram(p,[s],"float32")}};class Pi{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,o]=e,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],u=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/u[0],c=i[1]/u[1],p=1/l,h=1/c,d=2*Math.ceil(p)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Li={kernelName:a.zbQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:o}=r,i=new Pi(s.shape,a.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class Vi{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=r?"0.5":"0.0";let h;h=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Ui{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=r?"0.5":"0.0";let h;h=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const Wi={kernelName:a.dpD,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:o,halfPixelCenters:i,size:u}=r,[l,c]=u,p=(0,a.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Ui(s.shape,l,c,o,i):new Vi(s.shape,l,c,o,i);return n.runWebGLProgram(p,[s],s.dtype)}};class zi{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,o]=e,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],u=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/u[0],c=i[1]/u[1],p=1/l,h=1/c,d=2*Math.ceil(p)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Gi={kernelName:a.Hmb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:o}=r,i=new zi(s.shape,a.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class Hi{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=J(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class ji{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=mn("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=J(n);function i(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return i(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Xi={kernelName:a.mKl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:o}=r,i=s.shape.length,u=a.D5U.parseAxisParam(o,s.shape);if(0===i)return On({inputs:{x:s},backend:n});const l=(0,a.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ji(s.shape,u):new Hi(s.shape,u);return n.runWebGLProgram(l,[s],s.dtype)}};class Ki{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const qi={kernelName:a.b9H,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:o,center:i}=t,u=n,l=new Ki(r.shape,o),[c,p]=a.Wap.getImageCenter(i,r.shape[1],r.shape[2]),h=[[c,p,Math.sin(s),Math.cos(s)]];return u.runWebGLProgram(l,[r],r.dtype,h)}},Yi=zn({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Qi={kernelName:a.e07,backendName:"webgl",kernelFunc:Yi},Zi=zn({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Yt}),Ji={kernelName:a.bV0,backendName:"webgl",kernelFunc:Zi};class eu{constructor(e,t,n,r,a,s,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=J(a.length),u=J(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let p="";1===r?p="i":2===r&&(p="i, coords[1]");const h=`getUpdates(${p})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const tu={kernelName:a.xQA,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:o}=t,{shape:i}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:h}=a.Wap.calculateShapes(o,s,i),d=[h/c,c];if(0===h)return n.makeTensorInfo(i,s.dtype);const f=Qn({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=Qn({inputs:{x:o},backend:n,attrs:{shape:[l,c]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),y=new eu(l,u,f.shape.length,m.shape.length,p,d),x=n.runWebGLProgram(y,[m,f,g],m.dtype),b=Qn({inputs:{x},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(g),b}};class nu{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let r=0;r<t.length;r++)o.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=o.join()}const s=J(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const ru={kernelName:a.PhF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:o}=t,i=new nu(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,o],(0,a.x8V)(s.dtype,o.dtype))}},au=zn({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${a.Wap.SELU_SCALEALPHA};\n  float scale = ${a.Wap.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),su={kernelName:a.oFR,backendName:"webgl",kernelFunc:au},ou=zn({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Qt}),iu={kernelName:a.a5O,backendName:"webgl",kernelFunc:ou},uu=zn({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),lu={kernelName:a.i5y,backendName:"webgl",kernelFunc:uu},cu=zn({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),pu={kernelName:a.RQH,backendName:"webgl",kernelFunc:cu},hu=zn({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),du={kernelName:a.wYB,backendName:"webgl",kernelFunc:hu},fu=zn({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),mu={kernelName:a.MRv,backendName:"webgl",kernelFunc:fu},gu={kernelName:a.TQc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:o,paddings:i}=r;a.D5U.assert(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const u=o.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+o.length;e<s.shape.length;++e)l.push([0,0]);const c=[],p=ki({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=a.Wap.getReshaped(p.shape,o,u,!1),d=a.Wap.getPermuted(h.length,o.length,!1),f=a.Wap.getReshapedPermuted(p.shape,o,u,!1),m=Qn({inputs:{x:p},backend:n,attrs:{shape:h}}),g=ir({inputs:{x:m},backend:n,attrs:{perm:d}}),y=Qn({inputs:{x:g},backend:n,attrs:{shape:f}});return c.push(p),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},yu={kernelName:a.O3z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==o.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${o.shape}`);const i=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(s.dataId),c=n.readSync(o.dataId)[0],[p,h,d,f,m]=en(i,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(h,r.dtype,p),n.makeTensorInfo([h[0]],a.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},xu={kernelName:a.nhH,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const o=Array.from(n.readSync(a.dataId)),i=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,p]=tn(i,r.shape,r.dtype,o,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}},bu={kernelName:a.w3H,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const o=n.readSync(r.dataId),i=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=nn(o,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},vu={kernelName:a.ZjV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const o=n.readSync(r.dataId),i=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=nn(o,r.shape,r.dtype,i,u);return n.makeTensorInfo(c,r.dtype,l)}},wu={kernelName:a.D2d,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:o,defaultValue:i}=t,{outputShape:u}=r,{sliceRank:l,numUpdates:c,strides:p,outputSize:h}=a.Wap.calculateShapes(o,s,u),d=new eu(c,l,s.shape.length,o.shape.length,p,[h,1],!1),f=n.runWebGLProgram(d,[o,s,i],o.dtype),m=Qn({inputs:{x:f},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(f),m}},ku={kernelName:a.L8s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:o,axis:i}=r,u=a.D5U.parseAxisParam(i,s.shape)[0],l=a.Wap.prepareSplitSize(s,o,u),c=s.shape.length,p=new Array(c).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[u]=e;const r=ra({inputs:{x:s},backend:n,attrs:{begin:p,size:t}});return p[u]+=e,r}))}},Su="return sqrt(x);",Tu=zn({opSnippet:Su,packedOpSnippet:Su,cpuKernelImpl:rn}),Iu={kernelName:a.FKq,backendName:"webgl",kernelFunc:Tu},Nu=zn({opSnippet:"return x * x;"}),Cu={kernelName:a.bK0,backendName:"webgl",kernelFunc:Nu},$u="return (a - b) * (a - b);",Eu=Gn({opSnippet:$u,packedOpSnippet:$u}),_u={kernelName:a._tC,backendName:"webgl",kernelFunc:Eu},Ru={kernelName:a.h8e,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new kn(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};class Au{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=J(n.length),s=J(n.length);let o="";if(1===r)o="coords * strides + begin";else{let e=0;o=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}const Ou={kernelName:a.jQk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:o,end:i,strides:u,beginMask:l,endMask:c,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:x,begin:b,end:v,strides:w}=a.kuN.sliceInfo(s.shape,o,i,u,l,c,p,h,d);let k;if(g)k=Qn({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||x){a.D5U.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=a.kuN.computeOutShape(b,v,w),t=ra({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});k=Qn({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=(0,a.f3b)(s.shape,s.dtype,e),r=an(f,t,w,b);k=n.makeTensorInfo(m,s.dtype,r.values)}else{const e=new Au(b,w,f);k=n.runWebGLProgram(e,[s],s.dtype)}const S=Qn({inputs:{x:k},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(k),S}},Du={kernelName:a._JP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:p}=t,h=n.readSync(c.dataId),d=n.readSync(p.dataId),[f,m]=sn(h,d,a,s,o,i,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}},Fu={kernelName:a.s1s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==o.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const i=n.readSync(s.dataId),u=n.readSync(o.dataId)[0],[l,c,p]=on(i,u,a),h=c.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(p))]}},Mu={kernelName:a.XkS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(s.dataId),i=un(o,a);return n.makeTensorInfo(s.shape,"int32",i)}},Bu=zn({opSnippet:"return tan(x);"}),Pu={kernelName:a.sEM,backendName:"webgl",kernelFunc:Bu},Lu=zn({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Vu={kernelName:a.MIZ,backendName:"webgl",kernelFunc:Lu};class Uu{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=J(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function Wu(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:o}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>a.D5U.decodeString(e))):e,r=(0,a.f3b)(s.shape,s.dtype,t),i=cn(r,o);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new Uu(s.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}const zu={kernelName:a.n9L,backendName:"webgl",kernelFunc:Wu};class Gu{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class Hu{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function ju(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function Xu(e){let t=1;for(;t<e;)t*=2;return t}const Ku={kernelName:a.cWu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:o,sorted:i}=r,u=(0,a.OBj)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=(0,a.OBj)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=s.shape,p=c[c.length-1];if(n.shouldExecuteOnCPU([s])||p<u||o>l){const e=n.readSync(s.dataId),[t,r]=pn(e,c,s.dtype,o,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===o)return c[c.length-1]=0,[n.makeTensorInfo(c,s.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===p)return[s,Ds({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),d=null!==h&&h.isPacked,f=d?n.unpackTensor(s):s,m=a.D5U.sizeFromShape(c)/p,g=Qn({inputs:{x:f},attrs:{shape:[m,p]},backend:n});d&&ju(n,f);const y=Xu(o),x=Xu(p);let b=null;const v=()=>null===b?[g,g]:[g,b],w=(e,t,r)=>{const a=v(),s=new Gu(r),o=[[p],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=b;b=n.runWebGLProgram(s,a,"int32",o),ju(n,i)};for(let e=1;e<y;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[m,x])}for(let e=x;e>y;e/=2){const t=v(),r=new Hu([m,e/2]),a=[[p],[null===b?1:0],[y]],s=b;b=n.runWebGLProgram(r,t,"int32",a),ju(n,s);const o=y/2,i=2*o;for(let e=o;e>=1;e/=2)w(i,e,b.shape)}let k=b;b=ra({inputs:{x:b},backend:n,attrs:{begin:0,size:[m,o]}}),ju(n,k);let S=Zs({inputs:{x:g,indices:b},backend:n,attrs:{axis:1,batchDims:1}});ju(n,g);const T=c.slice(0,-1);T.push(o),k=b,b=Qn({inputs:{x:b},attrs:{shape:T},backend:n}),ju(n,k);const I=S;return S=Qn({inputs:{x:S},attrs:{shape:T},backend:n}),ju(n,I),[S,b]}};class qu{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(r){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const Yu={kernelName:a.wx7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:l}=r,[c,p,h,d]=a.shape,[f,m]=null!=l?l:[p,h],g=new qu(p,h,o,i,u,[c,f,m,d]);return n.runWebGLProgram(g,[a,s],"float32")}},Qu={kernelName:a.kpP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;M(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=r.readSync(s.dataId),{outputValues:i,outputShape:u,indices:l}=dn(o,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}},Zu={kernelName:a.ToN,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const o=a,i=o.shape.length,u=a.shape[s],l=new Array(i-1);let c=0;for(let e=0;e<i;e++)e!==s&&(l[c++]=o.shape[e]);const p=[],h=new Array(i).fill(0),d=o.shape.slice();d[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){h[s]=e;const t=ra({inputs:{x:o},backend:n,attrs:{begin:h,size:d}}),r=Qn({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,p.push(t)}return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class Ju{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,o=s*Math.ceil(a/n);this.outputShape=[r,o];const i=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const el=[cr,hr,fr,gr,br,kr,Sr,Tr,_r,Rr,Or,Fr,Br,Lr,Ur,Gr,Hr,Kr,qr,Yr,Jr,sa,oa,ia,ha,ma,xa,Mn,wa,Ea,Fa,Va,Ua,Wa,za,Ga,ja,Ka,Ya,es,ts,rs,os,ls,cs,hs,fs,ms,ys,xs,vs,ks,Ts,Ns,Es,As,Fs,Bs,Vs,Ws,Hs,Xs,Ks,Ys,Js,to,ro,Dn,ao,Na,oo,uo,co,Ln,ho,mo,go,xo,vo,ko,To,No,Eo,Ro,Oo,Fo,Mo,Bo,Vo,Uo,Wo,zo,Go,jo,qo,Qo,oi,Yn,ii,li,pi,di,la,mi,xi,bi,Si,Ii,Wn,Ni,$i,pa,ei,_i,Ai,Di,Zn,Bi,Li,Wi,Gi,Xi,qi,Qi,Ji,tu,ru,su,iu,lu,pu,du,aa,si,mu,gu,yu,xu,bu,vu,wu,ku,Iu,Cu,_u,Ru,Ou,Du,Fu,Mu,ri,or,Pu,Vu,zu,Ku,Yu,ur,Qu,Zu,{kernelName:a.Qvg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:o}=t,{numSegments:i}=r,u=s.shape.length,l=[];let c=0;const p=a.Wap.getAxesPermutation([c],u);let h=s;null!=p&&(h=ir({inputs:{x:s},backend:n,attrs:{perm:p}}),l.push(h),c=a.Wap.getInnerMostAxes(1,u)[0]);const d=a.Wap.segment_util.computeOutShape(h.shape,c,i),f=a.D5U.sizeFromShape([h.shape[c]]),m=Qn({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});l.push(m);const g=(0,a.z4k)(s.dtype),y=(e,t,r,s,o)=>{const i=e.shape[0],u=e.shape[1],c=a.Wap.segment_util.segOpComputeOptimalWindowSize(u,o),p=new Ju({windowSize:c,inSize:u,batchSize:i,numSegments:o},t),h=n.compileAndRun(p,[e,r],s);if(l.push(h),h.shape[1]===o)return h;const d=Ci({backend:n,attrs:{start:0,stop:o,step:1,dtype:"float32"}}),f=Wu({inputs:{x:d},backend:n,attrs:{reps:[u/c]}});return l.push(d),l.push(f),y(h,t,f,s,o)},x=Qn({inputs:{x:y(m,"unsortedSegmentSum",o,g,i)},backend:n,attrs:{shape:d}});let b=x;if(null!=p){l.push(x);const e=a.Wap.getUndoAxesPermutation(p);b=ir({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},yi];for(const e of el)(0,a.wCN)(e)},9489:(e,t,n)=>{"use strict";n.d(t,{JL:()=>r,Zu:()=>a});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class a{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}readToGPU(e,t){return s("readToGPU")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,r,a){return s("move")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},1782:(e,t,n)=>{"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,o=!1;for(;r<a;){s=r+(a-r>>>1);const i=n(t,e[s]);i>0?r=s+1:(a=s,o=!i)}return o?r:-r-1}(e,t,n||a)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function a(e,t){return e>t?1:e<t?-1:0}function s(e,t,n,r,a){return u(e,t,n,r,a,0)}function o(e,t,n,r,a,s){return u(e,t,n,r,a,0,!1,s,!0)}function i(e,t,n,r,a,s){return u(e,t,n,r,a,s,!0)}function u(e,t,n,a,s,o,i=!1,u=!1,h=!1){const d=[];for(let e=0;e<t.length;e++)t[e]>s&&d.push({score:t[e],boxIndex:e,suppressBeginIndex:0});d.sort(p);const f=o>0?-.5/o:0,m=[],g=[];for(;m.length<n&&d.length>0;){const t=d.pop(),{score:n,boxIndex:o,suppressBeginIndex:i}=t;if(n<s)break;let u=!1;for(let n=m.length-1;n>=i;--n){const r=l(e,o,m[n]);if(r>=a){u=!0;break}if(t.score=t.score*c(a,f,r),t.score<=s)break}t.suppressBeginIndex=m.length,u||(t.score===n?(m.push(o),g.push(t.score)):t.score>s&&r(d,t,p))}const y=m.length,x=n-y;u&&x>0&&(m.push(...new Array(x).fill(0)),g.push(...new Array(x).fill(0)));const b={selectedIndices:m};return i&&(b.selectedScores=g),h&&(b.validOutputs=y),b}function l(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),p=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),d=(i-s)*(u-o),f=(p-l)*(h-c);if(d<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(o,c),y=Math.min(i,p),x=Math.min(u,h),b=Math.max(y-m,0)*Math.max(x-g,0);return b/(d+f-b)}function c(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function p(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{GP:()=>s,qP:()=>o,pA:()=>i})},9830:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(2472);function a(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const a=(0,r.f)(e,"int32"),s=(0,r.f)([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const r=a.indexToLoc(n[t]),o=t*e.length;s.values.set(r,o)}return s.toTensor()}},1355:(e,t,n)=>{"use strict";n.d(t,{BV:()=>v,wv:()=>b});var r=n(9489),a=n(6142),s=n(645),o=n(4929),i=n(6207),u=n(1093),l=n(3882),c=n(6808);class p{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new d)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let o;const i=l.now();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();o=Promise.resolve({kernelMs:l.now()-i})}if((0,a.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{h(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:o.then((e=>e.kernelMs)),extraInfo:o.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function h(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class d{logKernelProfile(e,t,n,r,a,s){const o="number"==typeof r?c.oj(`${r}ms`,9):r.error,i=c.oj(e,25),u=t.rank,l=t.size,p=c.oj(t.shape.toString(),14);let h="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;h+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${i}\t%c${o}\t%c${u}D ${p}\t%c${l}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(8990),m=n(4722);function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class x{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(u.Z(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new p(this.backendInstance),!0}setupRegisteredKernels(){(0,i.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,i.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.Zu||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,u.Z(`Initialization of backend ${e} failed`),u.Z(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return u.Z(`Initialization of backend ${e} failed`),u.Z(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return x.nextTensorId++}nextVariableId(){return x.nextVariableId++}clone(e){const t=v.runKernel(o.iJ,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return v.runKernel(o.RF,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==(0,i.pI)(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-a-s;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let o,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const l=(0,i.pI)(t,this.backendName);c.hu(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();u=l.kernelFunc({inputs:a,attrs:s,backend:this.backend});const o=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const i=o.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:p,attrs:h}=e,d=g(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,p,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=o()})),r&&this.addTapeNode(l,p,t,d,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map((e=>null!=p[e]?p[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=(0,i.uk)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(c.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const o=n.filter(((e,t)=>a[t]));return s.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&c.HD(e[0])&&(a=e.map((e=>l.encodeString(e))));const s=r.write(a,t,n),o=new f.es(t,n,s,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const e=this.state.tensorInfo.get(s),t=(0,c.Ub)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){n=n||"float32";const a=new f.es(t,n,e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new f._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},u=(0,i.uk)(e);null!=u&&(r=u.gradFunc),null!=r&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=c.wT(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,m.Vu)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(c.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));c.hu(a instanceof f.es,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],o=s.inputs;for(const e in o){const n=o[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),i=!0,a[s.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,o[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&o[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=(0,c.p8)((0,c.NA)(e),"float32");return v.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],o=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const a=n((()=>i[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const o=s.inputs[t];if(!c.cO(a.shape,o.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=a;else{const t=e[o.id];e[o.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),w);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return c.hu(c.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;c.hu(t.every((e=>e instanceof f.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),c.hu(n.value instanceof f.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),c.hu(c.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];c.hu(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),c.hu(s.every((e=>e instanceof f.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return s.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,l.now)(),n=await this.backend.time(e);return n.wallMs=(0,l.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function b(){const e=(0,s.D)();if(null==e._tfengine){const t=new a.qA(e);e._tfengine=new x(t)}return(0,a.iG)(e._tfengine.ENV),(0,f.Vi)((()=>e._tfengine)),e._tfengine}x.nextTensorId=0,x.nextVariableId=0;const v=b();function w(e,t){const n={a:e,b:t};return v.runKernel(o.mm,n)}},6142:(e,t,n)=>{"use strict";n.d(t,{qA:()=>a,OB:()=>o,iG:()=>u});var r=n(6808);class a{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=s,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function s(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function o(){return i}let i=null;function u(e){i=e}},645:(e,t,n)=>{"use strict";n.d(t,{D:()=>s,R:()=>o});var r=n(4224);let a;function s(){if(null==a){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if(void 0!==r)e=r;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}a=e}return a}function o(e,t){const n=function(){const e=s();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}},3209:(e,t,n)=>{"use strict";n.d(t,{SR:()=>i,lu:()=>u,B9:()=>l,Cn:()=>c,CQ:()=>p,N_:()=>h,jq:()=>d});var r=n(1355),a=n(6142),s=n(8990),o=n(4722);function i(){return r.BV}function u(e,t){return r.BV.tidy(e,t)}function l(e){(0,o.Vu)(e).forEach((e=>e.dispose()))}function c(e){return r.BV.keep(e)}function p(e){return r.BV.setBackend(e)}function h(){return r.BV.backendName}function d(e,t,n=1){return r.BV.registerBackend(e,t,n)}(0,s.FZ)((function(e){(0,a.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}))},6450:(e,t,n)=>{"use strict";n.d(t,{cb:()=>a});var r=n(1355);function a(e){return r.BV.customGrad(e)}n(8990)},7110:(e,t,n)=>{"use strict";n.d(t,{SYM:()=>Le.SY,VGw:()=>Le.VG,SpW:()=>Le.Sp,mm_:()=>Le.mm,Xze:()=>Le.Xz,oT6:()=>Le.oT,IKK:()=>Le.IK,sJF:()=>Le.sJ,aJk:()=>Le.aJ,M2y:()=>Le.M2,qw7:()=>Le.qw,jMg:()=>Le.jM,QCc:()=>Le.QC,Oyi:()=>Le.Oy,JhU:()=>Le.Jh,_k9:()=>Le._k,IMb:()=>Le.IM,ROF:()=>Le.RO,XLW:()=>Le.XL,zws:()=>Le.zw,zvY:()=>Le.zv,eEB:()=>Le.eE,RFZ:()=>Le.RF,gJX:()=>Le.gJ,xnO:()=>Le.xn,Zz9:()=>Le.Zz,yj2:()=>Le.yj,Eh3:()=>Le.Eh,mhS:()=>Le.mh,wUP:()=>Le.wU,wm:()=>Le.wm,x12:()=>Le.x1,o2y:()=>Le.o2,ik2:()=>Le.ik,mc4:()=>Le.mc,TR1:()=>Le.TR,VcC:()=>Le.Vc,iHb:()=>Le.iH,JLz:()=>kn.JL,QRR:()=>Le.QR,T0n:()=>Le.T0,cie:()=>Le.ci,sL$:()=>Le.sL,y7R:()=>Le.y7,$w:()=>Le.$w,p4S:()=>Le.p4,$g6:()=>Le.$g,SX0:()=>Le.SX,HEU:()=>Le.HE,hdR:()=>Le.hd,Omj:()=>Le.Om,NEP:()=>Le.NE,YFo:()=>Le.YF,Y0y:()=>Le.Y0,vwp:()=>Le.vw,deh:()=>Le.de,Uyb:()=>Le.Uy,OR:()=>Le.OR,jeX:()=>Le.je,eBW:()=>Le.eB,sHE:()=>Le.sH,_V0:()=>Le._V,luS:()=>Le.lu,q1x:()=>Le.q1,qi_:()=>Le.qi,iZT:()=>Le.iZ,Acj:()=>Le.Ac,Qg5:()=>Le.Qg,iJz:()=>Le.iJ,J_u:()=>Le.J_,avt:()=>Le.av,iWB:()=>Le.iW,r7n:()=>Le.r7,Zuw:()=>kn.Zu,eZ0:()=>Le.eZ,Hhh:()=>Le.Hh,J$2:()=>Le.J$,vtC:()=>Le.vt,CAk:()=>Le.CA,e7N:()=>Le.e7,ZbH:()=>Le.Zb,kU:()=>Le.kU,PYm:()=>Le.PY,VfG:()=>Le.Vf,MZg:()=>Le.MZ,YoZ:()=>Le.Yo,mTV:()=>Le.mT,OAf:()=>Le.OA,OU7:()=>Le.OU,OV7:()=>Le.OV,vFR:()=>Le.vF,BMI:()=>Le.BM,q2K:()=>Le.q2,c17:()=>Le.c1,q8u:()=>Le.q8,jQs:()=>Le.jQ,Vbg:()=>Le.Vb,NZg:()=>Le.NZ,wYn:()=>Le.wY,kuV:()=>Le.ku,uv1:()=>Le.uv,cye:()=>Le.cy,W0H:()=>Le.W0,yQU:()=>Le.yQ,we_:()=>Le.we,qWM:()=>Le.qW,QiL:()=>Le.Qi,lyA:()=>Le.ly,pe_:()=>Le.pe,o0g:()=>Le.o0,DlI:()=>Le.Dl,e6w:()=>Le.e6,xJR:()=>Le.xJ,oHH:()=>Le.oH,$HU:()=>Le.$H,qkr:()=>Le.qk,SbG:()=>Le.Sb,HZH:()=>Le.HZ,_Yw:()=>Le._Y,zbQ:()=>Le.zb,dpD:()=>Le.dp,Hmb:()=>Le.Hm,mKl:()=>Le.mK,b9H:()=>Le.b9,e07:()=>Le.e0,bV0:()=>Le.bV,xQA:()=>Le.xQ,PhF:()=>Le.Ph,oFR:()=>Le.oF,a5O:()=>Le.a5,i5y:()=>Le.i5,RQH:()=>Le.RQ,wYB:()=>Le.w3,p2w:()=>Le.p2,Gcp:()=>Le.Gc,MRv:()=>Le.MR,TQc:()=>Le.TQ,O3z:()=>Le.O3,nhH:()=>Le.nh,w3H:()=>Le.YW,ZjV:()=>Le.Zj,D2d:()=>Le.D2,L8s:()=>Le.L8,FKq:()=>Le.FK,bK0:()=>Le.bK,_tC:()=>Le._t,h8e:()=>Le.h8,jQk:()=>Le.m2,_JP:()=>Le._J,s1s:()=>Le.s1,XkS:()=>Le.Xk,Tr8:()=>Le.Tr,GBy:()=>Le.GB,sEM:()=>Le.sE,MIZ:()=>Le.MI,esB:()=>be.es,YDk:()=>be.YD,n9L:()=>Le.n9,cWu:()=>Le.cW,wx7:()=>Le.wx,G3Y:()=>Le.G3,kpP:()=>Le.kp,ToN:()=>Le.To,Qvg:()=>Le.Qv,RuY:()=>Le.Ru,usg:()=>Le.us,IHx:()=>ft.IHx,NqF:()=>ft.NqF,Wap:()=>u,Jyw:()=>Pe,Xhn:()=>s,f3b:()=>ft.f3b,pju:()=>ft.pju,iUl:()=>ft.iUl,d9v:()=>ft.d9v,zoF:()=>ft.zoF,C2$:()=>r,B90:()=>mt.B9,hiC:()=>ft.hiC,SRH:()=>mt.SR,OBj:()=>m.OB,Qqt:()=>ft.Qqt,dt4:()=>ft.dt4,N_N:()=>mt.N_,BHj:()=>ft.BHj,io:()=>a,CnY:()=>mt.Cn,GDt:()=>l,dC7:()=>ft.dC7,vku:()=>ft.vku,jqO:()=>mt.jq,wCN:()=>Ve.wC,XLQ:()=>ft.XLQ,iD$:()=>ft.iD$,CQI:()=>mt.CQ,XD2:()=>ft.XD2,tPi:()=>ft.tPi,kuN:()=>o,L9e:()=>ft.L9e,knu:()=>ft.knu,luU:()=>ft.luU,z4k:()=>dt.z4,XeE:()=>ft.XeE,RRF:()=>ft.RRF,odF:()=>ft.odF,lub:()=>mt.lu,HHK:()=>ft.HHK,x8V:()=>dt.x8,D5U:()=>ht,lls:()=>ft.lls});var r={};n.r(r),n.d(r,{isBrowser:()=>f,isMobile:()=>d,mockIsMobile:()=>h});var a={};n.r(a),n.d(a,{browserFiles:()=>Te,browserHTTPRequest:()=>Oe,concatenateArrayBuffers:()=>C,copyModel:()=>pe,decodeWeights:()=>S,encodeWeights:()=>k,fromMemory:()=>Me,getLoadHandlers:()=>B,getModelArtifactsForJSON:()=>_,getModelArtifactsInfoForJSON:()=>R,getSaveHandlers:()=>M,http:()=>Ae,isHTTPScheme:()=>_e,listModels:()=>le,loadWeights:()=>Ce,moveModel:()=>he,registerLoadRouter:()=>F,registerSaveRouter:()=>D,removeModel:()=>ce,weightsLoaderFactory:()=>$e,withSaveHandler:()=>Be});var s={};n.r(s),n.d(s,{fromPixels:()=>Ke,fromPixelsAsync:()=>je,toPixels:()=>Xe});var o={};n.r(o),n.d(o,{assertParamsValid:()=>qe,computeFlatOffset:()=>ut,computeOutShape:()=>Qe,getNormalizedAxes:()=>tt,isSliceContinous:()=>it,maskToAxes:()=>Ye,parseSliceParams:()=>lt,sliceInfo:()=>ct,startForAxis:()=>st,startIndicesWithElidedDims:()=>nt,stopForAxis:()=>ot,stopIndicesWithElidedDims:()=>rt,stridesForAxis:()=>at,stridesWithElidedDims:()=>Ze});var i={};n.r(i),n.d(i,{collectGatherOpShapeInfo:()=>yn,computeOutShape:()=>gn,segOpComputeOptimalWindowSize:()=>mn});var u={};n.r(u),n.d(u,{ERF_A1:()=>Dt,ERF_A2:()=>Ft,ERF_A3:()=>Mt,ERF_A4:()=>Bt,ERF_A5:()=>Pt,ERF_P:()=>Ot,PARALLELIZE_THRESHOLD:()=>wt,SELU_SCALE:()=>At,SELU_SCALEALPHA:()=>Rt,applyActivation:()=>vt.QH,assertAndGetBroadcastShape:()=>Pe.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>gt.lB,assertParamsConsistent:()=>yt,assignToTypedArray:()=>Ht,axesAreInnerMostDims:()=>gt.YB,calculateShapes:()=>_t.SU,checkEinsumDimSizes:()=>Qt,checkPadOnDimRoundingMode:()=>bt.m,combineLocations:()=>gt.Vh,complexWithEvenIndex:()=>Wt,complexWithOddIndex:()=>zt,computeConv2DInfo:()=>bt.Ix,computeConv3DInfo:()=>bt.jw,computeDefaultPad:()=>bt.aO,computeDilation2DInfo:()=>bt.Rf,computeOptimalWindowSize:()=>kt,computeOutAndReduceShapes:()=>gt.kz,computeOutShape:()=>xt,computePool2DInfo:()=>bt.Xw,computePool3DInfo:()=>bt.pl,convertConv2DDataFormat:()=>bt.sl,decodeEinsumEquation:()=>qt,eitherStridesOrDilationsAreOne:()=>bt.jT,expandShapeToKeepDim:()=>gt.rv,exponent:()=>Xt,exponents:()=>jt,fromStringArrayToUint8:()=>bn,fromUint8ToStringArray:()=>xn,getAxesPermutation:()=>gt.Q3,getBroadcastDims:()=>Pe.getBroadcastDims,getComplexWithIndex:()=>Gt,getEinsumComputePath:()=>Zt,getEinsumPermutation:()=>Yt,getFusedBiasGradient:()=>vt.pf,getFusedDyActivation:()=>vt.Fr,getImageCenter:()=>St,getInnerMostAxes:()=>gt.sY,getPermuted:()=>It,getReductionAxes:()=>Pe.getReductionAxes,getReshaped:()=>Tt,getReshapedPermuted:()=>Nt,getSliceBeginCoords:()=>Ct,getSliceSize:()=>$t,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>nn,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>rn,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>an,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>un,getSparseReshapeInputOutputMismatchErrorMessage:()=>cn,getSparseReshapeInputOutputMultipleErrorMessage:()=>ln,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>sn,getSparseReshapeNegativeOutputDimErrorMessage:()=>on,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>fn,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>pn,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>hn,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>dn,getUndoAxesPermutation:()=>gt.LJ,isIdentityPermutation:()=>Jt,log:()=>Lt.c,mergeRealAndImagArrays:()=>Vt,prepareAndValidate:()=>Et,prepareSplitSize:()=>tn,segment_util:()=>i,shouldFuse:()=>vt.uy,slice_util:()=>o,splitRealAndImagArrays:()=>Ut,tupleValuesAreOne:()=>bt.I0,upcastType:()=>dt.x8,validateInput:()=>_t.b0,validateUpdateShape:()=>_t.l5,warn:()=>Lt.Z});var l={};n.r(l),n.d(l,{GP:()=>vn.GP,qP:()=>vn.qP,pA:()=>vn.pA,ZA:()=>wn.Z});var c=n(1355);let p;function h(e){p=e}function d(e){if(void 0!==p)return p;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function f(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var m=n(6142),g=n(4224);const y=(0,m.OB)();y.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),y.registerFlag("IS_BROWSER",(()=>f())),y.registerFlag("IS_NODE",(()=>void 0!==g&&void 0!==g.versions&&void 0!==g.versions.node)),y.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),y.registerFlag("PROD",(()=>!1)),y.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>y.getBool("DEBUG"))),y.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),y.registerFlag("IS_TEST",(()=>!1)),y.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),y.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));var x=n(1919),b=n(3558),v=n(6808);const w={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function k(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const o=a[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${o}': ${i.dtype}`);const u={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:T(await Promise.all(r)),specs:n}}function S(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,o=s.dtype,i=s.shape,u=(0,v.NA)(i);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${o}.`)}const i=w[n.dtype],c=e.slice(a,a+u*i),p="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===o)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=A()),l=r(p)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];l[e]=Math.round(t*n.scale+n.min)}}a+=u*i}else if("string"===o){const t=(0,v.NA)(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=w[o],s=e.slice(a,a+u*r);if("float32"===o)l=new Float32Array(s);else if("int32"===o)l=new Int32Array(s);else if("bool"===o)l=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=(0,b.X)(e,i,"float32"),o=(0,b.X)(r,i,"float32");n[t]=(0,x.P)(a,o),a.dispose(),o.dispose()}}a+=u*r}"complex64"!==o&&(n[t]=(0,b.X)(l,i,o))}return n}function T(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const I="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function N(e){return I?Buffer.byteLength(e):new Blob([e]).size}function C(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function $(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function E(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function _(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function R(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:N(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:N(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function A(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const o=r[a],i=e[n[o>>10]+(1023&o)]+t[o>>10];s[a]=i}return new Float32Array(a)}}class O{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==O.instance&&(O.instance=new O),O.instance}static registerSaveRouter(e){O.getInstance().saveRouters.push(e)}static registerLoadRouter(e){O.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return O.getHandlers(e,"save")}static getLoadHandlers(e,t){return O.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?O.getInstance().loadRouters:O.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const D=e=>O.registerSaveRouter(e),F=e=>O.registerLoadRouter(e),M=e=>O.getSaveHandlers(e),B=(e,t)=>O.getLoadHandlers(e,t),P="tensorflowjs",L="models_store",V="model_info_store";function U(){if(!(0,m.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function W(e){const t=e.result;t.createObjectStore(L,{keyPath:"modelPath"}),t.createObjectStore(V,{keyPath:"modelPath"})}class z{constructor(e){if(this.indexedDB=U(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(P,1);r.onupgradeneeded=()=>W(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(L,"readonly"),r=t.objectStore(L).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=R(t),s=a.transaction(V,"readwrite");let o=s.objectStore(V);const i=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=a.transaction(L,"readwrite");const i=u.objectStore(L).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{o=s.objectStore(V);const t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(i.error)),t.onerror=e=>(a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}z.URL_SCHEME="indexeddb://";const G=e=>{return(0,m.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(z.URL_SCHEME)?(t=e.slice(z.URL_SCHEME.length),new z(t)):null;var t};O.registerSaveRouter(G),O.registerLoadRouter(G);class H{constructor(){this.indexedDB=U()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(P,1);n.onupgradeneeded=()=>W(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(V,"readonly"),s=a.objectStore(V).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(z.URL_SCHEME)?t.slice(z.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(P,1);r.onupgradeneeded=()=>W(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(V,"readwrite"),o=s.objectStore(V),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),s=()=>{u=a.transaction(L,"readwrite");const r=u.objectStore(L).delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const j="/",X="tensorflowjs_models",K="info",q="model_topology",Y="weight_specs",Q="weight_data",Z="model_metadata";function J(e){return{info:[X,e,K].join(j),topology:[X,e,q].join(j),weightSpecs:[X,e,Y].join(j),weightData:[X,e,Q].join(j),modelMetadata:[X,e,Z].join(j)}}function ee(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function te(e){const t=e.split(j);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(j)}class ne{constructor(e){if(!(0,m.OB)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=J(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=R(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(I)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw ee(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(I){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}ne.URL_SCHEME="localstorage://";const re=e=>{return(0,m.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ne.URL_SCHEME)?(t=e.slice(ne.URL_SCHEME.length),new ne(t)):null;var t};O.registerSaveRouter(re),O.registerLoadRouter(re);class ae{constructor(){(0,v.hu)((0,m.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,v.hu)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=X+j,n=j+K;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[te(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=J(e=(t=e).startsWith(ne.URL_SCHEME)?t.slice(ne.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return ee(n),r}}const se="://";class oe{constructor(){this.managers={}}static getInstance(){return null==oe.instance&&(oe.instance=new oe),oe.instance}static registerManager(e,t){(0,v.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(se)&&(e=e.slice(0,e.indexOf(se))),(0,v.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=oe.getInstance();(0,v.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function ie(e){if(-1===e.indexOf(se))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${oe.getSchemes().join(",")}`);return{scheme:e.split(se)[0],path:e.split(se)[1]}}async function ue(e,t,n=!1){(0,v.hu)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=O.getLoadHandlers(e);(0,v.hu)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,v.hu)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=O.getSaveHandlers(t);(0,v.hu)(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,v.hu)(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const o=s[0],i=ie(e).scheme,u=ie(e).path,l=i===ie(e).scheme,c=await a.load();n&&l&&await oe.getManager(i).removeModel(u);const p=await o.save(c);return n&&!l&&await oe.getManager(i).removeModel(u),p.modelArtifactsInfo}async function le(){const e=oe.getSchemes(),t={};for(const n of e){const e=await oe.getManager(n).listModels();for(const r in e)t[n+se+r]=e[r]}return t}async function ce(e){const t=ie(e);return oe.getManager(t.scheme).removeModel(t.path)}async function pe(e,t){return ue(e,t,!1)}async function he(e,t){return ue(e,t,!0)}class de{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if((0,m.OB)().get("IS_BROWSER")){(0,m.OB)().setPlatform("browser",new de);try{oe.registerManager(ne.URL_SCHEME,new ae)}catch(e){}try{oe.registerManager(z.URL_SCHEME,new H)}catch(e){}}var fe=n(4224);let me;(0,m.OB)().get("IS_NODE")&&(0,m.OB)().setPlatform("node",new class{constructor(){this.util=n(1027),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,m.OB)().global.fetch?(0,m.OB)().global.fetch(e,t):(null==me&&(me=n(467)),me(e,t))}now(){const e=fe.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var ge=n(2472),ye=n(5701),xe=n(7979),be=n(8990);(0,c.wv)();const ve={buffer:ge.f,cast:ye.p,clone:xe.d,print:function(e,t=!1){console.log(e.toString(t))}};function we(e){return new Promise((e=>setTimeout(e))).then(e)}(0,be.Vp)(ve);class ke{constructor(e){if(!(0,m.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ke.URL_SCHEME)&&(e=e.slice(ke.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=E(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await we((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await we((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:R(e)}}}}ke.URL_SCHEME="downloads://";class Se{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=_(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,C(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>$(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=$(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function Te(e){return new Se(e)}function Ie(e,t,n,r){!function(e){(0,v.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,v.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,v.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,v.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const o=n+ ++a/e.length*(r-n);return t(o),s})),s))))}async function Ne(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,m.OB)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Ie(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Ie(a,t.onProgress,.5,1)}async function Ce(e,t="",n,r){return $e((e=>Ne(e,{requestInit:r})))(e,t,n)}function $e(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),s={},o=null!=r?r.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=w[u]*v.NA(e.shape),c=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),o[n]=!0)})):c(),i.push(e.name),n+=l}))})),!o.every((e=>e))){const e=r.filter(((e,t)=>!o[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${i.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),p={};let h=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[h+e].byteLength;const a=new ArrayBuffer(r),o=new Uint8Array(a);let i=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[h+e]);o.set(t,i),i+=t.byteLength}s[e].forEach((e=>{const t=S(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)p[e]=t[e]})),h+=n})),p}}O.registerSaveRouter((e=>(0,m.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ke.URL_SCHEME)?function(e="model"){return new ke(e)}(e.slice(ke.URL_SCHEME.length)):null));class Ee{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,v.hu)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,m.OB)().platform.fetch,(0,v.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,v.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=E(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:R(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return _(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const o=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):o.push(a+e+r);return this.weightUrlConverter&&o.push(...await Promise.all(i)),[s,C(await Ne(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function _e(e){return null!=e.match(Ee.URL_SCHEME_REGEX)}Ee.URL_SCHEME_REGEX=/^https?:\/\//;const Re=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>_e(e))):_e(e),n)return Ae(e,t)}return null};function Ae(e,t){return new Ee(e,t)}function Oe(e,t){return Ae(e,t)}O.registerSaveRouter(Re),O.registerLoadRouter(Re);class De{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Fe{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Me(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new De(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new De({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new De({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function Be(e){return new Fe(e)}var Pe=n(769),Le=n(4929),Ve=n(6207),Ue=n(8136),We=n(6154),ze=n(4343);let Ge;function He(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);i=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=(0,Ve.pI)(Le.eB,c.BV.backendName)){const n={pixels:e},r={numChannels:t};return c.BV.runKernel(Le.eB,n,r)}const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let p,h;if(o)p=e.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)p=e.data;else if(s||a||i){if(null==Ge)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Ge=new OffscreenCanvas(1,1).getContext("2d")}else Ge=document.createElement("canvas").getContext("2d");Ge.canvas.width=u,Ge.canvas.height=l,Ge.drawImage(e,0,0,u,l),p=Ge.getImageData(0,0,u,l).data}if(4===t)h=new Int32Array(p);else{const e=u*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=p[4*n+e]}return function(e,t,n){if((0,v.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=(0,Ue.C)(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,ze.H)(e,t,r,n)}(h,[l,u,t],"int32")}async function je(e,t=3){let n=null;if((0,m.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return He(n,t)}async function Xe(e,t){let n=(0,Ue._1)(e,"img","toPixels");if(!(e instanceof be.es)){const e=n;n=(0,ye.p)(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const o=await n.data(),i="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=o[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*i,t[1]=a*i,t[2]=a*i):t[r]=a*i}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const Ke=(0,We.op)({fromPixels_:He});function qe(e,t,n){const r=e.shape.length;v.hu(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),v.hu(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)v.hu(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function Ye(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Qe(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Ze(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function Je(e,t,n){return n<=e?n:n-(t-1)}function et(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function tt(e,t,n,r,a,s,o,i,u){const l=e.length;let c=new Array(l),p=new Array(l),h=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=nt(o,u,l,r,e),p=rt(i,u,l,a,e),h=Ze(s,u,l,e)}else for(let t=0;t<l;t++)c[t]=st(o,r,s,e,t,u),p[t]=ot(i,a,s,e,t,u),h[t]=at(s,t,u);return{begin:c,end:p,strides:h}}function nt(e,t,n,r,a){const s=[...a],o=et(n,t);for(let a=0;a<s.length;a++)if(o.indexOf(a)>-1)s[a]=0;else{const o=Je(t,n,a);let i=r[o];e&1<<o&&(i=0),s[a]=i}return s}function rt(e,t,n,r,a){const s=[...a],o=et(n,t);for(let a=0;a<s.length;a++)if(o.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const o=Je(t,n,a);let i=r[o];e&1<<o&&(i=Number.MAX_SAFE_INTEGER),s[a]=i}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=v.uZ(0,s[e],a[e])}return s}function at(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function st(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=v.uZ(0,o,u-1),o}function ot(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=i>0?v.uZ(0,o,u):v.uZ(-1,o,u-1),o}function it(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function ut(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function lt(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{v.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(v.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}function ct(e,t,n,r,a,s,o,i,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=o&&0!=(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const p={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:a,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};for(let e=0;e<p.dims;e++)c&&0!=(1<<e&i)&&p.numAddAxisAfterEllipsis++,1<<e&o&&(c=!0);c||(p.ellipsisMask|=1<<p.dims,p.dims++);const h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(p,h);let d=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===h.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(h.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const a=[h.beginMask&1<<t,h.endMask&1<<t],s=[h.strides[t]>0?0:-1,h.strides[t]>0?r:r-1];if(n&&h.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===h.strides[t];const o=!!(h.beginMask&1<<t&&h.endMask&1<<t);if(h.beginValid&&h.endValid){if(n){const e=h.begin[t]<0?r+h.begin[t]:h.begin[t];if(h.begin[t]=e,h.end[t]=h.begin[t]+1,e<0||e>=r)throw Error(`slice index ${h.begin[t]} of dimension ${t} out of bounds.`)}else h.begin[t]=pt(h.begin[t],0,h.strides[t],r,a,s),h.end[t]=pt(h.end[t],1,h.strides[t],r,a,s);const e=1===h.strides[t]&&0===h.begin[t]&&h.end[t]===r;d=d&&e,f=f&&(0===t&&1===h.strides[t]||e)}else d=d&&1===h.strides[t]&&o,f=f&&(0===t&&1===h.strides[t]||o);let i,u=!1;if(h.beginValid&&h.endValid?(i=h.end[t]-h.begin[t],u=!0):n?(i=1,u=!0):o&&r>=0&&(i=h.strides[t]<0?-r:r,u=!0),u){let e;e=0===i||i<0!=h.strides[t]<0?0:Math.trunc(i/h.strides[t])+(i%h.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<h.finalShapeGatherIndices.length;++e){const t=h.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==h.finalShapeGatherIndices[t])),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function pt(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}var ht=n(3882),dt=n(6360),ft=n(2306),mt=n(3209),gt=n(3986);function yt(e,t){const n=e[0].length;e.forEach(((e,t)=>{v.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),v.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)v.hu(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function xt(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var bt=n(2025),vt=n(6072);const wt=30;function kt(e){return e<=wt?e:(0,v.jP)(e,Math.floor(Math.sqrt(e)))}function St(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Tt(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function It(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Nt(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function Ct(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function $t(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}function Et(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===(0,v.NA)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let o=1;for(let e=0;e<a.length-1;++e)o*=a[e];const i=e.shape,u=a.slice();u.pop();let l=1;for(let e=s;e<n;++e)l*=i[e],u.push(i[e]);const c=[...(0,v.e3)(e.shape).map((e=>e/l)),1].slice(0,s);return[u,o,l,c]}var _t=n(9792);const Rt=1.7580993408473768,At=1.0507009873554805,Ot=.3275911,Dt=.254829592,Ft=-.284496736,Mt=1.421413741,Bt=-1.453152027,Pt=1.061405429;var Lt=n(1093);function Vt(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Ut(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Wt(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function zt(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Gt(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Ht(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function jt(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Xt(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Kt=/->/g;function qt(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Kt,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split("->");(0,v.hu)(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=r.split(","),o=s.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===i.indexOf(t)&&i.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===i.indexOf(t)&&","!==t&&i.push(t)}const u=new Array(s.length);for(let e=0;e<o;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(i.indexOf(s[e][t]))}const l=i.length,c=[];for(let e=a.length;e<l;++e)c.push(e);return{allDims:i,summedDims:c,idDims:u}}function Yt(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Qt(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:(0,v.hu)(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function Zt(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=en(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function Jt(e){return e.every(((e,t)=>e===t))}function en(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function tn(e,t,n=0){let r=[];if("number"==typeof t)(0,v.hu)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,v.hu)(a<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}(0,v.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function nn(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function rn(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function an(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function sn(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function on(e,t){return`size ${e} must be non-negative, not ${t}`}function un(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function ln(e,t){return`Input to reshape is a SparseTensor with ${(0,v.NA)(e)}\n  dense values, but the requested shape requires a multiple of ${(0,v.NA)(t)}. inputShape=${e} outputShape= ${t}`}function cn(e,t){return`Input to reshape is a tensor with ${(0,v.NA)(e)} dense values, but the requested shape has ${(0,v.NA)(t)}. inputShape=${e} outputShape=${t}`}function pn(){return"segment ids must be >= 0"}function hn(){return"segment ids are not increasing"}function dn(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function fn(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function mn(e,t){let n,r=!1;for(e<=wt?(n=e,r=!0):n=(0,v.jP)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=(0,v.jP)(e,n+1);return n}function gn(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function yn(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const o=e.shape[n],i=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)i.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)i.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)i.push(t.shape[e]);for(let t=n+1;t<s;t++)i.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:o,outputShape:i}}function xn(e){try{return e.map((e=>(0,ht.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function bn(e){return e.map((e=>(0,ht.encodeString)(e)))}var vn=n(1782),wn=n(9830),kn=n(9489)},4929:(e,t,n)=>{"use strict";n.d(t,{SY:()=>r,VG:()=>a,Sp:()=>s,mm:()=>o,Xz:()=>i,oT:()=>u,IK:()=>l,sJ:()=>c,aJ:()=>p,M2:()=>h,qw:()=>d,jM:()=>f,Oy:()=>m,QC:()=>g,Jh:()=>y,RO:()=>x,_k:()=>b,IM:()=>v,XL:()=>w,zw:()=>k,zv:()=>S,eE:()=>T,RF:()=>I,gJ:()=>N,xn:()=>C,Zz:()=>$,yj:()=>E,Eh:()=>_,mh:()=>R,wU:()=>A,wm:()=>O,x1:()=>D,o2:()=>F,ik:()=>M,mc:()=>B,TR:()=>P,iH:()=>L,Vc:()=>V,QR:()=>U,T0:()=>W,ci:()=>z,sL:()=>G,y7:()=>H,$w:()=>j,p4:()=>X,oH:()=>K,$g:()=>q,SX:()=>Y,HE:()=>Q,Om:()=>Z,hd:()=>J,NE:()=>ee,YF:()=>te,Y0:()=>ne,vw:()=>re,de:()=>ae,Uy:()=>se,OR:()=>oe,je:()=>ie,sH:()=>ue,qi:()=>le,q1:()=>ce,iZ:()=>pe,Ac:()=>he,iJ:()=>de,Qg:()=>fe,J_:()=>me,av:()=>ge,iW:()=>ye,r7:()=>xe,J$:()=>be,vt:()=>ve,CA:()=>we,e7:()=>ke,Zb:()=>Se,kU:()=>Te,PY:()=>Ie,Vf:()=>Ne,MZ:()=>Ce,eZ:()=>$e,Hh:()=>Ee,Yo:()=>_e,BM:()=>Re,mT:()=>Ae,OV:()=>Oe,OA:()=>De,OU:()=>Fe,vF:()=>Me,q2:()=>Be,c1:()=>Pe,q8:()=>Le,jQ:()=>Ve,Vb:()=>Ue,NZ:()=>We,wY:()=>ze,ku:()=>Ge,yQ:()=>He,uv:()=>je,cy:()=>Xe,W0:()=>Ke,qW:()=>qe,we:()=>Ye,Qi:()=>Qe,ly:()=>Ze,pe:()=>Je,o0:()=>et,Dl:()=>tt,e6:()=>nt,xJ:()=>rt,$H:()=>at,qk:()=>st,HZ:()=>ot,dp:()=>it,Hm:()=>ut,_Y:()=>lt,zb:()=>ct,Sb:()=>pt,mK:()=>ht,e0:()=>dt,bV:()=>ft,xQ:()=>mt,Ph:()=>gt,oF:()=>yt,p2:()=>xt,RQ:()=>bt,w3:()=>vt,i5:()=>wt,a5:()=>kt,MR:()=>St,FK:()=>Tt,GB:()=>It,TQ:()=>Nt,L8:()=>Ct,Gc:()=>$t,O3:()=>Et,nh:()=>_t,YW:()=>Rt,Zj:()=>At,D2:()=>Ot,_t:()=>Dt,bK:()=>Ft,m2:()=>Mt,_J:()=>Bt,s1:()=>Pt,Xk:()=>Lt,Tr:()=>Vt,sE:()=>Ut,MI:()=>Wt,n9:()=>zt,cW:()=>Gt,wx:()=>Ht,G3:()=>jt,kp:()=>Xt,To:()=>Kt,Qv:()=>qt,Ru:()=>Yt,h8:()=>Qt,eB:()=>Zt,b9:()=>Jt,us:()=>en,_V:()=>tn,lu:()=>nn});const r="Abs",a="Acos",s="Acosh",o="Add",i="AddN",u="All",l="Any",c="ArgMax",p="ArgMin",h="Asin",d="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",x="AvgPoolGrad",b="AvgPool3D",v="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",S="Bincount",T="BroadcastArgs",I="Cast",N="Ceil",C="ClipByValue",$="Complex",E="ComplexAbs",_="Concat",R="Conv2D",A="Conv2DBackpropFilter",O="Conv2DBackpropInput",D="Conv3D",F="Conv3DBackpropFilterV2",M="Conv3DBackpropInputV2",B="Cos",P="Cosh",L="Cumsum",V="CropAndResize",U="DenseBincount",W="DepthToSpace",z="DepthwiseConv2dNative",G="DepthwiseConv2dNativeBackpropFilter",H="DepthwiseConv2dNativeBackpropInput",j="Diag",X="Dilation2D",K="RealDiv",q="Einsum",Y="Elu",Q="EluGrad",Z="Erf",J="Equal",ee="Exp",te="ExpandDims",ne="Expm1",re="FFT",ae="Fill",se="FlipLeftRight",oe="Floor",ie="FloorDiv",ue="FusedBatchNorm",le="GatherV2",ce="GatherNd",pe="Greater",he="GreaterEqual",de="Identity",fe="IFFT",me="Imag",ge="IsFinite",ye="IsInf",xe="IsNan",be="LeakyRelu",ve="Less",we="LessEqual",ke="LinSpace",Se="Log",Te="Log1p",Ie="LogicalAnd",Ne="LogicalNot",Ce="LogicalOr",$e="LRN",Ee="LRNGrad",_e="Max",Re="Maximum",Ae="MaxPool",Oe="MaxPoolGrad",De="MaxPool3D",Fe="MaxPool3DGrad",Me="MaxPoolWithArgmax",Be="Mean",Pe="Min",Le="Minimum",Ve="MirrorPad",Ue="Mod",We="Multinomial",ze="Multiply",Ge="Neg",He="NotEqual",je="NonMaxSuppressionV3",Xe="NonMaxSuppressionV4",Ke="NonMaxSuppressionV5",qe="OnesLike",Ye="OneHot",Qe="Pack",Ze="PadV2",Je="Pow",et="Prelu",tt="Prod",nt="Range",rt="Real",at="Reciprocal",st="Relu",ot="Reshape",it="ResizeNearestNeighbor",ut="ResizeNearestNeighborGrad",lt="ResizeBilinear",ct="ResizeBilinearGrad",pt="Relu6",ht="Reverse",dt="Round",ft="Rsqrt",mt="ScatterNd",gt="Select",yt="Selu",xt="Slice",bt="Sin",vt="Sinh",wt="Sign",kt="Sigmoid",St="Softplus",Tt="Sqrt",It="Sum",Nt="SpaceToBatchND",Ct="SplitV",$t="Softmax",Et="SparseFillEmptyRows",_t="SparseReshape",Rt="SparseSegmentMean",At="SparseSegmentSum",Ot="SparseToDense",Dt="SquaredDifference",Ft="Square",Mt="StridedSlice",Bt="StringNGrams",Pt="StringSplit",Lt="StringToHashBucketFast",Vt="Sub",Ut="Tan",Wt="Tanh",zt="Tile",Gt="TopK",Ht="Transform",jt="Transpose",Xt="Unique",Kt="Unpack",qt="UnsortedSegmentSum",Yt="ZerosLike",Qt="Step",Zt="FromPixels",Jt="RotateWithOffset",en="_FusedMatMul",tn="FusedConv2D",nn="FusedDepthwiseConv2D"},6207:(e,t,n)=>{"use strict";n.d(t,{pI:()=>i,uk:()=>u,tr:()=>l,wC:()=>c});var r=n(645),a=n(1093);const s=(0,r.R)("kernelRegistry",(()=>new Map)),o=(0,r.R)("gradRegistry",(()=>new Map));function i(e,t){const n=p(e,t);return s.get(n)}function u(e){return o.get(e)}function l(e){const t=s.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,o]=a,[i]=s.split("_");i===e&&n.push(o)}return n}function c(e){const{kernelName:t,backendName:n}=e,r=p(t,n);s.has(r)&&a.Z(`The kernel '${t}' for backend '${n}' is already registered`),s.set(r,e)}function p(e,t){return`${t}_${e}`}},1093:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a,c:()=>s});var r=n(6142);function a(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.warn(...e)}function s(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.log(...e)}},4842:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({abs_:function(e){const t=(0,s._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.BV.runKernel(a.yj,e)}{const e={x:t};return r.BV.runKernel(a.SY,e)}}})},9700:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var r=n(1355),a=n(4929),s=n(4722),o=n(8136);const i=(0,n(6154).op)({add_:function(e,t){let n=(0,o._1)(e,"a","add"),i=(0,o._1)(t,"b","add");[n,i]=(0,s.T_)(n,i);const u={a:n,b:i};return r.BV.runKernel(a.mm,u)}})},5230:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({argMax_:function(e,t=0){const n={x:(0,s._1)(e,"x","argMax")},o={axis:t};return r.BV.runKernel(a.sJ,n,o)}})},3986:(e,t,n)=>{"use strict";n.d(t,{YB:()=>a,Vh:()=>s,kz:()=>o,rv:()=>i,lB:()=>u,Q3:()=>l,LJ:()=>c,sY:()=>p});var r=n(6808);function a(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const r=e.length+t.length,a=[];let s=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(e[s++]):a.push(t[o++]);return a}function o(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function i(e,t){return s(e,t.map((e=>1)),t)}function u(e,t,n){r.hu(a(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function l(e,t){if(a(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function p(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},4716:(e,t,n)=>{"use strict";n.d(t,{y:()=>i});var r=n(1355),a=n(4929),s=n(8136),o=n(6808);const i=(0,n(6154).op)({bincount_:function(e,t,n){const i=(0,s._1)(e,"x","bincount"),u=(0,s._1)(t,"weights","bincount");o.hu("int32"===i.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${i.dtype}`)),o.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),o.hu(u.size===i.size||0===u.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${i.shape}, weights shape: ${u.shape}.`));const l={x:i,weights:u},c={size:n};return r.BV.runKernel(a.zv,l,c)}})},8403:(e,t,n)=>{"use strict";n.d(t,{U:()=>l});var r=n(1355),a=n(4929),s=n(8136),o=n(7979),i=n(6154),u=n(4175);const l=(0,i.op)({broadcastTo_:function(e,t){let n=(0,s._1)(e,"broadcastTo","x");const i=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,u.X)(n,e)}const l=n.shape,c=Array.from(t);for(let e=t.length-1;e>=0;e--)if(l[e]===t[e])c[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${t}].`);if(0===c.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,o.d)(n);const p={x:n},h={reps:c};return r.BV.runKernel(a.n9,p,h)}})},769:(e,t,n)=>{"use strict";function r(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,o=e[s]||1;(t[t.length-1-a]||1)>1&&1===o&&r.unshift(s)}return r}function a(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,o=t[s];(null==a||1===a&&o>1)&&n.unshift(s)}return n}function s(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}n.r(t),n.d(t,{getBroadcastDims:()=>r,getReductionAxes:()=>a,assertAndGetBroadcastShape:()=>s})},2472:(e,t,n)=>{"use strict";n.d(t,{f:()=>s});var r=n(8990),a=n(6808);function s(e,t="float32",n){return t=t||"float32",a.Mu(e),new r.YD(e,t,n)}},5701:(e,t,n)=>{"use strict";n.d(t,{p:()=>i});var r=n(1355),a=n(4929),s=n(8136),o=n(6808);const i=(0,n(6154).op)({cast_:function(e,t){const n=(0,s._1)(e,"x","cast");if(!o.LP(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},u={dtype:t};return r.BV.runKernel(a.RF,i,u)}})},9545:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var r=n(1355),a=n(4929),s=n(8136),o=n(6808);const i=(0,n(6154).op)({clipByValue_:function(e,t,n){const i=(0,s._1)(e,"x","clipByValue");o.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const u={x:i},l={clipValueMin:t,clipValueMax:n};return r.BV.runKernel(a.xn,u,l)}})},7979:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({clone_:function(e){const t={x:(0,s._1)(e,"x","clone","string_or_numeric")};return r.BV.runKernel(a.iJ,t)}})},1919:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(1355),a=n(4929),s=n(8136),o=n(6808);const i=(0,n(6154).op)({complex_:function(e,t){const n=(0,s._1)(e,"real","complex"),i=(0,s._1)(t,"imag","complex");o.k5(n.shape,i.shape,`real and imag shapes, ${n.shape} and ${i.shape}, must match in call to tf.complex().`);const u={real:n,imag:i};return r.BV.runKernel(a.Zz,u)}})},2685:(e,t,n)=>{"use strict";n.d(t,{z:()=>u});var r=n(1355),a=n(4929),s=n(8136),o=n(6808),i=n(7979);const u=(0,n(6154).op)({concat_:function(e,t=0){(0,o.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,s.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,i.d)(n[0]);const u=n,l={axis:t};return r.BV.runKernel(a.Eh,u,l)}})},2025:(e,t,n)=>{"use strict";n.d(t,{Rf:()=>a,Xw:()=>s,pl:()=>o,Ix:()=>i,jw:()=>u,aO:()=>l,I0:()=>f,jT:()=>m,sl:()=>g,m:()=>y});var r=n(6808);function a(e,t,n,r,a="NHWC",s){return i(e,[...t,e[3]],n,s,r,null,null,g(a))}function s(e,t,n,r,a,s,o="channelsLast"){const[u,l]=c(t);let p;if("channelsLast"===o)p=[u,l,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);p=[u,l,e[1],e[1]]}return i(e,p,n,r,a,s,!1,o)}function o(e,t,n,r,a,s,o="NDHWC"){const[i,l,c]=p(t);let h,d;if("NDHWC"===o)d="channelsLast",h=[i,l,c,e[4],e[4]];else{if("NCDHW"!==o)throw new Error(`Unknown dataFormat ${o}`);d="channelsFirst",h=[i,l,c,e[1],e[1]]}return u(e,h,n,r,a,!1,d,s)}function i(e,t,n,r,a,s,o=!1,i="channelsLast"){let[u,p,f,m]=[-1,-1,-1,-1];if("channelsLast"===i)[u,p,f,m]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,m,p,f]=e}const[g,y,,x]=t,[b,v]=c(n),[w,k]=c(r),S=h(g,w),T=h(y,k),{padInfo:I,outHeight:N,outWidth:C}=function(e,t,n,r,a,s,o,i,u){let c,p,h;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=l(e,t,n));const s=e[1];return[d((e[0]-t+2*r)/n+1,a),d((s-t+2*r)/n+1,a)]}([t,n],s,r,e,i);p=a[0],h=a[1]}else if("same"===e){p=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(p-1)*r+s-t),i=Math.max(0,(h-1)*a+o-n),u=Math.floor(e/2),l=e-u,d=Math.floor(i/2);c={top:u,bottom:l,left:d,right:i-d,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((t-s+1)/r),h=Math.ceil((n-o+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const l="channelsLast"===u?e[1][0]:e[2][0],f="channelsLast"===u?e[1][1]:e[2][1],m="channelsLast"===u?e[2][0]:e[3][0],g="channelsLast"===u?e[2][1]:e[3][1];c={top:l,bottom:f,left:m,right:g,type:0===l&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},p=d((t-s+l+f)/r+1,i),h=d((n-o+m+g)/a+1,i)}}return{padInfo:c,outHeight:p,outWidth:h}}(a,p,f,b,v,S,T,s,i),$=o?x*m:x;let E;return"channelsFirst"===i?E=[u,$,N,C]:"channelsLast"===i&&(E=[u,N,C,$]),{batchSize:u,dataFormat:i,inHeight:p,inWidth:f,inChannels:m,outHeight:N,outWidth:C,outChannels:$,padInfo:I,strideHeight:b,strideWidth:v,filterHeight:g,filterWidth:y,effectiveFilterHeight:S,effectiveFilterWidth:T,dilationHeight:w,dilationWidth:k,inShape:e,outShape:E,filterShape:t}}function u(e,t,n,r,a,s=!1,o="channelsLast",i){let[u,c,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,c,f,m,g]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,g,c,f,m]=e}const[y,x,b,,v]=t,[w,k,S]=p(n),[T,I,N]=p(r),C=h(y,T),$=h(x,I),E=h(b,N),{padInfo:_,outDepth:R,outHeight:A,outWidth:O}=function(e,t,n,r,a,s,o,i,u,c,p){let h,f,m,g;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=l(e,t,r));const o=e[1],i=e[2];return[d((e[0]-t+2*a)/r+1,s),d((o-t+2*a)/r+1,s),d((i-t+2*a)/r+1,s),1]}([t,n,r,1],i,0,a,e,p);f=s[0],m=s[1],g=s[2]}else if("same"===e){f=Math.ceil(t/a),m=Math.ceil(n/s),g=Math.ceil(r/o);const e=(f-1)*a+i-t,l=(m-1)*s+u-n,p=(g-1)*o+c-r,d=Math.floor(e/2),y=e-d,x=Math.floor(l/2),b=l-x,v=Math.floor(p/2);h={top:x,bottom:b,left:v,right:p-v,front:d,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((t-i+1)/a),m=Math.ceil((n-u+1)/s),g=Math.ceil((r-c+1)/o)}return{padInfo:h,outDepth:f,outHeight:m,outWidth:g}}(a,c,f,m,w,k,S,C,$,E,i),D=s?v*g:v;let F;return"channelsFirst"===o?F=[u,D,R,A,O]:"channelsLast"===o&&(F=[u,R,A,O,D]),{batchSize:u,dataFormat:o,inDepth:c,inHeight:f,inWidth:m,inChannels:g,outDepth:R,outHeight:A,outWidth:O,outChannels:D,padInfo:_,strideDepth:w,strideHeight:k,strideWidth:S,filterDepth:y,filterHeight:x,filterWidth:b,effectiveFilterDepth:C,effectiveFilterHeight:$,effectiveFilterWidth:E,dilationDepth:T,dilationHeight:I,dilationWidth:N,inShape:e,outShape:F,filterShape:t}}function l(e,t,n,r=1){const a=h(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function c(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function p(e){return"number"==typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function d(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function f(e){const[t,n,r]=c(e);return 1===t&&1===n&&1===r}function m(e,t){return f(e)||f(t)}function g(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function y(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)r.hu(r.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{r.hu(r.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}},9106:(e,t,n)=>{"use strict";n.d(t,{h:()=>u});var r=n(1355),a=n(4929),s=n(4722),o=n(8136),i=n(2798);const u=(0,n(6154).op)({div_:function(e,t){let n=(0,o._1)(e,"a","div"),u=(0,o._1)(t,"b","div");if([n,u]=(0,s.T_)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return(0,i.q)(n,u);const l={a:n,b:u};return r.BV.runKernel(a.oH,l,{})}})},7905:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({elu_:function(e){const t={x:(0,s._1)(e,"x","elu","float32")};return r.BV.runKernel(a.SX,t)}})},2125:(e,t,n)=>{"use strict";n.d(t,{Q:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({exp_:function(e){const t={x:(0,s._1)(e,"x","exp")};return r.BV.runKernel(a.NE,t)}})},7644:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(1355),a=n(4929),s=n(8136),o=n(6808);const i=(0,n(6154).op)({expandDims_:function(e,t=0){const n=(0,s._1)(e,"x","expandDims","string_or_numeric");o.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const i={input:n},u={dim:t};return r.BV.runKernel(a.YF,i,u)}})},5468:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var r=n(1355),a=n(4929);function s(e,t,n){const s={shape:e,value:t,dtype:n};return r.BV.runKernel(a.de,{},s)}},2798:(e,t,n)=>{"use strict";n.d(t,{q:()=>i});var r=n(1355),a=n(4929),s=n(4722),o=n(8136);const i=(0,n(6154).op)({floorDiv_:function(e,t){let n=(0,o._1)(e,"a","floorDiv"),i=(0,o._1)(t,"b","floorDiv");[n,i]=(0,s.T_)(n,i);const u={a:n,b:i};return r.BV.runKernel(a.je,u)}})},6072:(e,t,n)=>{"use strict";n.d(t,{QH:()=>b,pf:()=>x,Fr:()=>y,uy:()=>v});var r=n(769),a=n(7905),s=n(9418),o=n(7536),i=n(5278),u=n(9076),l=n(3519),c=n(4175),p=n(1403),h=n(1355),d=n(4929),f=n(8136);const m=(0,n(6154).op)({step_:function(e,t=0){const n={x:(0,f._1)(e,"x","step")},r={alpha:t};return h.BV.runKernel(d.h8,n,r)}});var g=n(5810);function y(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,o.d)(e,m(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function x(e,t){let n=t;const a=r.getReductionAxes(e.shape,t.shape);return a.length>0&&(n=(0,g.S)(n,a)),(0,c.X)(n,e.shape)}function b(e,t,n,r){if("linear"===t)return e;if("relu"===t)return(0,u.U)(e);if("elu"===t)return(0,a.p)(e);if("relu6"===t)return(0,l.b)(e);if("prelu"===t)return(0,i.A)(e,n);if("leakyrelu"===t)return(0,s.h)(e,r);if("sigmoid"===t)return(0,p.X)(e);throw new Error(`Unknown fused activation ${t}.`)}const v=(e,t)=>!(e>0)||"linear"===t},4900:(e,t,n)=>{"use strict";n.d(t,{p:()=>u});var r=n(1355),a=n(4929),s=n(4722),o=n(8136),i=n(769);const u=(0,n(6154).op)({greater_:function(e,t){let n=(0,o._1)(e,"a","greater","string_or_numeric"),u=(0,o._1)(t,"b","greater","string_or_numeric");[n,u]=(0,s.T_)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.iZ,l)}})},1813:(e,t,n)=>{"use strict";n.d(t,{b:()=>u});var r=n(1355),a=n(4929),s=n(4722),o=n(8136),i=n(769);const u=(0,n(6154).op)({greaterEqual_:function(e,t){let n=(0,o._1)(e,"a","greaterEqual","string_or_numeric"),u=(0,o._1)(t,"b","greaterEqual","string_or_numeric");[n,u]=(0,s.T_)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.Ac,l)}})},9324:(e,t,n)=>{"use strict";n.d(t,{a:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({imag_:function(e){const t={input:(0,s._1)(e,"input","imag")};return r.BV.runKernel(a.J_,t)}})},9418:(e,t,n)=>{"use strict";n.d(t,{h:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({leakyRelu_:function(e,t=.2){const n={x:(0,s._1)(e,"x","leakyRelu")},o={alpha:t};return r.BV.runKernel(a.J$,n,o)}})},8257:(e,t,n)=>{"use strict";n.d(t,{z:()=>u});var r=n(1355),a=n(4929),s=n(4722),o=n(8136),i=n(769);const u=(0,n(6154).op)({lessEqual_:function(e,t){let n=(0,o._1)(e,"a","lessEqual","string_or_numeric"),u=(0,o._1)(t,"b","lessEqual","string_or_numeric");[n,u]=(0,s.T_)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.CA,l)}})},1943:(e,t,n)=>{"use strict";n.d(t,{c:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({log_:function(e){const t={x:(0,s._1)(e,"x","log","float32")};return r.BV.runKernel(a.Zb,t)}})},5956:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({log1p_:function(e){const t={x:(0,s._1)(e,"x","log1p")};return r.BV.runKernel(a.kU,t)}})},1548:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var r=n(1355),a=n(4929),s=n(8136),o=n(769);const i=(0,n(6154).op)({logicalAnd_:function(e,t){const n=(0,s._1)(e,"a","logicalAnd","bool"),i=(0,s._1)(t,"b","logicalAnd","bool");(0,o.assertAndGetBroadcastShape)(n.shape,i.shape);const u={a:n,b:i};return r.BV.runKernel(a.PY,u)}})},3338:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var r=n(1355),a=n(4929),s=n(4722),o=n(8136);const i=(0,n(6154).op)({matMul_:function(e,t,n=!1,i=!1){let u=(0,o._1)(e,"a","matMul"),l=(0,o._1)(t,"b","matMul");[u,l]=(0,s.T_)(u,l);const c={a:u,b:l},p={transposeA:n,transposeB:i};return r.BV.runKernel(a.XL,c,p)}})},2550:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({max_:function(e,t=null,n=!1){const o={x:(0,s._1)(e,"x","max")},i={reductionIndices:t,keepDims:n};return r.BV.runKernel(a.Yo,o,i)}})},1501:(e,t,n)=>{"use strict";n.d(t,{J:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({mean_:function(e,t=null,n=!1){const o={x:(0,s._1)(e,"x","mean")},i={axis:t,keepDims:n};return r.BV.runKernel(a.q2,o,i)}})},9292:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({min_:function(e,t=null,n=!1){const o={x:(0,s._1)(e,"x","min")},i={axis:t,keepDims:n};return r.BV.runKernel(a.c1,o,i)}})},6885:(e,t,n)=>{"use strict";n.d(t,{L:()=>l});var r=n(1355),a=n(4929),s=n(4722),o=n(8136),i=n(769),u=n(5701);const l=(0,n(6154).op)({minimum_:function(e,t){let n=(0,o._1)(e,"a","minimum"),l=(0,o._1)(t,"b","minimum");[n,l]=(0,s.T_)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const c={a:n,b:l};return r.BV.runKernel(a.q8,c)}})},7536:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(1355),a=n(4929),s=n(4722),o=n(8136);const i=(0,n(6154).op)({mul_:function(e,t){let n=(0,o._1)(e,"a","mul"),i=(0,o._1)(t,"b","mul");[n,i]=(0,s.T_)(n,i);const u={a:n,b:i};return r.BV.runKernel(a.wY,u)}})},5354:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({neg_:function(e){const t={x:(0,s._1)(e,"x","neg")};return r.BV.runKernel(a.ku,t)}})},9320:(e,t,n)=>{"use strict";n.d(t,{Q:()=>u});var r=n(1355),a=n(4929),s=n(4722),o=n(8136),i=n(769);const u=(0,n(6154).op)({notEqual_:function(e,t){let n=(0,o._1)(e,"a","notEqual","string_or_numeric"),u=(0,o._1)(t,"b","notEqual","string_or_numeric");[n,u]=(0,s.T_)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.yQ,l)}})},2497:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var r=n(1355),a=n(6808),s=n(1919),o=n(9306);function i(e,t="float32"){if("complex64"===t){const t=i(e,"float32"),n=(0,o.l)(e,"float32");return(0,s.P)(t,n)}const n=(0,a.p8)((0,a.NA)(e),t);return r.BV.makeTensor(n,e,t)}},6154:(e,t,n)=>{"use strict";n.d(t,{op:()=>s});var r=n(1355),a=n(6808);function s(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const o=(...e)=>{r.BV.startScope(n);try{const t=s(...e);return(0,a.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),r.BV.endScope(t),t}catch(e){throw r.BV.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},2306:(e,t,n)=>{"use strict";n.d(t,{IHx:()=>r.I,NqF:()=>a.N,f3b:()=>s.f,pju:()=>o.p,iUl:()=>i.i,d9v:()=>u.d,zoF:()=>l.z,hiC:()=>c.h,Qqt:()=>p.Q,dt4:()=>h.d,BHj:()=>He,dC7:()=>d.d,vku:()=>f.v,XLQ:()=>m.X,iD$:()=>g.i,XD2:()=>y.X,tPi:()=>x.t,rVs:()=>je,L9e:()=>b.L,knu:()=>v.k,Z_8:()=>Xe,luU:()=>w.l,XeE:()=>k.X,RRF:()=>S.R,odF:()=>C,HHK:()=>$.H,lls:()=>E.l});var r=n(9700),a=n(5230),s=n(2472),o=n(5701),i=n(9545),u=n(7979),l=n(2685),c=n(9106),p=n(2125),h=n(7644),d=n(7536),f=n(8814),m=n(4175),g=n(5580),y=n(1403),x=n(9398),b=n(7058),v=n(1110),w=n(9723),k=n(3558),S=n(3501),T=n(8136),I=n(6808),N=n(4343);function C(e,t,n){if((0,I.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,T.C)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,N.H)(e,t,r,n)}var $=n(2153),E=n(9306),_=n(981),R=n(5175),A=n(2325),O=n(8098),D=n(6154);function F(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(o)}return(0,S.R)(a,"float32")}(0,D.op)({hammingWindow_:function(e){return F(e,.54,.46)}});const M=(0,D.op)({hannWindow_:function(e){return F(e,.5,.5)}});var B=n(5468);const P=(0,D.op)({frame_:function(e,t,n,r=!1,a=0){let s=0;const o=[];for(;s+t<=e.size;)o.push((0,x.t)(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,i=(0,l.z)([(0,x.t)(e,s,t-r),(0,B.h)([r],a)]);o.push(i),s+=n}return 0===o.length?C([],[0,t]):(0,m.X)((0,l.z)(o),[o.length,t])}});(0,D.op)({stft_:function(e,t,n,r,a=M){var s;null==r&&(s=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2)))));const o=P(e,t,n),i=(0,d.d)(o,a(t));return(0,_.Q)(i,r)}});var L=n(1355),V=n(4929);const U=(0,D.op)({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const o=(0,T._1)(e,"image","cropAndResize"),i=(0,T._1)(t,"boxes","cropAndResize","float32"),u=(0,T._1)(n,"boxInd","cropAndResize","int32"),l=i.shape[0];I.hu(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),I.hu(2===i.rank&&4===i.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`)),I.hu(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`)),I.hu(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),I.hu(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),I.hu("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:o,boxes:i,boxInd:u},p={method:a,extrapolationValue:s,cropSize:r};return L.BV.runKernel(V.Vc,c,p)}}),W=(0,D.op)({flipLeftRight_:function(e){const t=(0,T._1)(e,"image","flipLeftRight","float32");I.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return L.BV.runKernel(V.Uy,n,{})}});var z=n(4777);const G=(0,D.op)({grayscaleToRGB_:function(e){const t=(0,T._1)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];I.hu(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),I.hu(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,(0,z.G)(t,a)}}),H=(0,D.op)({rotateWithOffset_:function(e,t,n=0,r=.5){const a=(0,T._1)(e,"image","rotateWithOffset","float32");I.hu(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},o={radians:t,fillValue:n,center:r};return L.BV.runKernel(V.b9,s,o)}});function j(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),I.hu(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),I.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),I.hu(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),I.hu(1===t.rank,(()=>"scores must be a 1D tensor")),I.hu(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),I.hu(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const X=(0,D.op)({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=(0,T._1)(e,"boxes","nonMaxSuppression","float32"),o=(0,T._1)(t,"scores","nonMaxSuppression","float32"),i=j(s,o,n,r,a),u={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:a=i.scoreThreshold};return L.BV.runKernel(V.uv,{boxes:s,scores:o},u)}});var K=n(1782);const q=(0,D.op)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=(0,T._1)(e,"boxes","nonMaxSuppression"),i=(0,T._1)(t,"scores","nonMaxSuppression"),u=j(o,i,n,r,a,s),l={boxes:o,scores:i},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},p=L.BV.runKernel(V.W0,l,c);return{selectedIndices:p[0],selectedScores:p[1]}}}),Y=(0,D.op)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=(0,T._1)(e,"boxes","nonMaxSuppression"),i=(0,T._1)(t,"scores","nonMaxSuppression"),u=j(o,i,n,r,a,null),l={boxes:o,scores:i},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},p=L.BV.runKernel(V.cy,l,c);return{selectedIndices:p[0],validOutputs:p[1]}}}),Q=(0,D.op)({resizeBilinear_:function(e,t,n=!1,r=!1){const a=(0,T._1)(e,"images","resizeBilinear");I.hu(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),I.hu(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),I.hu(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,o=!1;3===a.rank&&(o=!0,s=(0,m.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=L.BV.runKernel(V._Y,i,u);return o?(0,m.X)(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Z=(0,D.op)({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=(0,T._1)(e,"images","resizeNearestNeighbor");I.hu(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),I.hu(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),I.hu("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),I.hu(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,o=!1;3===a.rank&&(o=!0,s=(0,m.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,i={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=L.BV.runKernel(V.dp,i,u);return o?(0,m.X)(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});var J=n(5717),ee=n(4716),te=n(8257),ne=n(4900),re=n(5810),ae=n(7497),se=n(5879),oe=n(6946);const ie=(0,D.op)({threshold_:function(e,t="binary",n=!1,a=.5){const s=(0,T._1)(e,"image","threshold"),i=s.shape[0]*s.shape[1];let u,l,p,h,f=(0,d.d)((0,S.R)([a]),255);if(I.hu(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),I.hu(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),I.hu("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),I.hu("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[u,l,p]=(0,J.V)(s,[1,1,1],-1);const e=(0,d.d)(u,.2989),t=(0,d.d)(l,.587),n=(0,d.d)(p,.114);h=(0,r.I)((0,r.I)(e,t),n)}else h=e;"otsu"===t&&(f=function(e,t){let n,a,s,o,i,u,l=(0,S.R)([-1]),p=(0,S.R)([0]),h=(0,S.R)([0]);for(let f=0;f<e.size-1;f++){n=(0,x.t)(e,0,f+1),a=(0,x.t)(e,f+1),i=(0,c.h)((0,re.S)(n),t),u=(0,c.h)((0,re.S)(a),t);const m=(0,re.S)((0,d.d)(n,(0,oe.w)(0,n.size)));s=(0,c.h)(m,(0,re.S)(n));const g=(0,B.h)(a.shape,n.size),y=(0,r.I)((0,oe.w)(0,a.size),g),b=(0,d.d)(a,y);o=(0,c.h)((0,re.S)(b),(0,re.S)(a));const v=(0,w.l)(s,o),k=(0,w.l)(s,o),T=(0,d.d)(i,u);h=(0,d.d)((0,d.d)(T,v),k);const I=(0,ne.p)(h,p);p=(0,se.a)(I,h,p),l=(0,se.a)(I,(0,S.R)([f]),l)}return l}((0,ee.y)((0,o.p)((0,ae.N)(h),"int32"),(0,k.X)([]),256),i));const m=n?(0,te.z)(h,f):(0,ne.p)(h,f);return(0,o.p)((0,d.d)(m,255),"int32")}}),ue=(0,D.op)({transform_:function(e,t,n="nearest",r="constant",a=0,s){const o=(0,T._1)(e,"image","transform","float32"),i=(0,T._1)(t,"transforms","transform","float32");I.hu(4===o.rank,(()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`)),I.hu(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),I.hu(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:o,transforms:i},l={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return L.BV.runKernel(V.wx,u,l)}});var le=n(1813),ce=n(1548);(0,D.op)({bandPart_:function(e,t,n){(0,I.hu)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,I.hu)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=(0,T._1)(e,"a","bandPart");(0,I.hu)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,o]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=s),n<0&&(n=o);const i=(0,m.X)((0,oe.w)(0,s,1,"int32"),[-1,1]),u=(0,oe.w)(0,o,1,"int32"),l=(0,w.l)(i,u),c=(0,ce.H)((0,te.z)(l,(0,g.i)(+t,"int32")),(0,le.b)(l,(0,g.i)(-n,"int32"))),p=(0,E.l)([s,o],r.dtype);return(0,m.X)((0,v.k)((0,$.H)((0,m.X)(r,[-1,s,o])).map((e=>(0,se.a)(c,e,p)))),a)}});var pe=n(4842),he=n(3986),de=n(2550),fe=n(9292),me=n(1109),ge=n(569),ye=n(9099);function xe(e,t,n=null){if(0===e.rank)return(0,pe.W)(e);if(1!==e.rank&&null===n)return xe((0,m.X)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,re.S)((0,pe.W)(e),n);if(t===1/0)return(0,de.F)((0,pe.W)(e),n);if(t===-1/0)return(0,fe.V)((0,pe.W)(e),n);if("euclidean"===t||2===t)return(0,ge._)((0,re.S)((0,me.s)((0,pe.W)(e),(0,g.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,de.F)((0,re.S)((0,pe.W)(e),n[0]),n[1]-1);if(t===1/0)return(0,de.F)((0,re.S)((0,pe.W)(e),n[1]),n[0]);if(t===-1/0)return(0,fe.V)((0,re.S)((0,pe.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,ge._)((0,re.S)((0,ye.h)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const be=(0,D.op)({norm_:function(e,t="euclidean",n=null,r=!1){const a=xe(e=(0,T._1)(e,"x","norm"),t,n);let s=a.shape;if(r){const t=(0,I.EC)(n,e.shape);s=he.rv(a.shape,t)}return(0,m.X)(a,s)}});(0,D.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,I.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,I.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,J.V)(e,e.shape[0],0).map((e=>(0,b.L)(e,[0])));(0,I.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(L.BV.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=(0,d.d)((0,re.S)((0,d.d)(n[r],e)),n[r]);e=(0,w.l)(e,t)}return(0,c.h)(e,be(e,"euclidean"))})));return t?(0,v.k)(n,0):n}});var ve=n(3209);const we=(0,D.op)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=(0,s.f)([e,t],r),o=e<=t?e:t;for(let e=0;e<o;++e)a.set(1,e,e);const i=(0,m.X)(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return(0,z.G)((0,h.d)(i,0),[n[0],1,1]);if(2===n.length)return(0,z.G)((0,h.d)((0,h.d)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,z.G)((0,h.d)((0,h.d)((0,h.d)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var ke,Se=n(3338),Te=n(5354),Ie=n(8299);function Ne(e,t=!1){return L.BV.tidy((()=>{(0,I.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=we(n),s=(0,u.d)(e);const o=C([[1]],[1,1]);let i=(0,u.d)(o);const p=n>=r?r:n;for(let e=0;e<p;++e){const t=s,p=i,h=a;[i,s,a]=L.BV.tidy((()=>{const t=(0,x.t)(s,[e,e],[n-e,1]),p=be(t),h=(0,x.t)(s,[e,e],[1,1]),f=(0,se.a)((0,ne.p)(h,0),C([[-1]]),C([[1]])),m=(0,w.l)(h,(0,d.d)(f,p)),g=(0,c.h)(t,m);i=1===g.shape[0]?(0,u.d)(o):(0,l.z)([o,(0,x.t)(g,[1,0],[g.shape[0]-1,g.shape[1]])],0);const y=(0,Te.W)((0,c.h)((0,Se.O)(f,m),p)),b=(0,x.t)(s,[e,0],[n-e,r]),v=(0,d.d)(y,i),k=(0,Ie.p)(i);if(0===e)s=(0,w.l)(b,(0,Se.O)(v,(0,Se.O)(k,b)));else{const t=(0,w.l)(b,(0,Se.O)(v,(0,Se.O)(k,b)));s=(0,l.z)([(0,x.t)(s,[0,0],[e,r]),t],0)}const S=(0,Ie.p)(v),T=(0,x.t)(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=(0,w.l)(T,(0,Se.O)((0,Se.O)(T,i),S));else{const t=(0,w.l)(T,(0,Se.O)((0,Se.O)(T,i),S));a=(0,l.z)([(0,x.t)(a,[0,0],[n,e]),t],1)}return[i,s,a]})),(0,ve.B9)([t,p,h])}return!t&&n>r&&(a=(0,x.t)(a,[0,0],[n,r]),s=(0,x.t)(s,[0,0],[r,r])),[a,s]}))}(0,D.op)({qr_:function(e,t=!1){if((0,I.hu)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Ne(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=(0,$.H)((0,m.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=Ne(e,t);a.push(n),s.push(r)})),[(0,m.X)((0,v.k)(a,0),e.shape),(0,m.X)((0,v.k)(s,0),e.shape)]}}}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(ke||(ke={}));var Ce=n(1501),$e=n(9320),Ee=n(2497);const _e=(0,D.op)({computeWeightedLoss_:function(e,t,n=ke.SUM_BY_NONZERO_WEIGHTS){const r=(0,T._1)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=(0,T._1)(t,"weights","computeWeightedLoss"));const s=null==a?r:(0,d.d)(r,a);if(n===ke.NONE)return s;if(n===ke.SUM)return(0,re.S)(s);if(n===ke.MEAN){if(null==a)return(0,Ce.J)(s);{const e=r.size/a.size,t=(0,c.h)((0,re.S)(s),(0,re.S)(a));return e>1?(0,c.h)(t,(0,g.i)(e)):t}}if(n===ke.SUM_BY_NONZERO_WEIGHTS){if(null==a)return(0,c.h)((0,re.S)(s),(0,g.i)(r.size));{const e=(0,d.d)(a,(0,Ee.i)(r.shape)),t=(0,o.p)((0,re.S)((0,$e.Q)(e,(0,g.i)(0))),"float32");return(0,c.h)((0,re.S)(s),t)}}throw Error(`Unknown reduction: ${n}`)}});(0,D.op)({absoluteDifference_:function(e,t,n,r=ke.SUM_BY_NONZERO_WEIGHTS){const a=(0,T._1)(e,"labels","absoluteDifference"),s=(0,T._1)(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=(0,T._1)(n,"weights","absoluteDifference")),(0,I.k5)(a.shape,s.shape,"Error in absoluteDifference: ");const i=(0,pe.W)((0,w.l)(a,s));return _e(i,o,r)}}),(0,D.op)({cosineDistance_:function(e,t,n,r,a=ke.SUM_BY_NONZERO_WEIGHTS){const s=(0,T._1)(e,"labels","cosineDistance"),o=(0,T._1)(t,"predictions","cosineDistance");let i=null;null!=r&&(i=(0,T._1)(r,"weights","cosineDistance")),(0,I.k5)(s.shape,o.shape,"Error in cosineDistance: ");const u=(0,g.i)(1),l=(0,w.l)(u,(0,re.S)((0,d.d)(s,o),n,!0));return _e(l,i,a)}});var Re=n(9076);(0,D.op)({hingeLoss_:function(e,t,n,r=ke.SUM_BY_NONZERO_WEIGHTS){let a=(0,T._1)(e,"labels","hingeLoss");const s=(0,T._1)(t,"predictions","hingeLoss");let o=null;null!=n&&(o=(0,T._1)(n,"weights","hingeLoss")),(0,I.k5)(a.shape,s.shape,"Error in hingeLoss: ");const i=(0,g.i)(1);a=(0,w.l)((0,d.d)((0,g.i)(2),a),i);const u=(0,Re.U)((0,w.l)(i,(0,d.d)(a,s)));return _e(u,o,r)}});var Ae=n(6885);(0,D.op)({huberLoss_:function(e,t,n,a=1,s=ke.SUM_BY_NONZERO_WEIGHTS){const o=(0,T._1)(e,"labels","huberLoss"),i=(0,T._1)(t,"predictions","huberLoss");let u=null;null!=n&&(u=(0,T._1)(n,"weights","huberLoss")),(0,I.k5)(o.shape,i.shape,"Error in huberLoss: ");const l=(0,g.i)(a),c=(0,pe.W)((0,w.l)(i,o)),p=(0,Ae.L)(c,l),h=(0,w.l)(c,p),f=(0,r.I)((0,d.d)((0,g.i)(.5),(0,ye.h)(p)),(0,d.d)(l,h));return _e(f,u,s)}});var Oe=n(1943);(0,D.op)({logLoss_:function(e,t,n,a=1e-7,s=ke.SUM_BY_NONZERO_WEIGHTS){const o=(0,T._1)(e,"labels","logLoss"),i=(0,T._1)(t,"predictions","logLoss");let u=null;null!=n&&(u=(0,T._1)(n,"weights","logLoss")),(0,I.k5)(o.shape,i.shape,"Error in logLoss: ");const l=(0,g.i)(1),c=(0,g.i)(a),p=(0,Te.W)((0,d.d)(o,(0,Oe.c)((0,r.I)(i,c)))),h=(0,d.d)((0,w.l)(l,o),(0,Oe.c)((0,r.I)((0,w.l)(l,i),c))),f=(0,w.l)(p,h);return _e(f,u,s)}});var De=n(8847);(0,D.op)({meanSquaredError_:function(e,t,n,r=ke.SUM_BY_NONZERO_WEIGHTS){const a=(0,T._1)(e,"labels","meanSquaredError"),s=(0,T._1)(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=(0,T._1)(n,"weights","meanSquaredError")),(0,I.k5)(a.shape,s.shape,"Error in meanSquaredError: ");const i=(0,De.$)(a,s);return _e(i,o,r)}});var Fe=n(5956);(0,D.op)({sigmoidCrossEntropy_:function(e,t,n,a=0,s=ke.SUM_BY_NONZERO_WEIGHTS){let o=(0,T._1)(e,"multiClassLabels","sigmoidCrossEntropy");const i=(0,T._1)(t,"logits","sigmoidCrossEntropy");let u=null;if(null!=n&&(u=(0,T._1)(n,"weights","sigmoidCrossEntropy")),(0,I.k5)(o.shape,i.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=(0,g.i)(a),t=(0,g.i)(1),n=(0,g.i)(.5);o=(0,r.I)((0,d.d)(o,(0,w.l)(t,e)),(0,d.d)(n,e))}const l=function(e,t){const n=(0,T._1)(e,"labels","sigmoidCrossEntropyWithLogits"),a=(0,T._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,I.k5)(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=(0,Re.U)(a),o=(0,d.d)(a,n),i=(0,Fe.K)((0,p.Q)((0,Te.W)((0,pe.W)(a))));return(0,r.I)((0,w.l)(s,o),i)}(o,i);return _e(l,u,s)}});var Me=n(6450);const Be=(0,D.op)({logSumExp_:function(e,t=null,n=!1){const a=(0,T._1)(e,"x","logSumExp"),s=(0,I.EC)(t,a.shape),o=(0,de.F)(a,s,!0),i=(0,w.l)(a,o),u=(0,p.Q)(i),l=(0,re.S)(u,s),c=(0,Oe.c)(l),h=(0,r.I)((0,m.X)(o,c.shape),c);if(n){const e=(0,he.rv)(h.shape,s);return(0,m.X)(h,e)}return h}});(0,D.op)({softmaxCrossEntropy_:function(e,t,n,a=0,s=ke.SUM_BY_NONZERO_WEIGHTS){let i=(0,T._1)(e,"onehotLabels","softmaxCrossEntropy");const u=(0,T._1)(t,"logits","softmaxCrossEntropy");let l=null;if(null!=n&&(l=(0,T._1)(n,"weights","softmaxCrossEntropy")),(0,I.k5)(i.shape,u.shape,"Error in softmaxCrossEntropy: "),a>0){const e=(0,g.i)(a),t=(0,g.i)(1),n=(0,g.i)(i.shape[1]);i=(0,r.I)((0,d.d)(i,(0,w.l)(t,e)),(0,c.h)(e,n))}const h=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=(0,Me.cb)(((e,t,r)=>{const a=Be(t,[n],!0),s=(0,w.l)((0,o.p)(t,"float32"),a);r([e,s]);const i=(0,Te.W)((0,d.d)(s,e));return{value:(0,re.S)(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=(0,he.rv)(e.shape,[n]);return[(0,d.d)((0,m.X)(e,s),(0,w.l)((0,o.p)(r,"float32"),(0,p.Q)(a))),(0,d.d)((0,m.X)(e,s),(0,w.l)((0,p.Q)(a),(0,o.p)(r,"float32")))]}}}));return r(e,t)}(i,u);return _e(h,l,s)}});const Pe=(0,D.op)({sparseFillEmptyRows_:function(e,t,n,r){const a=(0,T._1)(e,"indices","sparseFillEmptyRows","int32"),s=(0,T._1)(t,"values","sparseFillEmptyRows"),o=(0,T._1)(n,"denseShape","sparseFillEmptyRows","int32"),i=(0,T._1)(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==o.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(0!==i.rank)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const u={indices:a,values:s,denseShape:o,defaultValue:i},l=L.BV.runKernel(V.O3,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),Le=(0,D.op)({sparseReshape_:function(e,t,n){const r=(0,T._1)(e,"inputIndices","sparseReshape","int32"),a=(0,T._1)(t,"inputShape","sparseReshape","int32"),s=(0,T._1)(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const o={inputIndices:r,inputShape:a,newShape:s},i=L.BV.runKernel(V.nh,o);return{outputIndices:i[0],outputShape:i[1]}}}),Ve=(0,D.op)({sparseSegmentMean_:function(e,t,n){const r=(0,T._1)(e,"data","sparseSegmentMean"),a=(0,T._1)(t,"indices","sparseSegmentMean","int32"),s=(0,T._1)(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const o={data:r,indices:a,segmentIds:s};return L.BV.runKernel(V.YW,o)}}),Ue=(0,D.op)({sparseSegmentSum_:function(e,t,n){const r=(0,T._1)(e,"data","sparseSegmentSum"),a=(0,T._1)(t,"indices","sparseSegmentSum","int32"),s=(0,T._1)(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const o={data:r,indices:a,segmentIds:s};return L.BV.runKernel(V.Zj,o)}}),We=(0,D.op)({stringNGrams_:function(e,t,n,r,a,s,o,i){const u=(0,T._1)(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=(0,T._1)(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:o,preserveShortSequences:i},p={data:u,dataSplits:l},h=L.BV.runKernel(V._J,p,c);return{nGrams:h[0],nGramsSplits:h[1]}}}),ze=(0,D.op)({stringSplit_:function(e,t,n=!0){const r=(0,T._1)(e,"input","stringSplit","string"),a=(0,T._1)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},o={input:r,delimiter:a},i=L.BV.runKernel(V.s1,o,s);return{indices:i[0],values:i[1],shape:i[2]}}}),Ge=(0,D.op)({stringToHashBucketFast_:function(e,t){const n=(0,T._1)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return L.BV.runKernel(V.Xk,a,r)}}),He=(R.k,A.S,_.Q,O.w,{flipLeftRight:W,grayscaleToRGB:G,resizeNearestNeighbor:Z,resizeBilinear:Q,rotateWithOffset:H,cropAndResize:U,nonMaxSuppression:X,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=(0,T._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,T._1)(t,"scores","nonMaxSuppressionAsync"),i=j(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const u=await Promise.all([s.data(),o.data()]),l=u[0],c=u[1],{selectedIndices:p}=(0,K.GP)(l,c,n,r,a);return s!==e&&s.dispose(),o!==t&&o.dispose(),(0,S.R)(p,"int32")},nonMaxSuppressionWithScore:q,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=(0,T._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,T._1)(t,"scores","nonMaxSuppressionAsync"),u=j(o,i,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),c=l[0],p=l[1],{selectedIndices:h,selectedScores:d}=(0,K.pA)(c,p,n,r,a,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:(0,S.R)(h,"int32"),selectedScores:(0,S.R)(d)}},nonMaxSuppressionPadded:Y,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=(0,T._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,T._1)(t,"scores","nonMaxSuppressionAsync"),u=j(o,i,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,p=u.scoreThreshold,[h,d]=await Promise.all([o.data(),i.data()]),{selectedIndices:f,validOutputs:m}=(0,K.qP)(h,d,l,c,p,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:(0,S.R)(f,"int32"),validOutputs:(0,g.i)(m,"int32")}},threshold:ie,transform:ue}),je={sparseFillEmptyRows:Pe,sparseReshape:Le,sparseSegmentMean:Ve,sparseSegmentSum:Ue},Xe={stringNGrams:We,stringSplit:ze,stringToHashBucketFast:Ge}},8814:(e,t,n)=>{"use strict";n.d(t,{v:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({pad_:function(e,t,n=0){const o=(0,s._1)(e,"x","pad");if(0===o.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:n},u={x:o};return r.BV.runKernel(a.ly,u,i)}})},1109:(e,t,n)=>{"use strict";n.d(t,{s:()=>i});var r=n(1355),a=n(4929),s=n(4722),o=n(8136);const i=(0,n(6154).op)({pow_:function(e,t){let n=(0,o._1)(e,"base","pow"),i=(0,o._1)(t,"exp","pow");[n,i]=(0,s.T_)(n,i);const u={a:n,b:i};return r.BV.runKernel(a.pe,u)}})},5278:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({prelu_:function(e,t){const n={x:(0,s._1)(e,"x","prelu"),alpha:(0,s._1)(t,"alpha","prelu")};return r.BV.runKernel(a.o0,n)}})},6946:(e,t,n)=>{"use strict";n.d(t,{w:()=>s});var r=n(1355),a=n(4929);function s(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const o={start:e,stop:t,step:n,dtype:s};return r.BV.runKernel(a.e6,{},o)}},4955:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({real_:function(e){const t={input:(0,s._1)(e,"input","real")};return r.BV.runKernel(a.xJ,t)}})},9076:(e,t,n)=>{"use strict";n.d(t,{U:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({relu_:function(e){const t={x:(0,s._1)(e,"x","relu")};return r.BV.runKernel(a.qk,t)}})},3519:(e,t,n)=>{"use strict";n.d(t,{b:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({relu6_:function(e){const t={x:(0,s._1)(e,"x","relu6")};return r.BV.runKernel(a.Sb,t)}})},4175:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({reshape_:function(e,t){const n={x:(0,s._1)(e,"x","reshape","string_or_numeric")},o={shape:t};return r.BV.runKernel(a.HZ,n,o)}})},508:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({reverse_:function(e,t){const n={x:(0,s._1)(e,"x","reverse")},o={dims:t};return r.BV.runKernel(a.mK,n,o)}})},7497:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({round_:function(e){const t={x:(0,s._1)(e,"x","round")};return r.BV.runKernel(a.e0,t)}})},5580:(e,t,n)=>{"use strict";n.d(t,{i:()=>s});var r=n(6808),a=n(4343);function s(e,t){if(((0,r.fU)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.fU)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,a.H)(e,[],[],t)}},9792:(e,t,n)=>{"use strict";n.d(t,{l5:()=>a,b0:()=>s,SU:()=>o});var r=n(6808);function a(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function s(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}a(n,t,e)}function o(e,t,n){const a=t.shape.length,s=a>1?t.shape[a-1]:1,o=n.length;let i=1;for(let e=s;e<o;++e)i*=n[e];const u=s<1?1:s;return{sliceRank:s,numUpdates:(0,r.NA)(t.shape)/u,sliceSize:i,strides:[...(0,r.e3)(n.slice(0,s)),1],outputSize:(0,r.NA)(n)}}},1403:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({sigmoid_:function(e){const t={x:(0,s._1)(e,"x","sigmoid","float32")};return r.BV.runKernel(a.a5,t)}})},9398:(e,t,n)=>{"use strict";n.d(t,{t:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({slice_:function(e,t,n){const o=(0,s._1)(e,"x","slice","string_or_numeric");if(0===o.rank)throw new Error("Slicing scalar is not possible");const i={x:o},u={begin:t,size:n};return r.BV.runKernel(a.p2,i,u)}})},5175:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var r=n(1355),a=n(4929),s=n(6808);const o=(0,n(6154).op)({fft_:function(e){(0,s.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(a.vw,t)}})},2325:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var r=n(1355),a=n(4929),s=n(6808);const o=(0,n(6154).op)({ifft_:function(e){(0,s.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(a.Qg,t)}})},8098:(e,t,n)=>{"use strict";n.d(t,{w:()=>f});var r=n(1919),a=n(2685),s=n(9324),o=n(7536),i=n(6154),u=n(4955),l=n(4175),c=n(508),p=n(5580),h=n(9398),d=n(2325);const f=(0,i.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let i;if(t<=2){const r=(0,l.X)(e,[n,t]);i=(0,d.S)(r)}else{const f=[n,2*(t-1)],m=(0,l.X)((0,u.k)(e),[n,t]),g=(0,l.X)((0,s.a)(e),[n,t]),y=(0,c.G)((0,h.t)(m,[0,1],[n,t-2]),1),x=(0,o.d)((0,c.G)((0,h.t)(g,[0,1],[n,t-2]),1),(0,p.i)(-1)),b=(0,a.z)([m,y],1),v=(0,a.z)([g,x],1),w=(0,l.X)((0,r.P)(b,v),[f[0],f[1]]);i=(0,d.S)(w)}if(i=(0,u.k)(i),3===e.rank&&0!==e.shape[0]){const t=i,n=e.shape[0];i=(0,l.X)(i,[n,i.shape[0]/n,i.shape[1]]),t.dispose()}return i}})},981:(e,t,n)=>{"use strict";n.d(t,{Q:()=>m});var r=n(6808),a=n(1919),s=n(2685),o=n(9324),i=n(6154),u=n(4955),l=n(4175),c=n(9398),p=n(5717),h=n(9306),d=n(9430),f=n(5175);const m=(0,i.op)({rfft_:function(e,t){(0,r.hu)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const i=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,m=(0,c.t)(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,m=(0,s.z)([e,(0,h.l)(r)],e.shape.length-1),n=t}else m=e;const g=(0,d.P)(m),y=(0,l.X)((0,a.P)(m,g),[i,n]),x=(0,f.k)(y),b=Math.floor(n/2)+1,v=(0,u.k)(x),w=(0,o.a)(x),k=(0,p.V)(v,[b,n-b],v.shape.length-1),S=(0,p.V)(w,[b,n-b],w.shape.length-1),T=m.shape.slice();return T[m.shape.length-1]=b,(0,l.X)((0,a.P)(k[0],S[0]),T)}})},5717:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({split_:function(e,t,n=0){const o={x:(0,s._1)(e,"x","split")},i={numOrSizeSplits:t,axis:n};return r.BV.runKernel(a.L8,o,i)}})},569:(e,t,n)=>{"use strict";n.d(t,{_:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({sqrt_:function(e){const t={x:(0,s._1)(e,"x","sqrt","float32")};return r.BV.runKernel(a.FK,t)}})},9099:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var r=n(1355),a=n(8136);const s=(0,n(6154).op)({square_:function(e){const t=(0,a._1)(e,"x","square");return r.BV.runKernel("Square",{x:t},{})}})},8847:(e,t,n)=>{"use strict";n.d(t,{$:()=>u});var r=n(1355),a=n(4929),s=n(4722),o=n(8136),i=n(769);const u=(0,n(6154).op)({squaredDifference_:function(e,t){let n=(0,o._1)(e,"a","squaredDifference"),u=(0,o._1)(t,"b","squaredDifference");[n,u]=(0,s.T_)(n,u),(0,i.assertAndGetBroadcastShape)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a._t,l,{})}})},7058:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var r=n(8136),a=n(6808),s=n(6154),o=n(4175);const i=(0,s.op)({squeeze_:function(e,t){const n=(0,r._1)(e,"x","squeeze");return(0,o.X)(n,(0,a.bp)(n.shape,t).newShape)}})},1110:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var r=n(1355),a=n(4929),s=n(8136),o=n(6808);const i=(0,n(6154).op)({stack_:function(e,t=0){const n=(0,s.sI)(e,"tensors","stack","string_or_numeric");o.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&o.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const i=n,u={axis:t};return r.BV.runKernel(a.Qi,i,u)}})},9723:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(1355),a=n(4929),s=n(4722),o=n(8136);const i=(0,n(6154).op)({sub_:function(e,t){let n=(0,o._1)(e,"a","sub"),i=(0,o._1)(t,"b","sub");[n,i]=(0,s.T_)(n,i);const u={a:n,b:i};return r.BV.runKernel(a.Tr,u)}})},5810:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var r=n(1355),a=n(4929),s=n(8136),o=n(5701);const i=(0,n(6154).op)({sum_:function(e,t=null,n=!1){let i=(0,s._1)(e,"x","sum");"bool"===i.dtype&&(i=(0,o.p)(i,"int32"));const u={x:i},l={axis:t,keepDims:n};return r.BV.runKernel(a.GB,u,l)}})},3558:(e,t,n)=>{"use strict";n.d(t,{X:()=>s});var r=n(8136),a=n(4343);function s(e,t,n){const s=(0,r.C)(e,n);return(0,a.H)(e,t,s,n)}},3501:(e,t,n)=>{"use strict";n.d(t,{R:()=>o});var r=n(8136),a=n(6808),s=n(4343);function o(e,t){(0,a.Cq)(e);const n=(0,r.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,s.H)(e,null,n,t)}},4343:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(1355),a=n(6808),s=n(3882);function o(e,t,n,o){if(null==o&&(o=(0,a.D2)(e)),"complex64"===o)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!(0,a.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,a.Mu)(t);const e=(0,a.NA)(t),r=(0,a.NA)(n);(0,a.hu)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==(0,a.NA)(t.slice(e));(0,a.hu)(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,a.fU)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==o?(0,s.toTypedArray)(e,o):(0,a.xH)(e,[],!0),r.BV.makeTensor(e,t,o)}},4777:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var r=n(1355),a=n(4929),s=n(8136),o=n(6808);const i=(0,n(6154).op)({tile_:function(e,t){const n=(0,s._1)(e,"x","tile","string_or_numeric");o.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const i={x:n},u={reps:t};return r.BV.runKernel(a.n9,i,u)}})},8299:(e,t,n)=>{"use strict";n.d(t,{p:()=>i});var r=n(1355),a=n(4929),s=n(8136),o=n(6808);const i=(0,n(6154).op)({transpose_:function(e,t){const n=(0,s._1)(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),o.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{o.hu(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const i={x:n},u={perm:t};return r.BV.runKernel(a.G3,i,u)}})},2153:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var r=n(1355),a=n(4929),s=n(8136),o=n(6808);const i=(0,n(6154).op)({unstack_:function(e,t=0){const n=(0,s._1)(e,"x","unstack","string_or_numeric");o.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const i={value:n},u={axis:t};return r.BV.runKernel(a.To,i,u)}})},5879:(e,t,n)=>{"use strict";n.d(t,{a:()=>u});var r=n(1355),a=n(4929),s=n(8136),o=n(8403),i=n(769);const u=(0,n(6154).op)({where_:function(e,t,n){const u=(0,s._1)(t,"a","where"),l=(0,s._1)(n,"b","where"),c=(0,s._1)(e,"condition","where","bool"),p=(0,i.assertAndGetBroadcastShape)((0,i.assertAndGetBroadcastShape)(c.shape,u.shape),l.shape),h={condition:(0,o.U)(c,p),t:(0,o.U)(u,p),e:(0,o.U)(l,p)};return r.BV.runKernel(a.Ph,h)}})},9306:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var r=n(1355),a=n(6808),s=n(1919);function o(e,t="float32"){if("complex64"===t){const t=o(e,"float32"),n=o(e,"float32");return(0,s.P)(t,n)}const n=(0,a.wT)((0,a.NA)(e),t);return r.BV.makeTensor(n,e,t)}},9430:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var r=n(1355),a=n(4929),s=n(8136);const o=(0,n(6154).op)({zerosLike_:function(e){const t={x:(0,s._1)(e,"x","zerosLike")};return r.BV.runKernel(a.Ru,t)}})},8990:(e,t,n)=>{"use strict";n.d(t,{es:()=>x,YD:()=>p,_w:()=>b,FZ:()=>y,Vp:()=>g,Vi:()=>m});var r=n(645),a=n(6808);function s(e,t,n,r){const s=(0,a.e3)(t),i=function(e,t,n,r){const s=(0,a.NA)(t),i=r[r.length-1],u=new Array(i).fill(0),c=t.length,p="complex64"===n?l(e):e;if(c>1)for(let e=0;e<s/i;e++){const t=e*i;for(let e=0;e<i;e++)u[e]=Math.max(u[e],o(p[t+e],0,n).length)}return u}(e,t,n,s),c=t.length,p=u(e,t,n,s,i),h=["Tensor"];return r&&(h.push(`  dtype: ${n}`),h.push(`  rank: ${c}`),h.push(`  shape: [${t}]`),h.push("  values:")),h.push(p.map((e=>"    "+e)).join("\n")),h.join("\n")}function o(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,a.HD)(e)?`'${e}'`:"bool"===n?i(e):parseFloat(e.toFixed(7)).toString(),(0,a.oj)(r,t)}function i(e){return 0===e?"false":"true"}function u(e,t,n,r,a,s=!0){const c="complex64"===n?2:1,p=t[0],h=t.length;if(0===h)return"complex64"===n?[o(l(e)[0],0,n)]:"bool"===n?[i(e[0])]:[e[0].toString()];if(1===h){if(p>20){const t=3*c;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((p-3)*c,p*c));return"complex64"===n&&(r=l(r),s=l(s)),["["+r.map(((e,t)=>o(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>o(e,a[p-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?l(e):Array.from(e)).map(((e,t)=>o(e,a[t],n))).join(", ")+"]"]}const d=t.slice(1),f=r.slice(1),m=r[0]*c,g=[];if(p>20){for(let t=0;t<3;t++){const r=t*m,s=r+m;g.push(...u(e.slice(r,s),d,n,f,a,!1))}g.push("...");for(let t=p-3;t<p;t++){const r=t*m,s=r+m;g.push(...u(e.slice(r,s),d,n,f,a,t===p-1))}}else for(let t=0;t<p;t++){const r=t*m,s=r+m;g.push(...u(e.slice(r,s),d,n,f,a,t===p-1))}const y=2===h?",":"";g[0]="["+g[0]+y;for(let e=1;e<g.length-1;e++)g[e]=" "+g[e]+y;let x=",\n";for(let e=2;e<h;e++)x+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(s?"":x),g}function l(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var c=n(3882);class p{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a.NA(e),null!=n){const e=n.length;a.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.rQ(t,this.size),this.strides=(0,a.e3)(e)}set(e,...t){0===t.length&&(t=[0]),a.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return h().makeTensor(this.values,this.shape,this.dtype)}}let h=null,d=null,f=null;function m(e){h=e}function g(e){d=e}function y(e){f=e}class x{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.NA(e),this.strides=(0,a.e3)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return d.buffer(this.shape,this.dtype,e)}bufferSync(){return d.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,a.GX)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,a.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=h().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>c.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),h().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=h().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>c.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await h().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(h().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return d.print(this,e)}clone(){return this.throwIfDisposed(),d.clone(this)}toString(e=!1){return s(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),d.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),h().makeVariable(this,e,t,n)}}Object.defineProperty(x,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),(0,r.R)("Tensor",(()=>x));class b extends x{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);h().disposeTensor(this),this.dataId=e.dataId,h().incRef(this,null)}dispose(){h().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(b,Symbol.hasInstance,{value:e=>e instanceof x&&null!=e.assign&&e.assign instanceof Function})},4722:(e,t,n)=>{"use strict";n.d(t,{T_:()=>s,Vu:()=>o});var r=n(8990),a=n(6360);function s(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,a.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e){const t=[];return i(e,t,new Set),t}function i(e,t,n){if(null==e)return;if(e instanceof r.es)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!=typeof a)return;var a;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),i(r,t,n))}}},8136:(e,t,n)=>{"use strict";n.d(t,{C:()=>u,_1:()=>p,sI:()=>h});var r=n(1355),a=n(6142),s=n(8990),o=n(6808),i=n(3882);function u(e,t){let n=e;if((0,o.fU)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,o.fU)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,a.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&l(e,r,[]),r}function l(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,o.fU)(e))return void(0,o.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,o.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,o.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)l(e[t],r,n.concat(t))}function c(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function p(e,t,n,a="numeric"){if(e instanceof s.es)return c(a,e.dtype,t,n),e;let l=(0,o.D2)(e);if("string"!==l&&["bool","int32","float32"].indexOf(a)>=0&&(l=a),c(a,l,t,n),null==e||!(0,o.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const p=u(e,l);(0,o.fU)(e)||Array.isArray(e)||(e=[e]);const h="string"!==l?(0,i.toTypedArray)(e,l):(0,o.xH)(e,[],!0);return r.BV.makeTensor(h,p,l)}function h(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>p(e,`${t}[${a}]`,n,r)))}},6360:(e,t,n)=>{"use strict";var r,a,s,o,i;n.d(t,{x8:()=>l,z4:()=>c}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(i||(i={}));const u={float32:o,int32:a,bool:s,complex64:i};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function c(e){return l(e,"int32")}},3882:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>a.cO,assert:()=>a.hu,assertNonNegativeIntegerDimensions:()=>a.Mu,assertNonNull:()=>a.Cq,assertShapesMatch:()=>a.k5,bytesFromStringArray:()=>a.Ub,bytesPerElement:()=>a.bT,checkConversionForErrors:()=>a.D5,clamp:()=>a.uZ,computeStrides:()=>a.e3,createScalarValue:()=>b,createShuffledIndices:()=>a.U$,decodeString:()=>T,distSquared:()=>a.E7,encodeString:()=>S,fetch:()=>k,fingerPrint64:()=>x,flatten:()=>a.xH,getArrayFromDType:()=>a.rQ,getTypedArrayFromDType:()=>a.WP,hasEncodingLoss:()=>a.QB,hexToLong:()=>i,indexToLoc:()=>a.NE,inferDtype:()=>a.D2,inferFromImplicitShape:()=>a.JZ,isBoolean:()=>a.jn,isFunction:()=>a.mf,isInt:()=>a.GN,isNumber:()=>a.hj,isPromise:()=>a.tI,isScalarShape:()=>a.N9,isString:()=>a.HD,isTypedArray:()=>a.fU,isValidDtype:()=>a.LP,locToIndex:()=>a.qy,makeOnesTypedArray:()=>a.p8,makeZerosNestedTypedArray:()=>a.l6,makeZerosTypedArray:()=>a.wT,nearestDivisor:()=>a.jP,nearestLargerEven:()=>a.nY,now:()=>w,parseAxisParam:()=>a.EC,randUniform:()=>a.bj,repeatedTry:()=>a.WD,rightPad:()=>a.oj,shuffle:()=>a.TV,shuffleCombo:()=>a.d7,sizeFromShape:()=>a.NA,sizeToSquarishShape:()=>a.YP,squeezeShape:()=>a.bp,sum:()=>a.Sm,swap:()=>a.LF,tanh:()=>a.AE,toNestedArray:()=>a.GX,toTypedArray:()=>v});var r=n(6142),a=n(6808),s=n(9168);const o=n.n(s)()||s;function i(e){return o.fromString(e,!0,16)}const u=i("c3a5c85c97cb3127"),l=i("b492b66fbe98f273"),c=i("9ae16a3b2f90404f");function p(e){return e.xor(e.shru(47))}function h(e,t,n){const r=e.slice(t,t+n);return o.fromBytes(Array.from(r),!0,!0)}function d(e,t){return h(e,t,8)}function f(e,t){return h(e,t,4)}function m(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function g(e,t,n=i("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function y(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=m(s.add(a).add(r),21);const o=a;return a=(a=a.add(t)).add(n),s=s.add(m(a,44)),[a.add(r),s.add(o)]}(d(e,t),d(e,t+8),d(e,t+16),d(e,t+24),n,r)}function x(e,t=e.length){const n=o.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=c.add(2*t),r=d(e,0).add(c),a=d(e,t-8);return g(m(a,37).mul(n).add(r),m(r,25).add(a).mul(n),n)}if(t>=4){const n=c.add(2*t);return g(f(e,0).shl(3).add(t),f(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return p(c.mul(n).xor(u.mul(r))).mul(c)}return c}(e,t):function(e,t=e.length){const n=c.add(2*t),r=d(e,0).mul(l),a=d(e,8),s=d(e,t-8).mul(n),o=d(e,t-16).mul(c);return g(m(r.add(a),43).add(m(s,30)).add(o),r.add(m(a.add(c),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=c.add(2*t),r=d(e,0).mul(c),a=d(e,8),s=d(e,t-8).mul(n),o=d(e,t-16).mul(c),i=m(r.add(a),43).add(m(s,30)).add(o),u=g(i,r.add(m(a.add(c),18)).add(s),n),l=d(e,16).mul(n),p=d(e,24),h=i.add(d(e,t-32)).mul(n),f=u.add(d(e,t-24)).mul(n);return g(m(l.add(p),43).add(m(h,30)).add(f),l.add(m(p.add(r),18)).add(h),n)}(e,t);let r=n,a=n.mul(l).add(113),s=p(a.mul(c).add(113)).mul(c),i=[o.UZERO,o.UZERO],h=[o.UZERO,o.UZERO];r=r.mul(c).add(d(e,0));let x=0;const b=64*(t-1>>6),v=b+(t-1&63)-63;do{r=m(r.add(a).add(i[0]).add(d(e,x+8)),37).mul(l),a=m(a.add(i[1]).add(d(e,x+48)),42).mul(l),r=r.xor(h[1]),a=a.add(i[0]).add(d(e,x+40)),s=m(s.add(h[0]),33).mul(l),i=y(e,x,i[1].mul(l),r.add(h[0])),h=y(e,x+32,s.add(h[1]),a.add(d(e,x+16))),[s,r]=[r,s],x+=64}while(x!==b);const w=l.add(s.and(255).shl(1));return x=v,h[0]=h[0].add(t-1&63),i[0]=i[0].add(h[0]),h[0]=h[0].add(i[0]),r=m(r.add(a).add(i[0]).add(d(e,x+8)),37).mul(w),a=m(a.add(i[1]).add(d(e,x+48)),42).mul(w),r=r.xor(h[1].mul(9)),a=a.add(i[0].mul(9).add(d(e,x+40))),s=m(s.add(h[0]),33).mul(w),i=y(e,x,i[1].mul(w),r.add(h[0])),h=y(e,x+32,s.add(h[1]),a.add(d(e,x+16))),[s,r]=[r,s],g(g(i[0],h[0],w).add(p(a).mul(u)).add(s),g(i[1],h[1],w).add(r),w)}function b(e,t){return"string"===t?S(e):v([e],t)}function v(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=a.xH(e)),(0,r.OB)().getBool("DEBUG")&&a.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function w(){return(0,r.OB)().platform.now()}function k(e,t){return(0,r.OB)().platform.fetch(e,t)}function S(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.encode(e,t)}function T(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.decode(e,t)}},6808:(e,t,n)=>{"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,i(e,t,n)}function a(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,i(e,n,r),i(t,n,r)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function o(e){return e%2==0?e:e+1}function i(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function p(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function h(e,t,n=""){p(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function d(e){p(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||A(e)&&!n)for(let r=0;r<e.length;++r)f(e[r],t,n);else t.push(e);return t}function m(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function g(e){return 0===e.length}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function x(e){return e%1==0}function b(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function v(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function S(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0;const o=()=>{if(e())return void r();s++;const i=t(s);null!=n&&s>=n?a():setTimeout(o,i)};o()}))}function T(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function I(e,t){const n=t.length;return p((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),p(e.every((e=>x(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function N(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:I(t,e).sort();let o=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[o]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[o]||s[o]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[o]<=t&&o++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function C(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function $(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function E(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function _(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function R(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function A(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function O(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function D(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function F(e){return"string"==typeof e||e instanceof String}function M(e){return"boolean"==typeof e}function B(e){return"number"==typeof e}function P(e){return Array.isArray(e)?P(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":B(e)?"float32":F(e)?"string":M(e)?"bool":"float32"}function L(e){return!!(e&&e.constructor&&e.call&&e.apply)}function V(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function U(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function W(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=W(e+t*i,o,n,r)}return a}function z(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return W(0,e,t,n)}function G(e,t){const n=H(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function H(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function j(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return z(e,new Float32Array(n));if("int32"===t)return z(e,new Int32Array(n));if("bool"===t)return z(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function X(e){e.forEach((t=>{p(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function K(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function q(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Y(e){return e&&e.then&&"function"==typeof e.then}n.d(t,{TV:()=>r,d7:()=>a,uZ:()=>s,nY:()=>o,LF:()=>i,Sm:()=>u,bj:()=>l,E7:()=>c,hu:()=>p,k5:()=>h,Cq:()=>d,xH:()=>f,NA:()=>m,N9:()=>g,cO:()=>y,GN:()=>x,AE:()=>b,YP:()=>v,U$:()=>w,oj:()=>k,WD:()=>S,JZ:()=>T,EC:()=>I,bp:()=>N,WP:()=>C,rQ:()=>$,D5:()=>E,LP:()=>_,QB:()=>R,fU:()=>A,bT:()=>O,Ub:()=>D,HD:()=>F,jn:()=>M,hj:()=>B,D2:()=>P,mf:()=>L,jP:()=>V,e3:()=>U,GX:()=>z,p8:()=>G,wT:()=>H,l6:()=>j,Mu:()=>X,qy:()=>K,NE:()=>q,tI:()=>Y})},379:(e,t,n)=>{"use strict";n.d(t,{oV:()=>Va,cH:()=>Ps});var r={};n.r(r),n.d(r,{json:()=>F});var a={};n.r(a),n.d(a,{json:()=>M});var s={};n.r(s),n.d(s,{json:()=>B});var o={};n.r(o),n.d(o,{json:()=>P});var i={};n.r(i),n.d(i,{json:()=>L});var u={};n.r(u),n.d(u,{json:()=>V});var l={};n.r(l),n.d(l,{json:()=>U});var c={};n.r(c),n.d(c,{json:()=>W});var p={};n.r(p),n.d(p,{json:()=>z});var h={};n.r(h),n.d(h,{json:()=>G});var d={};n.r(d),n.d(d,{json:()=>H});var f={};n.r(f),n.d(f,{json:()=>j});var m={};n.r(m),n.d(m,{json:()=>X});var g={};n.r(g),n.d(g,{json:()=>K});var y={};n.r(y),n.d(y,{json:()=>q});var x={};n.r(x),n.d(x,{json:()=>Y});var b={};n.r(b),n.d(b,{json:()=>Q});var v={};n.r(v),n.d(v,{json:()=>Z});var w={};n.r(w),n.d(w,{json:()=>J});var k,S,T=n(5860),I=n(7110);(0,I.OBj)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(k||(k={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(S||(S={}));const N={};function C(e){return N[e]}function $(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return E(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,o).map((e=>E(e,n,r,a)));const i=E(t.inputNames.slice(e)[0],n,r,a),u=i.dataSync();return"number"===s.type?u[0]:I.D5U.toNestedArray(i.shape,u)}const o=t.attrParams[e];return o&&o.value}function E(e,t,n,r){const[a,s]=A(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[R(a,e)]));return void 0!==o?t[R(a,o)][s]:void 0}function _(e,t){const[n,r,a]=A(e);return[R(n,t&&t.currentContextId),r,a]}function R(e,t){return t?`${e}-${t}`:e}function A(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function O(e,t,n){let r=$("pad",e,t,n);if("explicit"===r){r=$("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function D(e){return e.kept?e:(0,I.d9v)(e)}const F=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],M=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],B=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],P=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],L=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],V=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],U=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],W=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],z=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],G=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],H=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],j=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],X=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],K=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],q=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Y=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Q=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Z=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],J=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class ee{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[r,a,s,o,i,u,l,c,p,h,d,f,m,g,y,x,b,v,w].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let i=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const p=Object.keys(o);p.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=_(e),s=o[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(c).length?p.forEach((e=>{const t=o[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=_(e),n=o[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=_(e),n=o[t];n&&(n.signatureKey=l[e],i.push(n))})):i=r;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:o,inputs:i,outputs:u,weights:a,placeholders:r,signature:t,functions:h};return s.length>0&&(d.initNodes=s),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=C(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=ne(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ne(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=he(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=he(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=ae(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=ae(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=pe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=pe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=re(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=re(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=fe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=fe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=ce(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ce(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=de(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=de(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=ie(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ie(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=ue(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ue(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=oe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=_(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:se(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[a,,s]=_(e),o=r[a];if(null!=o.outputs){const e=o.outputs.indexOf(s);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(o),o.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=_(o[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const i=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function te(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,I.OBj)().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function ne(e,t,n,r=!1){const a=e[t];return null!=a?te(a.s,r):n}function re(e,t,n){const r=e[t];return r?r.b:n}function ae(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function se(e){switch("string"==typeof e&&(e=k[e]),e){case k.DT_FLOAT:case k.DT_HALF:return"float32";case k.DT_INT32:case k.DT_INT64:case k.DT_INT8:case k.DT_UINT8:return"int32";case k.DT_BOOL:return"bool";case k.DT_DOUBLE:return"float32";case k.DT_STRING:return"string";default:return null}}function oe(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function ie(e,t,n){const r=e[t];return r&&r.type?se(r.type):n}function ue(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>se(e))):n}function le(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function ce(e,t,n){const r=e[t];return r&&r.shape?le(r.shape):n}function pe(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function he(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>te(e,r))):n}function de(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>le(e))):n}function fe(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class me{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return E(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return E(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return ae(this.node.rawAttrs,e,t);if(null!=n.s)return ne(this.node.rawAttrs,e,t);if(null!=n.b)return re(this.node.rawAttrs,e,t);if(null!=n.shape)return ce(this.node.rawAttrs,e,t);if(null!=n.type)return ie(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return pe(this.node.rawAttrs,e,t);if(null!=n.list.s)return he(this.node.rawAttrs,e,t);if(null!=n.list.shape)return de(this.node.rawAttrs,e,t);if(null!=n.list.b)return fe(this.node.rawAttrs,e,t);if(null!=n.list.type)return ue(this.node.rawAttrs,e,t)}return t}}var ge=n(9700),ye=n(1355),xe=n(4929),be=n(8136),ve=n(6808),we=n(6154);const ke=(0,we.op)({addN_:function(e){ve.hu(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),ve.hu(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,be._1)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!ve.cO(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return ye.BV.runKernel(xe.Xz,r)}});var Se=n(4722);const Te=(0,we.op)({mod_:function(e,t){let n=(0,be._1)(e,"a","mod"),r=(0,be._1)(t,"b","mod");[n,r]=(0,Se.T_)(n,r);const a={a:n,b:r};return ye.BV.runKernel(xe.Vb,a)}});var Ie=n(7536),Ne=n(9106),Ce=n(769);const $e=(0,we.op)({equal_:function(e,t){let n=(0,be._1)(e,"a","equal","string_or_numeric"),r=(0,be._1)(t,"b","equal","string_or_numeric");[n,r]=(0,Se.T_)(n,r),(0,Ce.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return ye.BV.runKernel(xe.hd,a)}});var Ee=n(5879),_e=n(9430);const Re=(0,we.op)({divNoNan_:function(e,t){let n=(0,be._1)(e,"a","div"),r=(0,be._1)(t,"b","div");[n,r]=(0,Se.T_)(n,r);const a=(0,Ne.h)(n,r),s=(0,_e.P)(a),o=$e(r,s);return(0,Ee.a)(o,s,a)}});var Ae=n(2798),Oe=n(9723),De=n(6885),Fe=n(5701);const Me=(0,we.op)({maximum_:function(e,t){let n=(0,be._1)(e,"a","maximum"),r=(0,be._1)(t,"b","maximum");[n,r]=(0,Se.T_)(n,r),"bool"===n.dtype&&(n=(0,Fe.p)(n,"int32"),r=(0,Fe.p)(r,"int32")),(0,Ce.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return ye.BV.runKernel(xe.BM,a)}});var Be=n(1109),Pe=n(8847),Le=n(4842);const Ve=(0,we.op)({acos_:function(e){const t={x:(0,be._1)(e,"x","acos")};return ye.BV.runKernel(xe.VG,t)}}),Ue=(0,we.op)({acosh_:function(e){const t={x:(0,be._1)(e,"x","acosh")};return ye.BV.runKernel(xe.Sp,t)}}),We=(0,we.op)({asin_:function(e){const t={x:(0,be._1)(e,"x","asin")};return ye.BV.runKernel(xe.M2,t)}}),ze=(0,we.op)({asinh_:function(e){const t={x:(0,be._1)(e,"x","asinh")};return ye.BV.runKernel(xe.qw,t)}}),Ge=(0,we.op)({atan_:function(e){const t={x:(0,be._1)(e,"x","atan")};return ye.BV.runKernel(xe.jM,t)}}),He=(0,we.op)({atan2_:function(e,t){let n=(0,be._1)(e,"a","atan2"),r=(0,be._1)(t,"b","atan2");[n,r]=(0,Se.T_)(n,r);const a={a:n,b:r};return ye.BV.runKernel(xe.QC,a)}}),je=(0,we.op)({atanh_:function(e){const t={x:(0,be._1)(e,"x","atanh")};return ye.BV.runKernel(xe.Oy,t)}}),Xe=(0,we.op)({ceil_:function(e){const t={x:(0,be._1)(e,"x","ceil","float32")};return ye.BV.runKernel(xe.gJ,t)}});var Ke=n(1919);const qe=(0,we.op)({cos_:function(e){const t={x:(0,be._1)(e,"x","cos","float32")};return ye.BV.runKernel(xe.mc,t)}}),Ye=(0,we.op)({cosh_:function(e){const t={x:(0,be._1)(e,"x","cosh","float32")};return ye.BV.runKernel(xe.TR,t)}});var Qe=n(7905);const Ze=(0,we.op)({erf_:function(e){let t=(0,be._1)(e,"x","erf");ve.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,Fe.p)(t,"float32"));const n={x:t};return ye.BV.runKernel(xe.Om,n)}});var Je=n(2125);const et=(0,we.op)({expm1_:function(e){const t={x:(0,be._1)(e,"x","expm1")};return ye.BV.runKernel(xe.Y0,t)}}),tt=(0,we.op)({floor_:function(e){const t={x:(0,be._1)(e,"x","floor","float32")};return ye.BV.runKernel(xe.OR,t)}});var nt=n(1943),rt=n(5956),at=n(9324),st=n(5354);const ot=(0,we.op)({reciprocal_:function(e){const t={x:(0,be._1)(e,"x","reciprocal")};return ye.BV.runKernel(xe.$H,t)}});var it=n(4955),ut=n(9076),lt=n(7497);const ct=(0,we.op)({selu_:function(e){const t={x:(0,be._1)(e,"x","selu")};return ye.BV.runKernel(xe.oF,t)}});var pt=n(1403);const ht=(0,we.op)({sin_:function(e){const t={x:(0,be._1)(e,"x","sin","float32")};return ye.BV.runKernel(xe.RQ,t)}}),dt=(0,we.op)({sign_:function(e){const t={x:(0,be._1)(e,"x","sign")};return ye.BV.runKernel(xe.i5,t)}}),ft=(0,we.op)({sinh_:function(e){const t={x:(0,be._1)(e,"x","sinh")};return ye.BV.runKernel(xe.w3,t)}}),mt=(0,we.op)({softplus_:function(e){const t={x:(0,be._1)(e,"x","softplus")};return ye.BV.runKernel(xe.MR,t)}});var gt=n(569),yt=n(9099);const xt=(0,we.op)({tanh_:function(e){const t={x:(0,be._1)(e,"x","tanh","float32")};return ye.BV.runKernel(xe.MI,t)}}),bt=(0,we.op)({tan_:function(e){const t={x:(0,be._1)(e,"x","tan","float32")};return ye.BV.runKernel(xe.sE,t)}});var vt=n(9545),wt=n(3519);const kt=(0,we.op)({rsqrt_:function(e){const t={x:(0,be._1)(e,"x","rsqrt","float32")};return ye.BV.runKernel(xe.bV,t)}}),St=(0,we.op)({prod_:function(e,t=null,n=!1){let r=(0,be._1)(e,"x","prod");"bool"===r.dtype&&(r=(0,Fe.p)(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return ye.BV.runKernel(xe.Dl,a,s)}});var Tt=n(9418),It=n(5278);const Nt=(0,we.op)({isNaN_:function(e){const t={x:(0,be._1)(e,"x","isNaN")};return ye.BV.runKernel(xe.r7,t)}});function Ct(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){I.D5U.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];I.D5U.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function $t(e){return"number"!=typeof e&&!e.some((e=>e<0))}function Et(e,t,n){let r=_t(e,n);const a=!$t(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=_t(e.shape,r)})),!$t(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function _t(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class Rt{constructor(e,t,n,r,a,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=(0,I.iD$)(0),(0,I.CnY)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Ct(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,I.CnY)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,I.XeE)([],[0].concat(this.elementShape));const n=this.readMany(e);return Ct(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,I.knu)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,I.XeE)([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return Ct(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,I.zoF)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,I.HHK)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];(0,I.lub)((()=>{t=(0,I.XLQ)(t,[1,n,a]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:r[n-1],0],i=[1,e[n],a];s[n]=(0,I.XLQ)((0,I.tPi)(t,o,i),this.elementShape)}return s}));const o=[];for(let t=0;t<e.length;t++)o[t]=t;this.writeMany(o,s)}}class At{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);Ct(t,e.shape,"TensorList shape mismatch: "),(0,I.CnY)(e)})),this.idTensor=(0,I.iD$)(0),this.maxNumElements=r,(0,I.CnY)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new At([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Ct(e,this.elementShape,"TensorList shape mismatch: ");const r=Et(this.elementShape,this.tensors,e);return(0,I.lub)((()=>{const e=this.tensors.map((e=>(0,I.XLQ)(e,r)));return(0,I.knu)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Et(this.elementShape,this.tensors,e),r=this.tensors.pop();return Ct(r.shape,e,"TensorList shape mismatch: "),(0,I.XLQ)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Ct(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,I.CnY)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);Ct(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=Et(this.elementShape,this.tensors,t);return(0,I.XLQ)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Ct(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,I.CnY)(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Ct(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Et(this.elementShape,this.tensors,n);return 0===e.length?(0,I.XeE)([],[0].concat(r)):(0,I.lub)((()=>{const t=e.map((e=>(0,I.XLQ)(this.tensors[e],r)));return(0,I.knu)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Ct(this.elementShape,t,"TensorList shape mismatch: ");const n=Et(this.elementShape,this.tensors,t);return 0===this.size()?(0,I.XeE)([],[0].concat(n)):(0,I.lub)((()=>{const e=this.tensors.map((e=>(0,I.XLQ)(e,n)));return(0,I.zoF)(e,0)}))}}var Ot=n(2025),Dt=n(4175);const Ft=(0,we.op)({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],o){const i=(0,be._1)(e,"x","conv2d","float32"),u=(0,be._1)(t,"filter","conv2d","float32");let l=i,c=!1;3===i.rank&&(c=!0,l=(0,Dt.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]])),ve.hu(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),ve.hu(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),Ot.m("conv2d",r,o);const p="NHWC"===a?l.shape[3]:l.shape[1];ve.hu(p===u.shape[2],(()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${u.shape[2]}.`)),ve.hu(Ot.jT(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const h={x:l,filter:u},d={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o},f=ye.BV.runKernel(xe.mh,h,d);return c?(0,Dt.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Mt=(0,we.op)({conv1d_:function(e,t,n,r,a="NWC",s=1,o){const i=(0,be._1)(e,"x","conv1d"),u=(0,be._1)(t,"filter","conv1d");let l=i,c=!1;2===i.rank&&(c=!0,l=(0,Dt.X)(i,[1,i.shape[0],i.shape[1]])),ve.hu(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),ve.hu(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),Ot.m("conv1d",r,o),ve.hu(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),ve.hu(Ot.jT(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),ve.hu("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const p=(0,Dt.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]]),h=(0,Dt.X)(l,[l.shape[0],1,l.shape[1],l.shape[2]]),d=Ft(h,p,[1,n],r,"NHWC",[1,s],o);return c?(0,Dt.X)(d,[d.shape[2],d.shape[3]]):(0,Dt.X)(d,[d.shape[0],d.shape[2],d.shape[3]])}});var Bt=n(6450);const Pt=(0,we.op)({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",o){let i=e;3===e.rank&&(i=(0,Dt.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=(0,Dt.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),ve.hu(4===i.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`)),ve.hu(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),ve.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===s?i.shape[3]:i.shape[1],c="NHWC"===s?u.shape[3]:u.shape[1];ve.hu(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),ve.hu(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Ot.m("conv2dDerFilter",a,o);const p={x:i,dy:u},h={strides:r,pad:a,dataFormat:s,dimRoundingMode:o,filterShape:n};return ye.BV.runKernel(xe.wU,p,h)}}),Lt=(0,we.op)({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",o){ve.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,u=t,l=!1;3===t.rank&&(l=!0,u=(0,Dt.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),ve.hu(4===i.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`)),ve.hu(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),ve.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===s?i[3]:i[1],p="NHWC"===s?u.shape[3]:u.shape[1];ve.hu(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),ve.hu(p===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`)),Ot.m("conv2dDerInput",a,o);const h={dy:u,filter:n},d={strides:r,pad:a,dataFormat:s,dimRoundingMode:o,inputShape:i},f=ye.BV.runKernel(xe.wm,h,d);return l?(0,Dt.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var Vt=n(6072);const Ut=(0,we.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===(0,Vt.uy)(ye.BV.state.gradientDepth,u)){let p=Ft(e,t,n,r,a,s,o);return null!=i&&(p=(0,ge.I)(p,i)),(0,Vt.QH)(p,u,l,c)}const p=(0,be._1)(e,"x","conv2d","float32"),h=(0,be._1)(t,"filter","conv2d","float32");let d=p,f=!1;3===p.rank&&(f=!0,d=(0,Dt.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),ve.hu(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),ve.hu(4===h.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`)),Ot.m("fused conv2d",r,o),ve.hu(d.shape[3]===h.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${h.shape[2]}.`)),ve.hu(Ot.jT(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),ve.hu("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const m=Ot.Ix(d.shape,h.shape,n,s,r,o);let g,y;null!=i&&(g=(0,be._1)(i,"bias","fused conv2d"),[g]=(0,Se.T_)(g,p),Ce.assertAndGetBroadcastShape(m.outShape,g.shape)),null!=l&&(y=(0,be._1)(l,"prelu weights","fused conv2d"));const x=(e,t)=>{const[a,o,i,l]=t,c=(0,Vt.Fr)(e,i,u);ve.hu(Ot.I0(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const p=[Lt(o.shape,c,a,n,r),Pt(o,c,a.shape,n,r)];if(null!=l){const e=(0,Vt.pf)(l,c);p.push(e)}return p},b={x:d,filter:h,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u,leakyreluAlpha:c};if(null==i){const e=(0,Bt.cb)(((e,t,n)=>{let r=ye.BV.runKernel(xe._V,b,v);return n([t,e,r]),f&&(r=(0,Dt.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(d,h)}{const e=(0,Bt.cb)(((e,t,n,r)=>{let a=ye.BV.runKernel(xe._V,b,v);return r([t,e,a,n]),f&&(a=(0,Dt.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return e(d,h,g)}}}),Wt=(0,we.op)({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],o){const i=(0,be._1)(e,"x","depthwiseConv2d","float32"),u=(0,be._1)(t,"filter","depthwiseConv2d","float32");let l=i,c=!1;3===i.rank&&(c=!0,l=(0,Dt.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]])),ve.hu(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),ve.hu(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`)),ve.hu(l.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Ot.m("depthwiseConv2d",r,o);const p={x:l,filter:u},h={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o},d=ye.BV.runKernel(xe.ci,p,h);return c?(0,Dt.X)(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),zt=(0,we.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],o){let i=e;3===e.rank&&(i=(0,Dt.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=(0,Dt.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:i,dy:u},c={strides:r,pad:a,dimRoundingMode:o,dilations:s,filterShape:n};return ye.BV.runKernel(xe.sL,l,c)}}),Gt=(0,we.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],o){let i=t,u=!1;3===t.rank&&(u=!0,i=(0,Dt.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:i,filter:n},c={strides:r,pad:a,dimRoundingMode:o,dilations:s,inputShape:e},p=ye.BV.runKernel(xe.y7,l,c);return u?(0,Dt.X)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Ht=(0,we.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===(0,Vt.uy)(ye.BV.state.gradientDepth,u)){let p=Wt(e,t,n,r,a,s,o);return null!=i&&(p=(0,ge.I)(p,i)),(0,Vt.QH)(p,u,l,c)}const p=(0,be._1)(e,"x","depthwiseConv2d","float32"),h=(0,be._1)(t,"filter","depthwiseConv2d","float32");let d=p,f=!1;3===p.rank&&(f=!0,d=(0,Dt.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),ve.hu(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),ve.hu(4===h.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`)),ve.hu(d.shape[3]===h.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`)),null==s&&(s=[1,1]),ve.hu(Ot.jT(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Ot.m("fused depthwiseConv2d",r,o);const m=Ot.Ix(d.shape,h.shape,n,s,r,o,!0);let g,y;null!=i&&(g=(0,be._1)(i,"bias","fused conv2d"),[g]=(0,Se.T_)(g,p),Ce.assertAndGetBroadcastShape(m.outShape,g.shape)),null!=l&&(y=(0,be._1)(l,"prelu weights","fused depthwiseConv2d"));const x=(e,t)=>{ve.hu(Ot.I0(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[a,i,l,c]=t,p=(0,Vt.Fr)(e,l,u),h=Gt(i.shape,p,a,n,r,s,o),d=zt(i,p,a.shape,n,r,s,o);return null!=c?[h,d,(0,Vt.pf)(g,p)]:[h,d]},b={x:d,filter:h,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u,leakyreluAlpha:c};if(null==i){const e=(0,Bt.cb)(((e,t,n)=>{let r=ye.BV.runKernel(xe.lu,b,v);return n([t,e,r]),f&&(r=(0,Dt.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(d,h)}{const e=(0,Bt.cb)(((e,t,n,r)=>{let a=ye.BV.runKernel(xe.lu,b,v);return r([t,e,a,n]),f&&(a=(0,Dt.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return e(d,h,g)}}});var jt=n(3338);const Xt=(0,we.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:o,leakyreluAlpha:i}){if(!1===(0,Vt.uy)(ye.BV.state.gradientDepth,s)){let u=(0,jt.O)(e,t,n,r);return null!=a&&(u=(0,ge.I)(u,a)),(0,Vt.QH)(u,s,o,i)}let u=(0,be._1)(e,"a","fused matMul"),l=(0,be._1)(t,"b","fused matMul");[u,l]=(0,Se.T_)(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],p=r?l.shape[l.rank-1]:l.shape[l.rank-2],h=n?u.shape[u.rank-1]:u.shape[u.rank-2],d=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=ve.NA(f),y=ve.NA(m);ve.hu(c===p,(()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const x=Ce.assertAndGetBroadcastShape(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([h,d]),b=n?(0,Dt.X)(u,[g,c,h]):(0,Dt.X)(u,[g,h,c]),v=r?(0,Dt.X)(l,[y,d,p]):(0,Dt.X)(l,[y,p,d]);let w,k;null!=a&&(w=(0,be._1)(a,"bias","fused matMul"),[w]=(0,Se.T_)(w,u),Ce.assertAndGetBroadcastShape(x,w.shape)),null!=o&&(k=(0,be._1)(o,"prelu weights","fused matMul"));const S=(e,t)=>{const[o,i,u,l]=t,c=(0,Vt.Fr)((0,Dt.X)(e,u.shape),u,s);let p,h;return n||r?!n&&r?(p=(0,jt.O)(c,i,!1,!1),h=(0,jt.O)(c,o,!0,!1)):n&&!r?(p=(0,jt.O)(i,c,!1,!0),h=(0,jt.O)(o,c,!1,!1)):(p=(0,jt.O)(i,c,!0,!0),h=(0,jt.O)(c,o,!0,!0)):(p=(0,jt.O)(c,i,!1,!0),h=(0,jt.O)(o,c,!0,!1)),null!=a?[p,h,(0,Vt.pf)(l,c)]:[p,h]},T={a:b,b:v,bias:w,preluActivationWeights:k},I={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:i};if(null==a){const e=(0,Bt.cb)(((e,t,n)=>{const r=ye.BV.runKernel(xe.us,T,I);return n([e,t,r]),{value:(0,Dt.X)(r,x),gradFunc:S}}));return e(b,v)}{const e=(0,Bt.cb)(((e,t,n,r)=>{const a=ye.BV.runKernel(xe.us,T,I);return r([e,t,a,n]),{value:(0,Dt.X)(a,x),gradFunc:S}}));return e(b,v,w)}}}),Kt=(0,we.op)({conv2dTranspose_:function(e,t,n,r,a,s){const o=(0,be._1)(e,"x","conv2dTranspose"),i=(0,be._1)(t,"filter","conv2dTranspose");return Lt(n,o,i,r,a,"NHWC",s)}}),qt=(0,we.op)({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const o=(0,be._1)(e,"x","conv3d"),i=(0,be._1)(t,"filter","conv3d");let u=o,l=!1;4===o.rank&&(l=!0,u=(0,Dt.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ve.hu(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),ve.hu(5===i.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`)),ve.hu(u.shape[4]===i.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`)),ve.hu((0,Ot.jT)(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),ve.hu("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));const c={x:u,filter:i},p={strides:n,pad:r,dataFormat:a,dilations:s},h=ye.BV.runKernel(xe.x1,c,p);return l?(0,Dt.X)(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Yt=(0,we.op)({avgPool_:function(e,t,n,r,a){const s=(0,be._1)(e,"x","avgPool","float32");ve.hu(Ot.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let o=s,i=!1;3===s.rank&&(i=!0,o=(0,Dt.X)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),ve.hu(4===o.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`)),Ot.m("avgPool",r,a);const u={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let c=ye.BV.runKernel(xe.Jh,u,l);return c=(0,Fe.p)(c,s.dtype),i?(0,Dt.X)(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Qt=(0,we.op)({maxPool_:function(e,t,n,r,a){const s=(0,be._1)(e,"x","maxPool");let o=s,i=!1;3===s.rank&&(i=!0,o=(0,Dt.X)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),ve.hu(4===o.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`)),ve.hu(Ot.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Ot.m("maxPool",r,a);const u={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},c=ye.BV.runKernel(xe.mT,u,l);return i?(0,Dt.X)(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Zt=(0,we.op)({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const s={x:(0,be._1)(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},i=ye.BV.runKernel(xe.vF,s,o);return{result:i[0],indexes:i[1]}}}),Jt=(0,we.op)({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){const o=(0,be._1)(e,"x","avgPool3d","float32");let i=o,u=!1;4===o.rank&&(u=!0,i=(0,Dt.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ve.hu(5===i.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`)),ve.hu("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),(0,Ot.m)("avgPool3d",r,a);const l={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let p=ye.BV.runKernel(xe._k,l,c);return p=(0,Fe.p)(p,i.dtype),u?(0,Dt.X)(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),en=(0,we.op)({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){const o=(0,be._1)(e,"x","maxPool3d");let i=o,u=!1;4===o.rank&&(u=!0,i=(0,Dt.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),ve.hu(5===i.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`)),ve.hu("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),(0,Ot.m)("maxPool3d",r,a);const l={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},p=ye.BV.runKernel(xe.OA,l,c);return u?(0,Dt.X)(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),tn=(0,we.op)({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const o=(0,be._1)(e,"x","dilation2d"),i=(0,be._1)(t,"filter","dilation2d");ve.hu(3===o.rank||4===o.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`)),ve.hu(3===i.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`)),ve.hu("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let u=o,l=!1;3===o.rank&&(u=(0,Dt.X)(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0);const c={x:u,filter:i},p={strides:n,pad:r,dilations:a},h=ye.BV.runKernel(xe.p4,c,p);return l?(0,Dt.X)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});function nn(e,t,n){const[r,a]=$("fusedOps",e,t,n),s="biasadd"===r,o=!s,i="prelu"===a,u="fusedbatchnorm"===r,l=$("numArgs",e,t,n);if(s){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=$("strides",e,t,n),p=O(e,t,n),h=$("dataFormat",e,t,n).toUpperCase(),d=$("dilations",e,t,n);let[f,m]=$("args",e,t,n);return o&&(m=f,f=void 0),{stride:c,pad:p,dataFormat:h,dilations:d,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:$("leakyreluAlpha",e,t,n)}}var rn=n(5468);function an(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return ye.BV.runKernel(xe.e7,{},r)}const sn=(0,we.op)({multinomial_:function(e,t,n,r=!1){const a=(0,be._1)(e,"logits","multinomial"),s=a.size,o=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);n=n||Math.random();const i={logits:1===o?(0,Dt.X)(a,[1,-1]):a},u={numSamples:t,seed:n,normalized:r},l=ye.BV.runKernel(xe.NZ,i,u);return 1===o?(0,Dt.X)(l,[l.size]):l}}),on=(0,we.op)({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:(0,be._1)(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return ye.BV.runKernel(xe.we,a,s)}});var un=n(2497);const ln=(0,we.op)({onesLike_:function(e){const t={x:(0,be._1)(e,"x","onesLike")};return ye.BV.runKernel(xe.qW,t)}});var cn=n(2472),pn=n(597);class hn{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=pn.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*a*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class dn{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=pn.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const fn=(0,we.op)({randomUniform_:function(e,t=0,n=1,r="float32",a){const s=(0,cn.f)(e,r),o=new dn(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=o.nextValue();return s.toTensor()}});var mn=n(6946);const gn=(0,we.op)({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new hn(t,n,r,!0,a),o=(0,cn.f)(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}});var yn=n(9306),xn=n(2306),bn=n(9830);const vn=async function(e){const t=(0,be._1)(e,"condition","whereAsync","bool"),n=await t.data(),r=(0,bn.Z)(t.shape,n);return e!==t&&t.dispose(),r};var wn=n(8990);function kn(e,t,n){return{boxes:$("boxes",e,t,n),scores:$("scores",e,t,n),maxOutputSize:$("maxOutputSize",e,t,n),iouThreshold:$("iouThreshold",e,t,n),scoreThreshold:$("scoreThreshold",e,t,n),softNmsSigma:$("softNmsSigma",e,t,n)}}const Sn=(0,we.op)({topk_:function(e,t=1,n=!0){const r=(0,be._1)(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const s={x:r},o={k:t,sorted:n},[i,u]=ye.BV.runKernel(xe.cW,s,o);return{values:i,indices:u}}}),Tn=(0,we.op)({unique_:function(e,t=0){const n=(0,be._1)(e,"x","unique","string_or_numeric");(0,ve.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[s,o]=ye.BV.runKernel(xe.kp,r,a);return{values:s,indices:o}}});var In=n(3501),Nn=n(5580);class Cn{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,I.iD$)(0),this.tensorMap=new Map,(0,I.CnY)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Nn.i(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,I.lub)((()=>{const e=(0,I.HHK)(t),r=n.length,a=e.length;I.D5U.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];(0,I.CnY)(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,I.lub)((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return(0,I.knu)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}var $n=n(9320),En=n(4900),_n=n(1813);const Rn=(0,we.op)({less_:function(e,t){let n=(0,be._1)(e,"a","less","string_or_numeric"),r=(0,be._1)(t,"b","less","string_or_numeric");[n,r]=(0,Se.T_)(n,r),(0,Ce.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return ye.BV.runKernel(xe.vt,a)}});var An=n(8257),On=n(1548);const Dn=(0,we.op)({logicalNot_:function(e){const t={x:(0,be._1)(e,"x","logicalNot","bool")};return ye.BV.runKernel(xe.Vf,t)}}),Fn=(0,we.op)({logicalOr_:function(e,t){const n=(0,be._1)(e,"a","logicalOr","bool"),r=(0,be._1)(t,"b","logicalOr","bool");(0,Ce.assertAndGetBroadcastShape)(n.shape,r.shape);const a={a:n,b:r};return ye.BV.runKernel(xe.MZ,a)}}),Mn=(0,we.op)({einsum_:function(e,...t){const n=t.map(((e,t)=>(0,be._1)(e,`tensors${t}`,"einsum"))),r={equation:e};return ye.BV.runKernel(xe.$g,n,r)}});var Bn=n(8299);const Pn=(0,we.op)({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);const o=(0,be._1)(e,"x","batchNorm"),i=(0,be._1)(t,"mean","batchNorm"),u=(0,be._1)(n,"variance","batchNorm");let l,c;null!=a&&(l=(0,be._1)(a,"scale","batchNorm")),null!=r&&(c=(0,be._1)(r,"offset","batchNorm")),ve.hu(i.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),ve.hu(null==c||i.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),ve.hu(null==l||i.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const p=function(e){let t;return t=0===e.rank||1===e.rank?(0,Dt.X)(e,[1,1,1,e.size]):2===e.rank?(0,Dt.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,Dt.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(o),h={x:p,scale:l,offset:c,mean:i,variance:u},d={varianceEpsilon:s},f=ye.BV.runKernel(xe.sH,h,d);return(0,Dt.X)(f,o.shape)}}),Ln=(0,we.op)({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=(0,be._1)(e,"x","localResponseNormalization");ve.hu(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),ve.hu(ve.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let o=s,i=!1;3===s.rank&&(i=!0,o=(0,Dt.X)(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:o},l={depthRadius:t,bias:n,alpha:r,beta:a},c=ye.BV.runKernel(xe.eZ,u,l);return i?(0,Dt.X)(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Vn=(0,we.op)({softmax_:function(e,t=-1){const n=(0,be._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return ye.BV.runKernel(xe.Gc,r,a)}});var Un=n(2550),Wn=n(5810);const zn=(0,we.op)({logSoftmax_:function(e,t=-1){const n=(0,be._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=(0,Bt.cb)(((e,n)=>{const r=(0,Un.F)(e,t,!0),a=(0,Oe.l)(e,r),s=(0,Oe.l)((0,Fe.p)(a,"float32"),(0,nt.c)((0,Wn.S)((0,Je.Q)(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{const[r]=n,a=(0,Je.Q)(r);return(0,Oe.l)(e,(0,Ie.d)((0,Wn.S)(e,t,!0),a))}}}));return r(n)}}),Gn=(0,we.op)({sparseToDense_:function(e,t,n,r=0){const a=(0,be._1)(e,"sparseIndices","sparseToDense","int32"),s=(0,be._1)(t,"sparseValues","sparseToDense"),o=(0,be._1)(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,o);const i={sparseIndices:a,sparseValues:s,defaultValue:o},u={outputShape:n};return ye.BV.runKernel(xe.D2,i,u)}});var Hn=n(1501),jn=n(9292);const Xn=(0,we.op)({all_:function(e,t=null,n=!1){const r={x:(0,be._1)(e,"x","all","bool")},a={axis:t,keepDims:n};return ye.BV.runKernel(xe.oT,r,a)}}),Kn=(0,we.op)({any_:function(e,t=null,n=!1){const r={x:(0,be._1)(e,"x","any","bool")},a={axis:t,keepDims:n};return ye.BV.runKernel(xe.IK,r,a)}});var qn=n(5230);const Yn=(0,we.op)({argMin_:function(e,t=0){const n={x:(0,be._1)(e,"x","argMin")},r={axis:t};return ye.BV.runKernel(xe.aJ,n,r)}}),Qn=(0,we.op)({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:(0,be._1)(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return ye.BV.runKernel(xe.iH,a,s)}});var Zn=n(4716);const Jn=(0,we.op)({denseBincount_:function(e,t,n,r=!1){const a=(0,be._1)(e,"x","denseBincount"),s=(0,be._1)(t,"weights","denseBincount");ve.hu("int32"===a.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`)),ve.hu(a.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`)),ve.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),ve.hu(s.size===a.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`));const o={x:a,weights:s},i={size:n,binaryOutput:r};return ye.BV.runKernel(xe.QR,o,i)}});var er=n(2685);const tr=(0,we.op)({gather_:function(e,t,n=0,r=0){const a={x:(0,be._1)(e,"x","gather"),indices:(0,be._1)(t,"indices","gather","int32")},s={axis:n,batchDims:r};return ye.BV.runKernel(xe.qi,a,s)}});var nr=n(508),rr=n(9398);const ar=(0,we.op)({stridedSlice_:function(e,t,n,r,a=0,s=0,o=0,i=0,u=0){const l={x:(0,be._1)(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};return ye.BV.runKernel(xe.m2,l,c)}});var sr=n(7058),or=n(1110),ir=n(2153),ur=n(4777),lr=n(5717),cr=n(9792);const pr=(0,we.op)({scatterND_:function(e,t,n){const r=(0,be._1)(e,"indices","scatterND","int32"),a=(0,be._1)(t,"updates","scatterND");cr.b0(a,r,n);const s={indices:r,updates:a},o={shape:n};return ye.BV.runKernel(xe.xQ,s,o)}}),hr=(0,we.op)({gatherND_:function(e,t){const n=(0,be._1)(t,"indices","gatherND","int32"),r={params:(0,be._1)(e,"x","gatherND","string_or_numeric"),indices:n};return ye.BV.runKernel(xe.q1,r)}});var dr=n(5175),fr=n(2325),mr=n(981),gr=n(8098),yr=n(7644);const xr=(0,we.op)({mirrorPad_:function(e,t,n){ve.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=(0,be._1)(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");ve.hu(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)ve.hu(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),ve.hu(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const s={paddings:t,mode:n},o={x:r};return ye.BV.runKernel(xe.jQ,o,s)}});var br=n(8814);const vr=(0,we.op)({spaceToBatchND_:function(e,t,n){const r=(0,be._1)(e,"x","spaceToBatchND");ve.hu(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),ve.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),ve.hu(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},s={blockShape:t,paddings:n};return ye.BV.runKernel(xe.TQ,a,s)}}),wr=(0,we.op)({batchToSpaceND_:function(e,t,n){const r=(0,be._1)(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));ve.hu(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),ve.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),ve.hu(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const s={x:r},o={blockShape:t,crops:n};return ye.BV.runKernel(xe.zw,s,o)}}),kr=(0,we.op)({depthToSpace_:function(e,t,n="NHWC"){const r=(0,be._1)(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];ve.hu(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),ve.hu(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),ve.hu(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),ve.hu(o%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`));const i={x:r},u={blockSize:t,dataFormat:n};return ye.BV.runKernel(xe.T0,i,u)}});var Sr=n(8403);const Tr=(0,we.op)({broadcastArgs_:function(e,t){const n=(0,be._1)(e,"s0","broadcastArgs","int32"),r=(0,be._1)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const a={s0:n,s1:r};return ye.BV.runKernel(xe.eE,a)}});function Ir(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return I.lub((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ge.I($("a",e,t,n),$("b",e,t,n))];case"AddN":return[ke($("tensors",e,t,n))];case"FloorMod":case"Mod":return[Te($("a",e,t,n),$("b",e,t,n))];case"Mul":return[Ie.d($("a",e,t,n),$("b",e,t,n))];case"RealDiv":case"Div":return[Ne.h($("a",e,t,n),$("b",e,t,n))];case"DivNoNan":return[Re($("a",e,t,n),$("b",e,t,n))];case"FloorDiv":return[Ae.q($("a",e,t,n),$("b",e,t,n))];case"Sub":return[Oe.l($("a",e,t,n),$("b",e,t,n))];case"Minimum":return[De.L($("a",e,t,n),$("b",e,t,n))];case"Maximum":return[Me($("a",e,t,n),$("b",e,t,n))];case"Pow":return[Be.s($("a",e,t,n),$("b",e,t,n))];case"SquaredDifference":return[Pe.$($("a",e,t,n),$("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return I.lub((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Le.W($("x",e,t,n))];case"Acos":return[Ve($("x",e,t,n))];case"Acosh":return[Ue($("x",e,t,n))];case"Asin":return[We($("x",e,t,n))];case"Asinh":return[ze($("x",e,t,n))];case"Atan":return[Ge($("x",e,t,n))];case"Atan2":return[He($("x",e,t,n),$("y",e,t,n))];case"Atanh":return[je($("x",e,t,n))];case"Ceil":return[Xe($("x",e,t,n))];case"Complex":return[Ke.P($("real",e,t,n),$("imag",e,t,n))];case"Cos":return[qe($("x",e,t,n))];case"Cosh":return[Ye($("x",e,t,n))];case"Elu":return[Qe.p($("x",e,t,n))];case"Erf":return[Ze($("x",e,t,n))];case"Exp":return[Je.Q($("x",e,t,n))];case"Expm1":return[et($("x",e,t,n))];case"Floor":return[tt($("x",e,t,n))];case"Log":return[nt.c($("x",e,t,n))];case"Log1p":return[rt.K($("x",e,t,n))];case"Imag":return[at.a($("x",e,t,n))];case"Neg":return[st.W($("x",e,t,n))];case"Reciprocal":return[ot($("x",e,t,n))];case"Real":return[it.k($("x",e,t,n))];case"Relu":return[ut.U($("x",e,t,n))];case"Round":return[lt.N($("x",e,t,n))];case"Selu":return[ct($("x",e,t,n))];case"Sigmoid":return[pt.X($("x",e,t,n))];case"Sin":return[ht($("x",e,t,n))];case"Sign":return[dt($("x",e,t,n))];case"Sinh":return[ft($("x",e,t,n))];case"Softplus":return[mt($("x",e,t,n))];case"Sqrt":return[gt._($("x",e,t,n))];case"Square":return[yt.h($("x",e,t,n))];case"Tanh":return[xt($("x",e,t,n))];case"Tan":return[bt($("x",e,t,n))];case"ClipByValue":return[vt.i($("x",e,t,n),$("clipValueMin",e,t,n),$("clipValueMax",e,t,n))];case"Relu6":return[wt.b($("x",e,t,n))];case"Rsqrt":return[kt(E(e.inputNames[0],t,n))];case"Prod":return[St($("x",e,t,n),$("axes",e,t,n))];case"LeakyRelu":return[Tt.h($("x",e,t,n),$("alpha",e,t,n))];case"Prelu":return[It.A($("x",e,t,n),$("alpha",e,t,n))];case"IsNan":return[Nt(E(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=$("thenBranch",e,t,n),a=$("elseBranch",e,t,n),s=$("cond",e,t,n),o=$("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=$("body",e,t,n),a=$("cond",e,t,n),s=$("args",e,t,n),o=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map((e=>e.id));let u=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[D($("pred",e,t,n))];case"Switch":{const r=$("pred",e,t,n);let a=$("data",e,t,n);return a.kept||(a=D(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==E(e,t,n)));return r?[D(E(r,t,n))]:void 0}case"Enter":{const r=$("frameName",e,t,n),a=$("tensor",e,t,n);return n.enterFrame(r),[D(a)]}case"Exit":{const r=$("tensor",e,t,n);return n.exitFrame(),[D(r)]}case"NextIteration":{const r=$("tensor",e,t,n);return n.nextIteration(),[D(r)]}case"TensorArrayV3":{const r=$("size",e,t,n),a=$("dtype",e,t,n),s=$("elementShape",e,t,n),o=$("dynamicSize",e,t,n),i=$("clearAfterRead",e,t,n),u=$("identicalElementShapes",e,t,n),l=$("name",e,t,n),c=new Rt(l,a,r,s,u,o,i);return n.addTensorArray(c),[c.idTensor,(0,I.iD$)(1)]}case"TensorArrayWriteV3":{const r=$("tensorArrayId",e,t,n),a=$("index",e,t,n),s=$("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(a,s),[o.idTensor]}case"TensorArrayReadV3":{const r=$("tensorArrayId",e,t,n),a=$("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=$("tensorArrayId",e,t,n),a=$("indices",e,t,n),s=$("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=$("tensorArrayId",e,t,n),a=$("indices",e,t,n),s=$("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(a,s),[o.idTensor]}case"TensorArrayConcatV3":{const r=$("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=$("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=$("tensorArrayId",e,t,n),a=$("tensor",e,t,n),s=$("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(s,a),[o.idTensor]}case"TensorArraySizeV3":{const r=$("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[(0,I.iD$)(a.size(),"int32")]}case"TensorArrayCloseV3":{const r=$("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=$("tensorListId",e,t,n),a=$("index",e,t,n),s=$("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(a,s),[o.idTensor]}case"TensorListGetItem":{const r=$("tensorListId",e,t,n),a=$("index",e,t,n),s=$("elementShape",e,t,n),o=$("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=$("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new At([],n,e.dtype,r),o=(0,I.HHK)(e,0);return t.forEach(((e,t)=>{s.setItem(e,o[t])})),s}($("tensor",e,t,n),r,$("elementShape",e,t,n),$("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=$("elementShape",e,t,n),a=$("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=function(e,t,n){return new At([],e,t,n)}(r,a,$(s,e,t,n));return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=$("tensorListId",e,t,n),a=$("indices",e,t,n),s=$("elementShape",e,t,n),o=$("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,o,s)]}case"TensorListStack":{const r=$("tensorListId",e,t,n),a=$("elementShape",e,t,n),s=$("elementDType",e,t,n),o=$("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,o)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Ct(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=(0,I.HHK)(e);return new At(a,t,r)}($("tensor",e,t,n),$("elementShape",e,t,n),$("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=$("tensorListId",e,t,n),a=n.getTensorList(r.id),s=$("dtype",e,t,n),o=$("elementShape",e,t,n);return[a.concat(s,o)]}case"TensorListPushBack":{const r=$("tensorListId",e,t,n),a=$("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=$("tensorListId",e,t,n),a=$("elementShape",e,t,n),s=$("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=$("tensor",e,t,n),a=$("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=_t(e.shape.slice(1),n),o=0===r?0:e.size/r,i=(0,I.lub)((()=>{const n=[];e=(0,I.XLQ)(e,[1,r,o]);for(let r=0;r<t.length;++r){const i=[0,0===r?0:a[r-1],0],u=[1,t[r],o];n[r]=(0,I.XLQ)((0,I.tPi)(e,i,u),s)}return e.dispose(),n})),u=new At([],n,e.dtype,t.length);for(let e=0;e<i.length;e++)u.setItem(e,i[e]);return u}(r,$("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return I.lub((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=$("stride",e,t,n),a=$("pad",e,t,n),s=$("dataFormat",e,t,n).toUpperCase(),o=$("dilation",e,t,n);return[Mt($("x",e,t,n),$("filter",e,t,n),r,a,s,o)]}case"Conv2D":{const r=$("strides",e,t,n),a=O(e,t,n),s=$("dataFormat",e,t,n).toUpperCase(),o=$("dilations",e,t,n);return[Ft($("x",e,t,n),$("filter",e,t,n),[r[1],r[2]],a,s,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:o,biasArg:i,preluArg:u,activationFunc:l,leakyreluAlpha:c}=nn(e,t,n);return[Ut({x:$("x",e,t,n),filter:$("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[o[1],o[2]],bias:i,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:o,biasArg:i,preluArg:u,activationFunc:l,leakyreluAlpha:c}=nn(e,t,n);return[Ht({x:$("x",e,t,n),filter:$("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[o[1],o[2]],bias:i,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=$("outputShape",e,t,n),a=$("strides",e,t,n),s=O(e,t,n);return[Kt($("x",e,t,n),$("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=$("strides",e,t,n),a=O(e,t,n),s=$("dilations",e,t,n),o=$("dataFormat",e,t,n).toUpperCase();return[Wt($("input",e,t,n),$("filter",e,t,n),[r[1],r[2]],a,o,[s[1],s[2]])]}case"Conv3D":{const r=$("strides",e,t,n),a=$("pad",e,t,n),s=$("dataFormat",e,t,n).toUpperCase(),o=$("dilations",e,t,n);return[qt($("x",e,t,n),$("filter",e,t,n),[r[1],r[2],r[3]],a,s,[o[1],o[2],o[3]])]}case"AvgPool":{const r=$("strides",e,t,n),a=$("pad",e,t,n),s=$("kernelSize",e,t,n);return[Yt($("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=$("strides",e,t,n),a=$("pad",e,t,n),s=$("kernelSize",e,t,n);return[Qt($("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=$("strides",e,t,n),a=$("pad",e,t,n),s=$("kernelSize",e,t,n),o=$("includeBatchInIndex",e,t,n),{result:i,indexes:u}=Zt($("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,o);return[i,u]}case"AvgPool3D":{const r=$("strides",e,t,n),a=$("pad",e,t,n),s=$("kernelSize",e,t,n);return[Jt($("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=$("strides",e,t,n),a=$("pad",e,t,n),s=$("kernelSize",e,t,n);return[en($("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=$("strides",e,t,n),a=$("pad",e,t,n),s=$("dilations",e,t,n),o=r[1],i=r[2],u=s[1],l=s[2];return[tn($("x",e,t,n),$("filter",e,t,n),[o,i],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return I.lub((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=$("shape",e,t,n),a=$("dtype",e,t,n),s=$("value",e,t,n);return[rn.h(r,s,a)]}case"LinSpace":return[an($("start",e,t,n),$("stop",e,t,n),$("num",e,t,n))];case"Multinomial":{const r=$("logits",e,t,n),a=$("numSamples",e,t,n),s=$("seed",e,t,n);return[sn(r,a,s)]}case"OneHot":{const r=$("indices",e,t,n),a=$("depth",e,t,n),s=$("onValue",e,t,n),o=$("offValue",e,t,n);return[on(r,a,s,o)]}case"Ones":return[un.i($("shape",e,t,n),$("dtype",e,t,n))];case"OnesLike":return[ln($("x",e,t,n))];case"RandomUniform":return[fn($("shape",e,t,n),$("minval",e,t,n),$("maxval",e,t,n),$("dtype",e,t,n))];case"Range":{const r=$("start",e,t,n),a=$("stop",e,t,n),s=$("step",e,t,n);return[mn.w(r,a,s,$("dtype",e,t,n))]}case"TruncatedNormal":{const r=$("shape",e,t,n),a=$("mean",e,t,n),s=$("stdDev",e,t,n),o=$("seed",e,t,n);return[gn(r,a,s,$("dtype",e,t,n),o)]}case"Zeros":return[yn.l($("shape",e,t,n),$("dtype",e,t,n))];case"ZerosLike":return[_e.P($("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i,softNmsSigma:u}=kn(e,t,n),l=await xn.BHj.nonMaxSuppressionWithScoreAsync(r,a,s,o,i,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i}=kn(e,t,n),u=$("padToMaxOutputSize",e,t,n),l=await xn.BHj.nonMaxSuppressionPaddedAsync(r,a,s,o,i,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i}=kn(e,t,n);return[await xn.BHj.nonMaxSuppressionAsync(r,a,s,o,i)]}case"Where":{const r=Fe.p($("condition",e,t,n),"bool"),a=[await vn(r)];return r.dispose(),a}case"ListDiff":return async function(e,t){const n=(0,be._1)(e,"x","setdiff1d"),r=(0,be._1)(t,"y","setdiff1d");ve.hu(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),ve.hu(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),ve.hu(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const a=await n.data(),s=await r.data(),o=new Set(s);let i=0;for(let e=0;e<a.length;e++)o.has(a[e])||i++;const u=new wn.YD([i],n.dtype),l=new wn.YD([i],"int32");for(let e=0,t=0;e<a.length;e++)o.has(a[e])||(u.values[t]=a[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]}($("x",e,t,n),$("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return I.lub((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=$("x",e,t,n),a=$("k",e,t,n),s=$("sorted",e,t,n),o=Sn(r,a,s);return[o.values,o.indices]}case"Unique":{const r=$("x",e,t,n),a=Tn(r);return[a.values,a.indices]}case"UniqueV2":{const r=$("x",e,t,n),a=$("axis",e,t,n),s=Tn(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return I.lub((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=$("images",e,t,n),a=$("size",e,t,n),s=$("alignCorners",e,t,n),o=$("halfPixelCenters",e,t,n);return[xn.BHj.resizeBilinear(r,[a[0],a[1]],s,o)]}case"ResizeNearestNeighbor":{const r=$("images",e,t,n),a=$("size",e,t,n),s=$("alignCorners",e,t,n),o=$("halfPixelCenters",e,t,n);return[xn.BHj.resizeNearestNeighbor(r,[a[0],a[1]],s,o)]}case"CropAndResize":{const r=$("image",e,t,n),a=$("boxes",e,t,n),s=$("boxInd",e,t,n),o=$("cropSize",e,t,n),i=$("method",e,t,n),u=$("extrapolationValue",e,t,n);return[xn.BHj.cropAndResize(r,a,s,o,i,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return I.lub((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=$("default",e,t,n);return[E(e.name,t,n)||r];case"Placeholder":return[E(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[D($("x",e,t,n))];case"IdentityN":return $("x",e,t,n).map((e=>D(e)));case"Shape":return[In.R($("x",e,t,n).shape,"int32")];case"ShapeN":return $("x",e,t,n).map((e=>In.R(e.shape)));case"Size":return[Nn.i($("x",e,t,n).size,"int32")];case"Rank":return[Nn.i($("x",e,t,n).rank,"int32")];case"NoOp":return[Nn.i(1)];case"Print":const a=$("x",e,t,n),s=$("data",e,t,n),o=$("message",e,t,n),i=$("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,i));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return I.lub((()=>((e,t,n)=>{switch(e.op){case"Equal":return[$e($("a",e,t,n),$("b",e,t,n))];case"NotEqual":return[$n.Q($("a",e,t,n),$("b",e,t,n))];case"Greater":return[En.p($("a",e,t,n),$("b",e,t,n))];case"GreaterEqual":return[_n.b($("a",e,t,n),$("b",e,t,n))];case"Less":return[Rn($("a",e,t,n),$("b",e,t,n))];case"LessEqual":return[An.z($("a",e,t,n),$("b",e,t,n))];case"LogicalAnd":return[On.H($("a",e,t,n),$("b",e,t,n))];case"LogicalNot":return[Dn($("a",e,t,n))];case"LogicalOr":return[Fn($("a",e,t,n),$("b",e,t,n))];case"Select":case"SelectV2":return[Ee.a($("condition",e,t,n),$("a",e,t,n),$("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return I.lub((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[jt.O($("a",e,t,n),$("b",e,t,n),$("transposeA",e,t,n),$("transposeB",e,t,n))];case"Einsum":return[Mn($("equation",e,t,n),...$("tensors",e,t,n))];case"Transpose":return[Bn.p($("x",e,t,n),$("perm",e,t,n))];case"_FusedMatMul":const[r,a]=$("fusedOps",e,t,n),s="biasadd"===r,o="prelu"===a,i=$("numArgs",e,t,n),u=$("leakyreluAlpha",e,t,n);if(s){if(o&&2!==i)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==i)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=$("args",e,t,n);return[Xt({a:$("a",e,t,n),b:$("b",e,t,n),transposeA:$("transposeA",e,t,n),transposeB:$("transposeB",e,t,n),bias:l,activation:a,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return I.lub((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Pn($("x",e,t,n),$("mean",e,t,n),$("variance",e,t,n),$("offset",e,t,n),$("scale",e,t,n),$("epsilon",e,t,n))];case"LRN":return[Ln($("x",e,t,n),$("radius",e,t,n),$("bias",e,t,n),$("alpha",e,t,n),$("beta",e,t,n))];case"Softmax":return[Vn($("x",e,t,n))];case"LogSoftmax":return[zn($("x",e,t,n))];case"SparseToDense":return[Gn($("sparseIndices",e,t,n),$("outputShape",e,t,n),$("sparseValues",e,t,n),$("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return I.lub((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=$("axis",e,t,n),a=$("keepDims",e,t,n);return[Un.F($("x",e,t,n),r,a)]}case"Mean":{const r=$("axis",e,t,n),a=$("keepDims",e,t,n);return[Hn.J($("x",e,t,n),r,a)]}case"Min":{const r=$("axis",e,t,n),a=$("keepDims",e,t,n);return[jn.V($("x",e,t,n),r,a)]}case"Sum":{const r=$("axis",e,t,n),a=$("keepDims",e,t,n);return[Wn.S($("x",e,t,n),r,a)]}case"All":{const r=$("axis",e,t,n),a=$("keepDims",e,t,n);return[Xn($("x",e,t,n),r,a)]}case"Any":{const r=$("axis",e,t,n),a=$("keepDims",e,t,n);return[Kn($("x",e,t,n),r,a)]}case"ArgMax":{const r=$("axis",e,t,n);return[qn.N($("x",e,t,n),r)]}case"ArgMin":{const r=$("axis",e,t,n);return[Yn($("x",e,t,n),r)]}case"Prod":{const r=$("axis",e,t,n),a=$("keepDims",e,t,n);return[St($("x",e,t,n),r,a)]}case"Cumsum":{const r=$("axis",e,t,n),a=$("exclusive",e,t,n),s=$("reverse",e,t,n);return[Qn($("x",e,t,n),r,a,s)]}case"Bincount":const r=$("x",e,t,n),a=$("weights",e,t,n),s=$("size",e,t,n);return[Zn.y(r,a,s)];case"DenseBincount":{const r=$("x",e,t,n),a=$("weights",e,t,n),s=$("size",e,t,n),o=$("binaryOutput",e,t,n);return[Jn(r,a,s,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return I.lub((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=$("n",e,t,n),a=$("axis",e,t,n);let s=$("tensors",e,t,n);return s=s.slice(0,r),[er.z(s,a)]}case"Gather":{const r=$("x",e,t,n),a=$("indices",e,t,n);return[tr(r,Fe.p(a,"int32"),0)]}case"GatherV2":{const r=$("axis",e,t,n),a=$("batchDims",e,t,n),s=$("x",e,t,n),o=$("indices",e,t,n);return[tr(s,Fe.p(o,"int32"),r,a)]}case"Reverse":{const r=$("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=$("x",e,t,n);return[nr.G(s,a)]}case"ReverseV2":{const r=$("axis",e,t,n),a=$("x",e,t,n);return[nr.G(a,r)]}case"Slice":{const r=$("begin",e,t,n),a=$("size",e,t,n);return[rr.t($("x",e,t,n),r,a)]}case"StridedSlice":{const r=$("begin",e,t,n),a=$("end",e,t,n),s=$("strides",e,t,n),o=$("beginMask",e,t,n),i=$("endMask",e,t,n),u=$("ellipsisMask",e,t,n),l=$("newAxisMask",e,t,n),c=$("shrinkAxisMask",e,t,n),p=$("x",e,t,n);return[ar(p,r,a,s,o,i,u,l,c)]}case"Pack":return(0,I.lub)((()=>{const r=$("axis",e,t,n),a=$("tensors",e,t,n),s=a[0].shape,o=sr.L(a[0]).shape,i=a.map((e=>{const t=I.D5U.arraysEqual(e.shape,s);if(!t&&!I.D5U.arraysEqual(sr.L(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:Dt.X(e,s)}));return[or.k(i,r)]}));case"Unpack":{const r=$("axis",e,t,n),a=$("tensor",e,t,n);return ir.H(a,r)}case"Tile":{const r=$("reps",e,t,n);return[ur.G($("x",e,t,n),r)]}case"Split":case"SplitV":{const r=$("axis",e,t,n),a=$("numOrSizeSplits",e,t,n),s=$("x",e,t,n);return lr.V(s,a,r)}case"ScatterNd":{const r=$("indices",e,t,n),a=$("values",e,t,n),s=$("shape",e,t,n);return[pr(r,a,s)]}case"GatherNd":{const r=$("x",e,t,n),a=$("indices",e,t,n);return[hr(r,a)]}case"SparseToDense":{const r=$("sparseIndices",e,t,n),a=$("outputShape",e,t,n),s=$("sparseValues",e,t,n),o=$("defaultValue",e,t,n);return[Gn(r,s,a,s.dtype===o.dtype?o:Fe.p(o,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return I.lub((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:o}=xn.rVs.sparseFillEmptyRows($("indices",e,t,n),$("values",e,t,n),$("denseShape",e,t,n),$("defaultValue",e,t,n));return[r,a,s,o]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=xn.rVs.sparseReshape($("inputIndices",e,t,n),$("inputShape",e,t,n),$("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[xn.rVs.sparseSegmentMean($("data",e,t,n),$("indices",e,t,n),$("segmentIds",e,t,n))];case"SparseSegmentSum":return[xn.rVs.sparseSegmentSum($("data",e,t,n),$("indices",e,t,n),$("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return I.lub((()=>((e,t,n)=>{switch(e.op){case"FFT":return[dr.k($("x",e,t,n))];case"IFFT":return[fr.S($("x",e,t,n))];case"RFFT":return[mr.Q($("x",e,t,n))];case"IRFFT":return[gr.w($("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return I.lub((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=xn.Z_8.stringNGrams($("data",e,t,n),$("dataSplits",e,t,n),$("separator",e,t,n),$("nGramWidths",e,t,n),$("leftPad",e,t,n),$("rightPad",e,t,n),$("padWidth",e,t,n),$("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:s}=xn.Z_8.stringSplit($("input",e,t,n),$("delimiter",e,t,n),$("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[xn.Z_8.stringToHashBucketFast($("input",e,t,n),$("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return I.lub((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Fe.p($("x",e,t,n),$("dtype",e,t,n))];case"ExpandDims":{const r=$("axis",e,t,n);return[yr.d($("x",e,t,n),r)]}case"Squeeze":{const r=$("axis",e,t,n);return[sr.L($("x",e,t,n),r)]}case"Reshape":return[Dt.X($("x",e,t,n),$("shape",e,t,n))];case"MirrorPad":return[xr($("x",e,t,n),$("padding",e,t,n),$("mode",e,t,n))];case"PadV2":case"Pad":return[br.v($("x",e,t,n),$("padding",e,t,n),$("constantValue",e,t,n))];case"SpaceToBatchND":{const r=$("blockShape",e,t,n),a=$("paddings",e,t,n);return[vr($("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=$("blockShape",e,t,n),a=$("crops",e,t,n);return[wr($("x",e,t,n),r,a)]}case"DepthToSpace":{const r=$("blockSize",e,t,n),a=$("dataFormat",e,t,n).toUpperCase();return[kr($("x",e,t,n),r,a)]}case"BroadcastTo":return[Sr.U($("x",e,t,n),$("shape",e,t,n))];case"BroadcastArgs":return[Tr($("s0",e,t,n),$("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=$("keyDType",e,t,n),s=$("valueDType",e,t,n),o=new Cn(a,s);return r.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=$("tableHandle",e,t,n,r),s=$("keys",e,t,n),o=$("values",e,t,n),i=r.getHashTableById(a.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const a=$("tableHandle",e,t,n,r),s=$("keys",e,t,n),o=$("defaultValue",e,t,n),i=r.getHashTableById(a.id);return[await i.find(s,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=$("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=C(e.op);if(a&&a.customExecutor)return a.customExecutor(new me(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return I.D5U.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}class Nr{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Cr(e,t,n,r){const a=new Set,s=[];let o=null,i=null;const u=new Set,l=Object.keys(e).map((e=>A(e)[0]));let c=[];null!=r&&(c=r.map((e=>A(e.name)[0])));const p=[...t];for(;p.length>0;){const e=p.pop();(Rr(e)||Ar(e)||Or(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),p.push(e))})):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:o,syncInputs:i}}const $r=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Er=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],_r=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Rr(e){return $r.indexOf(e.op)>=0}function Ar(e){return Er.indexOf(e.op)>=0}function Or(e){return _r.indexOf(e.op)>=0}class Dr{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Dr(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=Cr(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],o=Object.keys(a).map((e=>A(e)[0])).map((t=>e.nodes[t])),i=e.initNodes;o.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=i&&i.forEach((e=>{r.has(e.name)&&s.push(e)}));const u=new Set,l=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&s.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[A(e)[0]])),a=t.map((e=>A(e)[0]));let s=a.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===s.length&&(s=this._outputs);const o=this.getCompilationKey(r,s);let i=this.compiledMap.get(o);null==i&&(i=this.compile(e,s),this.compiledMap.set(o,i));const u={},l={};return(0,I.lub)((()=>{const n=new Nr(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=A(t),s=[];s[a]=e[t],r[n]=s}));const s=this.getFrozenTensorIds(r),o={};for(let e=0;e<i.length;e++){const t=i[e];if(!r[t.name]){const e=Ir(t,r,n,this._resourceManager);if(I.D5U.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,o)}}return null==this.parent&&n.dispose(s),t.map((e=>E(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,o){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(o[e.id]=(o[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const s=function(e,t,n){return t[R(e,n.currentContextId)]}(e.name,n,r);null!=s&&s.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){const n=o[e.id];if(1===n){if(this.keepTensorForDebug){const[n,a]=_(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][a]=e}else e.dispose();delete o[e.id]}else null!=n&&o[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=(0,I.OBj)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();const s=new Nr(this.weightMap,r,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,n);const o=t.map((e=>E(e,this.tensorsMap,s))),i=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...i,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&s.dispose(this.keepIds),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[A(e)[0]])),o=n.map((e=>A(e)[0]));let i=o.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:p}=Cr(e,i,this.weightMap,this._initNodes),h=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=A(t),a=[];a[r]=e[t],d[n]=a}));const f={},m=this.getFrozenTensorIds(d),g={};for(;h.length>0;){const e=this.processStack(s,h,t,d,g,m,o,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=i.filter((e=>!Rr(e)&&!E(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return d}processStack(e,t,n,r,a,s,o,i,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&$("isConstant",e.node,r,n)&&([c]=_(e.node.name,n)),null==r[e.node.name]){const p=Ir(e.node,r,n,this._resourceManager);c||([c]=_(e.node.name,n));const h=n.currentContext;I.D5U.isPromise(p)?l.push(p.then((l=>(r[c]=l,n.currentContext=h,this.checkTensorForDisposal(c,e.node,r,n,s,o,i),this.processChildNodes(e.node,t,n,r,a,u),l)))):(r[c]=p,this.checkTensorForDisposal(c,e.node,r,n,s,o,i),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[o]=_(e.name,n);!a[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!E(e,r,n)))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!E(e,r,n)))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=A(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));I.D5U.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&I.D5U.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=A(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=A(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Fr{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class Mr{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new Fr}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=I.io.browserHTTPRequest(e,this.loadOptions);else{const t=I.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(I.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=I.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Dr(ee.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=ee.Instance.transformGraph(e.modelInitializer);this.initializer=new Dr(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=I.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof I.esB||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function Br(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new Mr(e,t);return await n.load(),n}var Pr=function(e,t){return(Pr=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function Lr(e,t){function n(){this.constructor=e}Pr(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var Vr=function(){return(Vr=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};function Ur(e,t,n,r){return new(n||(n=Promise))((function(a,s){function o(e){try{u(r.next(e))}catch(e){s(e)}}function i(e){try{u(r.throw(e))}catch(e){s(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,i)}u((r=r.apply(e,t||[])).next())}))}function Wr(e,t){var n,r,a,s,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function i(s){return function(i){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,r=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!((a=(a=o.trys).length>0&&a[a.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){o.label=s[1];break}if(6===s[0]&&o.label<a[1]){o.label=a[1],a=s;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(s);break}a[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,i])}}}var zr=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],Gr=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"],Hr={left:[1,2,3,7,9,11,13,15,17,19,21,23,25,27,29,31],right:[4,5,6,8,10,12,14,16,18,20,22,24,26,28,30,32],middle:[0]},jr={left:[1,3,5,7,9,11,13,15],right:[2,4,6,8,10,12,14,16],middle:[0]},Xr=[[0,1],[0,2],[1,3],[2,4],[5,6],[5,7],[5,11],[6,8],[6,12],[7,9],[8,10],[11,12],[11,13],[12,14],[13,15],[14,16]],Kr=[[0,1],[0,4],[1,2],[2,3],[3,7],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[11,23],[12,14],[14,16],[12,24],[13,15],[15,17],[16,18],[16,20],[15,17],[15,19],[15,21],[16,22],[17,19],[18,20],[23,25],[23,24],[24,26],[25,27],[26,28],[27,29],[28,30],[27,31],[28,32],[29,31],[30,32]],qr={runtime:"mediapipe",enableSmoothing:!0,modelType:"full"},Yr=function(){function e(e){var t,n=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new T.Pose({locateFile:function(t,n){return e.solutionPath?e.solutionPath.replace(/\/+$/,"")+"/"+t:n+"/"+t}}),e.modelType){case"lite":t=0;break;case"heavy":t=2;break;default:t=1}this.poseSolution.setOptions({modelComplexity:t,smoothLandmarks:e.enableSmoothing||!0,selfieMode:this.selfieMode}),this.poseSolution.onResults((function(e){n.height=e.image.height,n.width=e.image.width,null==e.poseLandmarks?n.poses=[]:n.poses=[n.translateOutput(e.poseLandmarks,e.poseWorldLandmarks)]}))}return e.prototype.translateOutput=function(e,t){var n=this,r={keypoints:e.map((function(e,t){return{x:e.x*n.width,y:e.y*n.height,z:e.z,score:e.visibility,name:Gr[t]}}))};return null!=t&&(r.keypoints3D=t.map((function(e,t){return{x:e.x,y:e.y,z:e.z,score:e.visibility,name:Gr[t]}}))),r},e.prototype.estimatePoses=function(e,t,n){return Ur(this,void 0,void 0,(function(){return Wr(this,(function(r){switch(r.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),[4,this.poseSolution.send({image:e},n)];case 1:return r.sent(),[2,this.poses]}}))}))},e.prototype.dispose=function(){this.poseSolution.close()},e.prototype.reset=function(){this.poseSolution.reset()},e.prototype.initialize=function(){return this.poseSolution.initialize()},e}();function Qr(e){return Ur(this,void 0,void 0,(function(){var t,n;return Wr(this,(function(r){switch(r.label){case 0:return t=function(e){if(null==e)return Vr({},qr);var t=Vr({},e);return t.runtime="mediapipe",null==t.enableSmoothing&&(t.enableSmoothing=qr.enableSmoothing),null==t.modelType&&(t.modelType=qr.modelType),t}(e),[4,(n=new Yr(t)).initialize()];case 1:return r.sent(),[2,n]}}))}))}function Zr(e){return e instanceof I.esB?{height:e.shape[0],width:e.shape[1]}:{height:e.height,width:e.width}}function Jr(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function ea(e){return e instanceof I.esB?e:I.Xhn.fromPixels(e)}function ta(e,t){I.D5U.assert(0!==e.width,(function(){return t+" width cannot be 0."})),I.D5U.assert(0!==e.height,(function(){return t+" height cannot be 0."}))}function na(e,t,n){var r=t.inputResolution,a=t.keepAspectRatio,s=Zr(e),o=function(e,t){return t?{xCenter:t.xCenter*e.width,yCenter:t.yCenter*e.height,width:t.width*e.width,height:t.height*e.height,rotation:t.rotation}:{xCenter:.5*e.width,yCenter:.5*e.height,width:e.width,height:e.height,rotation:0}}(s,n),i=function(e,t,n){if(void 0===n&&(n=!1),!n)return{top:0,left:0,right:0,bottom:0};var r=t.height,a=t.width;ta(t,"targetSize"),ta(e,"roi");var s,o,i=r/a,u=e.height/e.width,l=0,c=0;return i>u?(s=e.width,o=e.width*i,c=(1-u/i)/2):(s=e.height/i,o=e.height,l=(1-i/u)/2),e.width=s,e.height=o,{top:c,left:l,right:l,bottom:c}}(o,r,a);return{imageTensor:(0,I.lub)((function(){var t=ea(e),n=(0,I.odF)(function(e,t,n,r){ta(r,"inputResolution");var a=1/t.width,s=1/t.height,o=e.xCenter,i=e.yCenter,u=Math.cos(e.rotation),l=Math.sin(e.rotation),c=e.width,p=e.height;return[1/r.width*c*u*1*a*t.width,1/r.height*-p*l*a*t.width,(-.5*c*u*1+.5*p*l+o)*a*t.width,1/r.width*c*l*1*s*t.height,1/r.height*p*u*s*t.height,(-.5*p*u-.5*c*l*1+i)*s*t.height,0,0]}(o,s,0,r),[1,8]);return I.BHj.transform((0,I.dt4)((0,I.pju)(t,"float32")),n,"bilinear","nearest",0,[r.height,r.width])})),padding:i}}function ra(e){return null!=e&&null!=e.currentTime}var aa=function(){function e(e){this.alpha=e,this.initialized=!1}return e.prototype.apply=function(e,t){var n;return this.initialized?n=null==t?this.storedValue+this.alpha*(e-this.storedValue):this.storedValue+this.alpha*t*Math.asinh((e-this.storedValue)/t):(n=e,this.initialized=!0),this.rawValue=e,this.storedValue=n,n},e.prototype.applyWithAlpha=function(e,t,n){return this.alpha=t,this.apply(e,n)},e.prototype.hasLastRawValue=function(){return this.initialized},e.prototype.lastRawValue=function(){return this.rawValue},e.prototype.reset=function(){this.initialized=!1},e}(),sa=function(){function e(e){this.frequency=e.frequency,this.minCutOff=e.minCutOff,this.beta=e.beta,this.thresholdCutOff=e.thresholdCutOff,this.thresholdBeta=e.thresholdBeta,this.derivateCutOff=e.derivateCutOff,this.x=new aa(this.getAlpha(this.minCutOff)),this.dx=new aa(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return e.prototype.apply=function(e,t,n){if(null==e)return e;var r=Math.trunc(t);if(this.lastTimestamp>=r)return e;0!==this.lastTimestamp&&0!==r&&(this.frequency=1/(1e-6*(r-this.lastTimestamp))),this.lastTimestamp=r;var a=this.x.hasLastRawValue()?(e-this.x.lastRawValue())*n*this.frequency:0,s=this.dx.applyWithAlpha(a,this.getAlpha(this.derivateCutOff)),o=this.minCutOff+this.beta*Math.abs(s),i=null!=this.thresholdCutOff?this.thresholdCutOff+this.thresholdBeta*Math.abs(s):null;return this.x.applyWithAlpha(e,this.getAlpha(o),i)},e.prototype.getAlpha=function(e){return 1/(1+this.frequency/(2*Math.PI*e))},e}(),oa=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,n){var r=this;if(null==e)return this.reset(),null;this.initializeFiltersIfEmpty(e);var a=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return e.slice();a=1/n}return e.map((function(e,n){var s=Vr({},e,{x:r.xFilters[n].apply(e.x,t,a),y:r.yFilters[n].apply(e.y,t,a)});return null!=e.z&&(s.z=r.zFilters[n].apply(e.z,t,a)),s}))},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map((function(e){return new sa(t.config)})),this.yFilters=e.map((function(e){return new sa(t.config)})),this.zFilters=e.map((function(e){return new sa(t.config)})))},e}();var ia=function(){function e(e){this.config=e,this.window=[],this.lowPassFilter=new aa(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return e.prototype.apply=function(e,t,n){if(null==e)return e;var r,a=Math.trunc(t);if(this.lastTimestamp>=a)return e;if(-1===this.lastTimestamp)r=1;else{for(var s=e*n-this.lastValue*this.lastValueScale,o=a-this.lastTimestamp,i=s,u=o,l=(1+this.window.length)*(1e6/30),c=0,p=this.window;c<p.length;c++){var h=p[c];if(u+h.duration>l)break;i+=h.distance,u+=h.duration}var d=i/(1e-6*u);r=1-1/(1+this.config.velocityScale*Math.abs(d)),this.window.unshift({distance:s,duration:o}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=e,this.lastValueScale=n,this.lastTimestamp=a,this.lowPassFilter.applyWithAlpha(e,r)},e}(),ua=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,n){var r=this;if(null==e)return this.reset(),null;var a=1;if(!this.config.disableValueScaling){if(n<this.config.minAllowedObjectScale)return e.slice();a=1/n}return this.initializeFiltersIfEmpty(e),e.map((function(e,n){var s=Vr({},e,{x:r.xFilters[n].apply(e.x,t,a),y:r.yFilters[n].apply(e.y,t,a)});return null!=e.z&&(s.z=r.zFilters[n].apply(e.z,t,a)),s}))},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map((function(e){return new ia(t.config)})),this.yFilters=e.map((function(e){return new ia(t.config)})),this.zFilters=e.map((function(e){return new ia(t.config)})))},e}();function la(e,t){return e.map((function(e){var n=Vr({},e,{x:e.x*t.width,y:e.y*t.height});return null!=e.z&&(n.z=e.z*t.width),n}))}var ca=function(){function e(e){if(null!=e.velocityFilter)this.keypointsFilter=new ua(e.velocityFilter);else{if(null==e.oneEuroFilter)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+e+".");this.keypointsFilter=new oa(e.oneEuroFilter)}}return e.prototype.apply=function(e,t,n,r,a){if(void 0===r&&(r=!1),null==e)return this.keypointsFilter.reset(),null;var s=null!=a?function(e,t){return(e.width*t.width+e.height*t.height)/2}(a,n):1,o=r?la(e,n):e,i=this.keypointsFilter.apply(o,t,s);return r?function(e,t){return e.map((function(e){var n=Vr({},e,{x:e.x/t.width,y:e.y/t.height});return null!=e.z&&(e.z=e.z/t.width),n}))}(i,n):i},e}();function pa(e,t){var n=function(e,t,n,r){var a=(r-n)/255;return{scale:a,offset:n-0*a}}(0,0,t[0],t[1]);return(0,I.lub)((function(){return(0,I.IHx)((0,I.dC7)(e,n.scale),n.offset)}))}function ha(e,t,n){var r=n.rotationVectorStartKeypointIndex,a=n.rotationVectorEndKeypointIndex,s=e.locationData,o=s.relativeKeypoints[r].x*t.width,i=s.relativeKeypoints[r].y*t.height,u=s.relativeKeypoints[a].x*t.width,l=s.relativeKeypoints[a].y*t.height,c=2*Math.sqrt((u-o)*(u-o)+(l-i)*(l-i)),p=function(e,t,n){var r,a=e.locationData,s=n.rotationVectorStartKeypointIndex,o=n.rotationVectorEndKeypointIndex;r=n.rotationVectorTargetAngle?n.rotationVectorTargetAngle:Math.PI*n.rotationVectorTargetAngleDegree/180;var i=a.relativeKeypoints[s].x*t.width,u=a.relativeKeypoints[s].y*t.height,l=a.relativeKeypoints[o].x*t.width,c=a.relativeKeypoints[o].y*t.height;return Jr(r-Math.atan2(-(c-u),l-i))}(e,t,n);return{xCenter:o/t.width,yCenter:i/t.height,width:c/t.width,height:c/t.height,rotation:p}}function da(e,t,n,r){return 1===r?.5*(e+t):e+(t-e)*n/(r-1)}function fa(e){for(var t={locationData:{relativeKeypoints:[]}},n=Number.MAX_SAFE_INTEGER,r=Number.MIN_SAFE_INTEGER,a=Number.MAX_SAFE_INTEGER,s=Number.MIN_SAFE_INTEGER,o=0;o<e.length;++o){var i=e[o];n=Math.min(n,i.x),r=Math.max(r,i.x),a=Math.min(a,i.y),s=Math.max(s,i.y),t.locationData.relativeKeypoints.push({x:i.x,y:i.y})}return t.locationData.relativeBoundingBox={xMin:n,yMin:a,xMax:r,yMax:s,width:r-n,height:s-a},t}function ma(e,t,n,r){return Ur(this,void 0,void 0,(function(){var a,s,o,i,u;return Wr(this,(function(l){switch(l.label){case 0:return a=(0,I.odF)(e.map((function(e){return[e.locationData.relativeBoundingBox.yMin,e.locationData.relativeBoundingBox.xMin,e.locationData.relativeBoundingBox.yMax,e.locationData.relativeBoundingBox.xMax]}))),s=(0,I.RRF)(e.map((function(e){return e.score[0]}))),[4,I.BHj.nonMaxSuppressionAsync(a,s,t,n,r)];case 1:return[4,(o=l.sent()).array()];case 2:return i=l.sent(),u=e.filter((function(e,t){return i.indexOf(t)>-1})),(0,I.B90)([a,s,o]),[2,u]}}))}))}function ga(e,t,n){return Ur(this,void 0,void 0,(function(){var r,a,s,o,i,u,l,c,p,h,d,f,m,g,y,x,b,v,w,k,S,T,N,C;return Wr(this,(function($){switch($.label){case 0:if(r=(0,I.L9e)(t,[0]),a=r.shape,s=a[0],o=a[1],i=a[2],e.length!==i)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+e.length+", heatmap length: "+i);return u=[],[4,r.buffer()];case 1:for(l=$.sent(),c=0;c<e.length;c++)if(p=e[c],h=Vr({},p),u.push(h),d=Math.trunc(h.x*o),f=Math.trunc(h.y*s),!(d<0||d>=o||f<0||d>=s)){for(m=Math.trunc((n.kernelSize-1)/2),g=Math.max(0,d-m),y=Math.min(o,d+m+1),x=Math.max(0,f-m),b=Math.min(s,f+m+1),v=0,w=0,k=0,S=0,T=x;T<b;++T)for(N=g;N<y;++N)C=l.get(T,N,c),v+=C,S=Math.max(S,C),w+=N*C,k+=T*C;S>=n.minConfidenceToRefine&&v>0&&(h.x=w/o/v,h.y=k/s/v)}return r.dispose(),[2,u]}}))}))}function ya(e,t,n){return Ur(this,void 0,void 0,(function(){var r,a,s,o,i;return Wr(this,(function(u){switch(u.label){case 0:return r=e[0],a=e[1],s=function(e,t,n){return(0,I.lub)((function(){var r,a,s,o;n.reverseOutputOrder?(a=(0,I.L9e)((0,I.tPi)(e,[0,n.boxCoordOffset+0],[-1,1])),r=(0,I.L9e)((0,I.tPi)(e,[0,n.boxCoordOffset+1],[-1,1])),o=(0,I.L9e)((0,I.tPi)(e,[0,n.boxCoordOffset+2],[-1,1])),s=(0,I.L9e)((0,I.tPi)(e,[0,n.boxCoordOffset+3],[-1,1]))):(r=(0,I.L9e)((0,I.tPi)(e,[0,n.boxCoordOffset+0],[-1,1])),a=(0,I.L9e)((0,I.tPi)(e,[0,n.boxCoordOffset+1],[-1,1])),s=(0,I.L9e)((0,I.tPi)(e,[0,n.boxCoordOffset+2],[-1,1])),o=(0,I.L9e)((0,I.tPi)(e,[0,n.boxCoordOffset+3],[-1,1]))),a=(0,I.IHx)((0,I.dC7)((0,I.hiC)(a,n.xScale),t.w),t.x),r=(0,I.IHx)((0,I.dC7)((0,I.hiC)(r,n.yScale),t.h),t.y),n.applyExponentialOnBoxSize?(s=(0,I.dC7)((0,I.Qqt)((0,I.hiC)(s,n.hScale)),t.h),o=(0,I.dC7)((0,I.Qqt)((0,I.hiC)(o,n.wScale)),t.w)):(s=(0,I.dC7)((0,I.hiC)(s,n.hScale),t.h),o=(0,I.dC7)((0,I.hiC)(o,n.wScale),t.h));var i=(0,I.luU)(r,(0,I.hiC)(s,2)),u=(0,I.luU)(a,(0,I.hiC)(o,2)),l=(0,I.IHx)(r,(0,I.hiC)(s,2)),c=(0,I.IHx)(a,(0,I.hiC)(o,2)),p=(0,I.zoF)([(0,I.XLQ)(i,[n.numBoxes,1]),(0,I.XLQ)(u,[n.numBoxes,1]),(0,I.XLQ)(l,[n.numBoxes,1]),(0,I.XLQ)(c,[n.numBoxes,1])],1);if(n.numKeypoints)for(var h=0;h<n.numKeypoints;++h){var d=n.keypointCoordOffset+h*n.numValuesPerKeypoint,f=void 0,m=void 0;n.reverseOutputOrder?(f=(0,I.L9e)((0,I.tPi)(e,[0,d],[-1,1])),m=(0,I.L9e)((0,I.tPi)(e,[0,d+1],[-1,1]))):(m=(0,I.L9e)((0,I.tPi)(e,[0,d],[-1,1])),f=(0,I.L9e)((0,I.tPi)(e,[0,d+1],[-1,1])));var g=(0,I.IHx)((0,I.dC7)((0,I.hiC)(f,n.xScale),t.w),t.x),y=(0,I.IHx)((0,I.dC7)((0,I.hiC)(m,n.yScale),t.h),t.y);p=(0,I.zoF)([p,(0,I.XLQ)(g,[n.numBoxes,1]),(0,I.XLQ)(y,[n.numBoxes,1])],1)}return p}))}(a,t,n),o=(0,I.lub)((function(){var e=r;return n.sigmoidScore?(null!=n.scoreClippingThresh&&(e=(0,I.iUl)(r,-n.scoreClippingThresh,n.scoreClippingThresh)),e=(0,I.XD2)(e)):e})),[4,xa(s,o,n)];case 1:return i=u.sent(),(0,I.B90)([s,o]),[2,i]}}))}))}function xa(e,t,n){return Ur(this,void 0,void 0,(function(){var r,a,s,o,i,u,l,c,p,h,d,f;return Wr(this,(function(m){switch(m.label){case 0:return r=[],[4,e.data()];case 1:return a=m.sent(),[4,t.data()];case 2:for(s=m.sent(),o=0;o<n.numBoxes;++o)if(!(null!=n.minScoreThresh&&s[o]<n.minScoreThresh||(i=o*n.numCoords,u=ba(a[i+0],a[i+1],a[i+2],a[i+3],s[o],n.flipVertically,o),(l=u.locationData.relativeBoundingBox).width<0||l.height<0))){if(n.numKeypoints>0)for((c=u.locationData).relativeKeypoints=[],p=n.numKeypoints*n.numValuesPerKeypoint,h=0;h<p;h+=n.numValuesPerKeypoint)d=i+n.keypointCoordOffset+h,f={x:a[d+0],y:n.flipVertically?1-a[d+1]:a[d+1]},c.relativeKeypoints.push(f);r.push(u)}return[2,r]}}))}))}function ba(e,t,n,r,a,s,o){return{score:[a],ind:o,locationData:{relativeBoundingBox:{xMin:t,yMin:s?1-n:e,xMax:r,yMax:s?1-e:n,width:r-t,height:n-e}}}}function va(e,t,n,r){return void 0===n&&(n=!1),void 0===r&&(r=!1),Ur(this,void 0,void 0,(function(){var a,s,o,i,u,l,c,p;return Wr(this,(function(h){switch(h.label){case 0:return a=e.size,s=a/t.numLandmarks,[4,e.data()];case 1:for(o=h.sent(),i=[],u=0;u<t.numLandmarks;++u)l=u*s,(p={x:0,y:0}).x=n?t.inputImageWidth-o[l]:o[l],s>1&&(p.y=r?t.inputImageHeight-o[l+1]:o[l+1]),s>2&&(p.z=o[l+2]),s>3&&(p.score=(d=o[l+3],1/(1+Math.exp(-d)))),i.push(p);for(c=0;c<i.length;++c)(p=i[c]).x=p.x/t.inputImageWidth,p.y=p.y/t.inputImageHeight,p.z=p.z/t.inputImageWidth/(t.normalizeZ||1);return[2,i]}var d}))}))}function wa(e,t,n){var r=e.width,a=e.height,s=e.rotation;if(null==n.rotation&&null==n.rotationDegree||(s=function(e,t){return null!=t.rotation?e+=t.rotation:null!=t.rotationDegree&&(e+=Math.PI*t.rotationDegree/180),Jr(e)}(s,n)),0===s)e.xCenter=e.xCenter+r*n.shiftX,e.yCenter=e.yCenter+a*n.shiftY;else{var o=(t.width*r*n.shiftX*Math.cos(s)-t.height*a*n.shiftY*Math.sin(s))/t.width,i=(t.width*r*n.shiftX*Math.sin(s)+t.height*a*n.shiftY*Math.cos(s))/t.height;e.xCenter=e.xCenter+o,e.yCenter=e.yCenter+i}if(n.squareLong){var u=Math.max(r*t.width,a*t.height);r=u/t.width,a=u/t.height}else if(n.squareShort){var l=Math.min(r*t.width,a*t.height);r=l/t.width,a=l/t.height}return e.width=r*n.scaleX,e.height=a*n.scaleY,e}var ka=function(){function e(e){this.alpha=e.alpha}return e.prototype.apply=function(e){var t=this;if(null==e)return this.visibilityFilters=null,null;null!=this.visibilityFilters&&this.visibilityFilters.length===e.length||(this.visibilityFilters=e.map((function(e){return new aa(t.alpha)})));for(var n=[],r=0;r<e.length;++r){var a=e[r],s=Vr({},a);s.score=this.visibilityFilters[r].apply(a.score),n.push(s)}return n},e}(),Sa={reduceBoxesInLowestlayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},Ta={runtime:"tfjs",modelType:"full",enableSmoothing:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/1"},Ia={maxPoses:1,flipHorizontal:!1},Na={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},Ca={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25,squareLong:!0},$a={inputResolution:{width:224,height:224},keepAspectRatio:!0},Ea={inputResolution:{width:256,height:256},keepAspectRatio:!0},_a={numLandmarks:39,inputImageWidth:256,inputImageHeight:256},Ra={numLandmarks:39,inputImageWidth:1,inputImageHeight:1},Aa={kernelSize:7,minConfidenceToRefine:.5},Oa={alpha:.1},Da={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},Fa={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},Ma={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},Ba=function(){function e(e,t,n,r){this.detectorModel=e,this.landmarkModel=t,this.enableSmoothing=n,this.modelType=r,this.regionOfInterest=null,this.anchors=function(e){for(var t=[],n=0;n<e.numLayers;){for(var r=[],a=[],s=[],o=[],i=n;i<e.strides.length&&e.strides[i]===e.strides[n];){var u=da(e.minScale,e.maxScale,i,e.strides.length);if(0===i&&e.reduceBoxesInLowestLayer)s.push(1),s.push(2),s.push(.5),o.push(.1),o.push(u),o.push(u);else{for(var l=0;l<e.aspectRatios.length;++l)s.push(e.aspectRatios[l]),o.push(u);if(e.interpolatedScaleAspectRatio>0){var c=i===e.strides.length-1?1:da(e.minScale,e.maxScale,i+1,e.strides.length);o.push(Math.sqrt(u*c)),s.push(e.interpolatedScaleAspectRatio)}}i++}for(var p=0;p<s.length;++p){var h=Math.sqrt(s[p]);r.push(o[p]/h),a.push(o[p]*h)}var d=0,f=0;if(e.featureMapHeight.length>0)d=e.featureMapHeight[n],f=e.featureMapWidth[n];else{var m=e.strides[n];d=Math.ceil(e.inputSizeHeight/m),f=Math.ceil(e.inputSizeWidth/m)}for(var g=0;g<d;++g)for(var y=0;y<f;++y)for(var x=0;x<r.length;++x){var b={xCenter:(y+e.anchorOffsetX)/f,yCenter:(g+e.anchorOffsetY)/d,width:0,height:0};e.fixedAnchorSize?(b.width=1,b.height=1):(b.width=a[x],b.height=r[x]),t.push(b)}n=i}return t}(Sa);var a=(0,I.RRF)(this.anchors.map((function(e){return e.width}))),s=(0,I.RRF)(this.anchors.map((function(e){return e.height}))),o=(0,I.RRF)(this.anchors.map((function(e){return e.xCenter}))),i=(0,I.RRF)(this.anchors.map((function(e){return e.yCenter})));this.anchorTensor={x:o,y:i,w:a,h:s}}return e.prototype.estimatePoses=function(e,t,n){return Ur(this,void 0,void 0,(function(){var r,a,s,o,i,u,l,c,p,h,d,f,m,g,y,x,b,v;return Wr(this,(function(w){switch(w.label){case 0:return r=function(e){var t;if(null==(t=null==e?Ia:Vr({},e)).maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw new Error("Invalid maxPoses "+t.maxPoses+". Should be > 0.");if(t.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return t}(t),null==e?(this.reset(),[2,[]]):(this.maxPoses=r.maxPoses,this.timestamp=null!=n?1e3*n:ra(e)?1e6*e.currentTime:null,a=Zr(e),s=(0,I.lub)((function(){return(0,I.pju)(ea(e),"float32")})),null!=(o=this.regionOfInterest)?[3,2]:[4,this.detectPose(s)]);case 1:if(0===(i=w.sent()).length)return this.reset(),s.dispose(),[2,[]];u=i[0],o=this.poseDetectionToRoi(u,a),w.label=2;case 2:return[4,this.poseLandmarksByRoi(o,s)];case 3:return l=w.sent(),s.dispose(),null==l?(this.reset(),[2,[]]):(c=l.actualLandmarks,p=l.auxiliaryLandmarks,h=l.poseScore,d=l.actualWorldLandmarks,f=this.poseLandmarkFiltering(c,p,d,a),m=f.actualLandmarksFiltered,g=f.auxiliaryLandmarksFiltered,y=f.actualWorldLandmarksFiltered,x=this.poseLandmarksToRoi(g,a),this.regionOfInterest=x,null!=(b=null!=m?la(m,a):null)&&b.forEach((function(e,t){e.name=Gr[t]})),null!=(v=y)&&v.forEach((function(e,t){e.name=Gr[t]})),[2,[{score:h,keypoints:b,keypoints3D:v}]])}}))}))},e.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),(0,I.B90)([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h])},e.prototype.reset=function(){this.regionOfInterest=null,this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},e.prototype.detectPose=function(e){return Ur(this,void 0,void 0,(function(){var t,n,r,a,s,o,i,u,l;return Wr(this,(function(c){switch(c.label){case 0:return t=na(e,$a),n=t.imageTensor,r=t.padding,a=pa(n,[-1,1]),s=function(e,t){return(0,I.lub)((function(){var n=function(e){return(0,I.lub)((function(){var t=(0,I.tPi)(e,[0,0,0],[1,-1,1]);return[(0,I.XD2)(t),(0,I.tPi)(e,[0,0,1],[1,-1,-1])]}))}(t.predict(e)),r=n[0],a=n[1];return{boxes:(0,I.L9e)(a),scores:(0,I.L9e)(r)}}))}(a,this.detectorModel),o=s.boxes,[4,ya([i=s.scores,o],this.anchorTensor,Na)];case 1:return[4,ma(c.sent(),this.maxPoses,.3,-1)];case 2:return u=c.sent(),l=function(e,t){void 0===e&&(e=[]);for(var n=t.left,r=t.top,a=t.left+t.right,s=t.top+t.bottom,o=0;o<e.length;o++){var i=e[o],u=i.locationData.relativeBoundingBox,l=(u.xMin-n)/(1-a),c=(u.yMin-r)/(1-s),p=u.width/(1-a),h=u.height/(1-s);u.xMin=l,u.yMin=c,u.width=p,u.height=h;for(var d=0;d<i.locationData.relativeKeypoints.length;++d){var f=i.locationData.relativeKeypoints[d],m=(f.x-n)/(1-a),g=(f.y-r)/(1-s);f.x=m,f.y=g}}return e}(u,r),(0,I.B90)([n,a,i,o]),[2,l]}}))}))},e.prototype.poseDetectionToRoi=function(e,t){return wa(ha(e,t,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),t,Ca)},e.prototype.poseLandmarksByRoi=function(e,t){return Ur(this,void 0,void 0,(function(){var n,r,a,s,o,i,u,l,c,p,h,d,f,m,g,y,x,b,v,w;return Wr(this,(function(k){switch(k.label){case 0:if(n=na(t,Ea,e),r=n.imageTensor,a=n.padding,s=pa(r,[0,1]),"lite"!==this.modelType&&"full"!==this.modelType&&"heavy"!==this.modelType)throw new Error("Model type must be one of lite, full or heavy,but got "+this.modelType);return o=this.landmarkModel.execute(s,["ld_3d","output_poseflag","activation_heatmap","world_3d"]),i=o[0],u=o[1],l=o[2],c=o[3],[4,u.data()];case 1:return(p=k.sent()[0])<.5?((0,I.B90)(o),(0,I.B90)([r,s]),[2,null]):[4,va(i,_a)];case 2:return[4,ga(h=k.sent(),l,Aa)];case 3:return d=k.sent(),f=function(e,t){var n=t.left,r=t.top,a=t.left+t.right,s=t.top+t.bottom;return e.map((function(e){return Vr({},e,{x:(e.x-n)/(1-a),y:(e.y-r)/(1-s),z:e.z/(1-a)})}))}(d,a),m=function(e,t,n){void 0===n&&(n={ignoreRotation:!1});for(var r=[],a=0,s=e;a<s.length;a++){var o=s[a],i=o.x-.5,u=o.y-.5,l=n.ignoreRotation?0:t.rotation,c=Math.cos(l)*i-Math.sin(l)*u,p=Math.sin(l)*i+Math.cos(l)*u;c=c*t.width+t.xCenter,p=p*t.height+t.yCenter;var h=o.z*t.width,d=Vr({},o);d.x=c,d.y=p,d.z=h,r.push(d)}return r}(f,e),g=m.slice(0,33),y=m.slice(33,35),[4,va(c,Ra)];case 4:return x=k.sent(),b=function(e,t,n){void 0===n&&(n=!0);for(var r=[],a=0;a<e.length;a++){var s=Vr({},t[a]);n&&(s.score=e[a].score),r.push(s)}return r}(h,x,!0),v=function(e,t){for(var n=[],r=0,a=e;r<a.length;r++){var s=a[r],o=s.x,i=s.y,u=t.rotation,l=Math.cos(u)*o-Math.sin(u)*i,c=Math.sin(u)*o+Math.cos(u)*i,p=Vr({},s);p.x=l,p.y=c,n.push(p)}return n}(b,e),w=v.slice(0,33),(0,I.B90)(o),(0,I.B90)([r,s]),[2,{actualLandmarks:g,auxiliaryLandmarks:y,poseScore:p,actualWorldLandmarks:w}]}}))}))},e.prototype.poseLandmarksToRoi=function(e,t){return wa(ha(fa(e),t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),t,Ca)},e.prototype.poseLandmarkFiltering=function(e,t,n,r){var a,s,o;if(null!=this.timestamp&&this.enableSmoothing){var i=ha(fa(t),r,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});null==this.visibilitySmoothingFilterActual&&(this.visibilitySmoothingFilterActual=new ka(Oa)),a=this.visibilitySmoothingFilterActual.apply(e),null==this.visibilitySmoothingFilterAuxiliary&&(this.visibilitySmoothingFilterAuxiliary=new ka(Oa)),s=this.visibilitySmoothingFilterAuxiliary.apply(t),o=this.visibilitySmoothingFilterActual.apply(n),null==this.landmarksSmoothingFilterActual&&(this.landmarksSmoothingFilterActual=new ca(Da)),a=this.landmarksSmoothingFilterActual.apply(a,this.timestamp,r,!0,i),null==this.landmarksSmoothingFilterAuxiliary&&(this.landmarksSmoothingFilterAuxiliary=new ca(Fa)),s=this.landmarksSmoothingFilterAuxiliary.apply(s,this.timestamp,r,!0,i),null==this.worldLandmarksSmoothingFilterActual&&(this.worldLandmarksSmoothingFilterActual=new ca(Ma)),o=this.worldLandmarksSmoothingFilterActual.apply(n,this.timestamp)}else a=e,s=t,o=n;return{actualLandmarksFiltered:a,auxiliaryLandmarksFiltered:s,actualWorldLandmarksFiltered:o}},e}();function Pa(e){return Ur(this,void 0,void 0,(function(){var t,n,r,a,s,o;return Wr(this,(function(i){switch(i.label){case 0:return t=function(e){var t=Vr({},null==e?Ta:e);if(null==t.enableSmoothing&&(t.enableSmoothing=Ta.enableSmoothing),null==t.modelType&&(t.modelType=Ta.modelType),null==t.detectorModelUrl&&(t.detectorModelUrl=Ta.detectorModelUrl),null==t.landmarkModelUrl)switch(t.modelType){case"lite":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/1";break;case"heavy":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/1";break;default:t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/1"}return t}(e),n=t.detectorModelUrl.indexOf("https://tfhub.dev")>-1,r=t.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([Br(t.detectorModelUrl,{fromTFHub:n}),Br(t.landmarkModelUrl,{fromTFHub:r})])];case 1:return a=i.sent(),s=a[0],o=a[1],[2,new Ba(s,o,t.enableSmoothing,t.modelType)]}}))}))}var La,Va,Ua,Wa=function(){function e(e){!function(e){if(e.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but encountered "+e.maxTracks);if(e.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but encountered "+e.maxAge);if(void 0!==e.keypointTrackerParams){if(e.keypointTrackerParams.keypointConfidenceThreshold<0||e.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+e.keypointTrackerParams.keypointConfidenceThreshold);if(e.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but encountered "+e.keypointTrackerParams.minNumberOfKeypoints);for(var t=0,n=e.keypointTrackerParams.keypointFalloff;t<n.length;t++){var r=n[t];if(r<=0)throw new Error("Must specify each keypoint falloff parameterto be positive but encountered "+r)}}}(e),this.tracks=[],this.maxTracks=e.maxTracks,this.maxAge=1e3*e.maxAge,this.minSimilarity=e.minSimilarity,this.nextID=1}return e.prototype.apply=function(e,t){this.filterOldTracks(t);var n=this.computeSimilarity(e);return this.assignTracks(e,n,t),this.updateTracks(t),e},e.prototype.getTracks=function(){return this.tracks.slice()},e.prototype.getTrackIDs=function(){return new Set(this.tracks.map((function(e){return e.id})))},e.prototype.filterOldTracks=function(e){var t=this;this.tracks=this.tracks.filter((function(n){return e-n.lastTimestamp<=t.maxAge}))},e.prototype.assignTracks=function(e,t,n){for(var r=Array.from(Array(t[0].length).keys()),a=[],s=0,o=Array.from(Array(e.length).keys());s<o.length;s++){var i=o[s];if(0!==r.length){for(var u=-1,l=-1,c=0,p=r;c<p.length;c++){var h=p[c],d=t[i][h];d>=this.minSimilarity&&d>l&&(u=h,l=d)}if(u>=0){var f=this.tracks[u];f=Object.assign(f,this.createTrack(e[i],n,f.id)),e[i].id=f.id;var m=r.indexOf(u);r.splice(m,1)}else a.push(i)}else a.push(i)}for(var g=0,y=a;g<y.length;g++){i=y[g];var x=this.createTrack(e[i],n);this.tracks.push(x),e[i].id=x.id}},e.prototype.updateTracks=function(e){this.tracks.sort((function(e,t){return t.lastTimestamp-e.lastTimestamp})),this.tracks=this.tracks.slice(0,this.maxTracks)},e.prototype.createTrack=function(e,t,n){var r={id:n||this.nextTrackID(),lastTimestamp:t,keypoints:e.keypoints.slice().map((function(e){return Vr({},e)}))};return void 0!==e.box&&(r.box=Vr({},e.box)),r},e.prototype.nextTrackID=function(){var e=this.nextID;return this.nextID+=1,e},e.prototype.remove=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.tracks=this.tracks.filter((function(t){return!e.includes(t.id)}))},e.prototype.reset=function(){this.tracks=[]},e}(),za=function(e){function t(t){return e.call(this,t)||this}return Lr(t,e),t.prototype.computeSimilarity=function(e){var t=this;return 0===e.length||0===this.tracks.length?[[]]:e.map((function(e){return t.tracks.map((function(n){return t.iou(e,n)}))}))},t.prototype.iou=function(e,t){var n=Math.max(e.box.xMin,t.box.xMin),r=Math.max(e.box.yMin,t.box.yMin),a=Math.min(e.box.xMax,t.box.xMax),s=Math.min(e.box.yMax,t.box.yMax);if(n>=a||r>=s)return 0;var o=(a-n)*(s-r);return o/(e.box.width*e.box.height+t.box.width*t.box.height-o)},t}(Wa),Ga=function(e){function t(t){var n=e.call(this,t)||this;return n.keypointThreshold=t.keypointTrackerParams.keypointConfidenceThreshold,n.keypointFalloff=t.keypointTrackerParams.keypointFalloff,n.minNumKeyoints=t.keypointTrackerParams.minNumberOfKeypoints,n}return Lr(t,e),t.prototype.computeSimilarity=function(e){if(0===e.length||0===this.tracks.length)return[[]];for(var t=[],n=0,r=e;n<r.length;n++){for(var a=r[n],s=[],o=0,i=this.tracks;o<i.length;o++){var u=i[o];s.push(this.oks(a,u))}t.push(s)}return t},t.prototype.oks=function(e,t){for(var n=this.area(t.keypoints)+1e-6,r=0,a=0,s=0;s<e.keypoints.length;++s){var o=e.keypoints[s],i=t.keypoints[s];if(!(o.score<this.keypointThreshold||i.score<this.keypointThreshold)){a+=1;var u=Math.pow(o.x-i.x,2)+Math.pow(o.y-i.y,2),l=2*this.keypointFalloff[s];r+=Math.exp(-1*u/(2*n*Math.pow(l,2)))}}return a<this.minNumKeyoints?0:r/a},t.prototype.area=function(e){var t=this,n=e.filter((function(e){return e.score>t.keypointThreshold})),r=Math.min.apply(Math,[1].concat(n.map((function(e){return e.x})))),a=Math.max.apply(Math,[0].concat(n.map((function(e){return e.x})))),s=Math.min.apply(Math,[1].concat(n.map((function(e){return e.y}))));return(a-r)*(Math.max.apply(Math,[0].concat(n.map((function(e){return e.y}))))-s)},t}(Wa);function Ha(e){switch(e){case Va.BlazePose:return Gr.reduce((function(e,t,n){return e[t]=n,e}),{});case Va.PoseNet:case Va.MoveNet:return zr.reduce((function(e,t,n){return e[t]=n,e}),{});default:throw new Error("Model "+e+" is not supported.")}}(Ua=La||(La={})).Keypoint="keypoint",Ua.BoundingBox="boundingBox",function(e){e.MoveNet="MoveNet",e.BlazePose="BlazePose",e.PoseNet="PoseNet"}(Va||(Va={})),Object.freeze({__proto__:null,getKeypointIndexBySide:function(e){switch(e){case Va.BlazePose:return Hr;case Va.PoseNet:case Va.MoveNet:return jr;default:throw new Error("Model "+e+" is not supported.")}},getAdjacentPairs:function(e){switch(e){case Va.BlazePose:return Kr;case Va.PoseNet:case Va.MoveNet:return Xr;default:throw new Error("Model "+e+" is not supported.")}},getKeypointIndexByName:Ha});var ja=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],Xa={modelType:"SinglePose.Lightning",enableSmoothing:!0},Ka={},qa={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},Ya={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},Qa={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function Za(e,t){var n,r,a,s;return e?t.width>t.height?(n=1,r=t.height/t.width,a=0,s=(t.width/2-t.height/2)/t.width):(n=t.width/t.height,r=1,a=(t.height/2-t.width/2)/t.height,s=0):t.width>t.height?(n=t.width/t.height,r=1,a=(t.height/2-t.width/2)/t.height,s=0):(n=1,r=t.height/t.width,a=0,s=(t.width/2-t.height/2)/t.width),{yMin:a,xMin:s,yMax:a+n,xMax:s+r,height:n,width:r}}function Ja(e,t){var n={maxTracks:e.maxTracks,maxAge:e.maxAge,minSimilarity:e.minSimilarity};return null!=t.maxTracks&&(n.maxTracks=t.maxTracks),null!=t.maxAge&&(n.maxAge=t.maxAge),null!=t.minSimilarity&&(n.minSimilarity=t.minSimilarity),n}var es=function(){function e(e,t){this.moveNetModel=e,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=Ha(Va.MoveNet),"SinglePose.Lightning"===t.modelType?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):"SinglePose.Thunder"===t.modelType&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel="MultiPose.Lightning"===t.modelType,this.multiPoseModel||(this.keypointFilter=new oa(qa),this.cropRegionFilterYMin=new aa(.9),this.cropRegionFilterXMin=new aa(.9),this.cropRegionFilterYMax=new aa(.9),this.cropRegionFilterXMax=new aa(.9)),this.enableSmoothing=t.enableSmoothing,t.minPoseScore?this.minPoseScore=t.minPoseScore:this.minPoseScore=.25,t.multiPoseMaxDimension?this.multiPoseMaxDimension=t.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=t.enableTracking,this.multiPoseModel&&this.enableTracking&&(t.trackerType===La.Keypoint?this.tracker=new Ga(t.trackerConfig):t.trackerType===La.BoundingBox&&(this.tracker=new za(t.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return e.prototype.runSinglePersonPoseModel=function(e){return Ur(this,void 0,void 0,(function(){var t,n,r,a,s;return Wr(this,(function(o){switch(o.label){case 0:if(4!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||1!==t.shape[1]||17!==t.shape[2]||3!==t.shape[3])throw t.dispose(),new Error("Unexpected output shape from model: ["+t.shape+"]");return"webgpu"===(0,I.N_N)()?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=o.sent(),o.label=3;case 3:for(t.dispose(),r={keypoints:[],score:0},a=0,s=0;s<17;++s)r.keypoints[s]={y:n[3*s],x:n[3*s+1],score:n[3*s+2]},r.keypoints[s].score>.2&&(++a,r.score+=r.keypoints[s].score);return a>0&&(r.score/=a),[2,r]}}))}))},e.prototype.runMultiPersonPoseModel=function(e){return Ur(this,void 0,void 0,(function(){var t,n,r,a,s,o,i,u;return Wr(this,(function(l){switch(l.label){case 0:if(3!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||56!==t.shape[2])throw t.dispose(),new Error("Unexpected output shape from model: ["+t.shape+"]");return"webgpu"===(0,I.N_N)()?[3,1]:(n=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:n=l.sent(),l.label=3;case 3:for(t.dispose(),r=[],a=n.length/56,s=0;s<a;++s)for(r[s]={keypoints:[]},o=56*s+51,r[s].box={yMin:n[o],xMin:n[o+1],yMax:n[o+2],xMax:n[o+3],width:n[o+3]-n[o+1],height:n[o+2]-n[o]},i=56*s+55,r[s].score=n[i],r[s].keypoints=[],u=0;u<17;++u)r[s].keypoints[u]={y:n[56*s+3*u],x:n[56*s+3*u+1],score:n[56*s+3*u+2]};return[2,r]}}))}))},e.prototype.estimatePoses=function(e,t,n){return void 0===t&&(t=Ka),Ur(this,void 0,void 0,(function(){var r,a,s,o,i,u;return Wr(this,(function(l){switch(l.label){case 0:return t=function(e){return null==e?Ka:Vr({},e)}(t),null==e?(this.reset(),[2,[]]):(null==n?ra(e)&&(n=1e6*e.currentTime):n*=1e3,r=ea(e),a=Zr(r),s=(0,I.dt4)(r,0),e instanceof I.esB||r.dispose(),o=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(s,a,n)]);case 1:return o=l.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(s,a,n)];case 3:o=l.sent(),l.label=4;case 4:for(i=0;i<o.length;++i)for(u=0;u<o[i].keypoints.length;++u)o[i].keypoints[u].name=zr[u],o[i].keypoints[u].y*=a.height,o[i].keypoints[u].x*=a.width;return[2,o]}}))}))},e.prototype.estimateSinglePose=function(e,t,n){return Ur(this,void 0,void 0,(function(){var r,a,s,o,i=this;return Wr(this,(function(u){switch(u.label){case 0:return this.cropRegion||(this.cropRegion=Za(null==this.cropRegion,t)),r=(0,I.lub)((function(){var t=(0,I.odF)([[i.cropRegion.yMin,i.cropRegion.xMin,i.cropRegion.yMax,i.cropRegion.xMax]]),n=(0,I.lls)([1],"int32"),r=[i.modelInputResolution.height,i.modelInputResolution.width];return(0,I.pju)(I.BHj.cropAndResize(e,t,n,r,"bilinear",0),"int32")})),e.dispose(),[4,this.runSinglePersonPoseModel(r)];case 1:if(a=u.sent(),r.dispose(),a.score<this.minPoseScore)return this.reset(),[2,[]];for(s=0;s<a.keypoints.length;++s)a.keypoints[s].y=this.cropRegion.yMin+a.keypoints[s].y*this.cropRegion.height,a.keypoints[s].x=this.cropRegion.xMin+a.keypoints[s].x*this.cropRegion.width;return null!=n&&this.enableSmoothing&&(a.keypoints=this.keypointFilter.apply(a.keypoints,n,1)),o=function(e,t,n,r){for(var a={},s=0,o=zr;s<o.length;s++){var i=o[s];a[i]=[t[n[i]].y*r.height,t[n[i]].x*r.width]}if(function(e,t){return(e[t.left_hip].score>.2||e[t.right_hip].score>.2)&&(e[t.left_shoulder].score>.2||e[t.right_shoulder].score>.2)}(t,n)){var u=(a.left_hip[0]+a.right_hip[0])/2,l=(a.left_hip[1]+a.right_hip[1])/2,c=function(e,t,n,r,a){for(var s=["left_shoulder","right_shoulder","left_hip","right_hip"],o=0,i=0,u=0;u<s.length;u++)(d=Math.abs(r-n[s[u]][0]))>o&&(o=d),(f=Math.abs(a-n[s[u]][1]))>i&&(i=f);for(var l=0,c=0,p=0,h=Object.keys(n);p<h.length;p++){var d,f,m=h[p];e[t[m]].score<.2||((d=Math.abs(r-n[m][0]))>l&&(l=d),(f=Math.abs(a-n[m][1]))>c&&(c=f))}return[o,i,l,c]}(t,n,a,u,l),p=c[0],h=c[1],d=c[2],f=c[3],m=Math.max(1.9*h,1.9*p,1.2*d,1.2*f),g=[u-(m=Math.min(m,Math.max(l,r.width-l,u,r.height-u))),l-m];if(m>Math.max(r.width,r.height)/2)return Za(null==e,r);var y=2*m;return{yMin:g[0]/r.height,xMin:g[1]/r.width,yMax:(g[0]+y)/r.height,xMax:(g[1]+y)/r.width,height:(g[0]+y)/r.height-g[0]/r.height,width:(g[1]+y)/r.width-g[1]/r.width}}return Za(null==e,r)}(this.cropRegion,a.keypoints,this.keypointIndexByName,t),this.cropRegion=this.filterCropRegion(o),[2,[a]]}}))}))},e.prototype.estimateMultiplePoses=function(e,t,n){return Ur(this,void 0,void 0,(function(){var r,a,s,o,i,u,l,c,p,h,d,f=this;return Wr(this,(function(m){switch(m.label){case 0:return t.width>t.height?(a=this.multiPoseMaxDimension,s=Math.round(this.multiPoseMaxDimension*t.height/t.width),r=I.BHj.resizeBilinear(e,[s,a]),i=a,u=32*Math.ceil(s/32),o=(0,I.vku)(r,[[0,0],[0,u-s],[0,0],[0,0]])):(a=Math.round(this.multiPoseMaxDimension*t.width/t.height),s=this.multiPoseMaxDimension,r=I.BHj.resizeBilinear(e,[s,a]),i=32*Math.ceil(a/32),u=s,o=(0,I.vku)(r,[[0,0],[0,0],[0,i-a],[0,0]])),r.dispose(),e.dispose(),l=(0,I.pju)(o,"int32"),o.dispose(),[4,this.runMultiPersonPoseModel(l)];case 1:for(c=m.sent(),l.dispose(),c=c.filter((function(e){return e.score>=f.minPoseScore})),h=0;h<c.length;++h)for(p=0;p<c[h].keypoints.length;++p)c[h].keypoints[p].y*=u/s,c[h].keypoints[p].x*=i/a;if(this.enableTracking&&(this.tracker.apply(c,n),this.enableSmoothing)){for(h=0;h<c.length;++h)this.keypointFilterMap.has(c[h].id)||this.keypointFilterMap.set(c[h].id,new oa(qa)),c[h].keypoints=this.keypointFilterMap.get(c[h].id).apply(c[h].keypoints,n,1);d=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach((function(e,t){d.has(t)||f.keypointFilterMap.delete(t)}))}return[2,c]}}))}))},e.prototype.filterCropRegion=function(e){if(e){var t=this.cropRegionFilterYMin.apply(e.yMin),n=this.cropRegionFilterXMin.apply(e.xMin),r=this.cropRegionFilterYMax.apply(e.yMax),a=this.cropRegionFilterXMax.apply(e.xMax);return{yMin:t,xMin:n,yMax:r,xMax:a,height:r-t,width:a-n}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},e.prototype.dispose=function(){this.moveNetModel.dispose()},e.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},e.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},e}();function ts(e){return void 0===e&&(e=Xa),Ur(this,void 0,void 0,(function(){var t,n,r,a;return Wr(this,(function(s){switch(s.label){case 0:return t=function(e){var t,n=null==e?Xa:Vr({},e);if(null==n.modelType)n.modelType="SinglePose.Lightning";else if(ja.indexOf(n.modelType)<0)throw new Error("Invalid architecture "+n.modelType+". Should be one of "+ja);if(null==n.enableSmoothing&&(n.enableSmoothing=!0),null!=n.minPoseScore&&(n.minPoseScore<0||n.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(null!=n.multiPoseMaxDimension&&(n.multiPoseMaxDimension%32!=0||n.multiPoseMaxDimension<128||n.multiPoseMaxDimension>512))throw new Error("multiPoseResolution must be a multiple of 32 and between 128 and 512");if("MultiPose.Lightning"===n.modelType&&null==n.enableTracking&&(n.enableTracking=!0),"MultiPose.Lightning"===n.modelType&&!0===n.enableTracking)if(null==n.trackerType&&(n.trackerType=La.BoundingBox),n.trackerType===La.Keypoint)null!=n.trackerConfig?n.trackerConfig=function(e){var t=Ja(Ya,e);return t.keypointTrackerParams=Vr({},Ya.keypointTrackerParams),null!=e.keypointTrackerParams&&(null!=e.keypointTrackerParams.keypointConfidenceThreshold&&(t.keypointTrackerParams.keypointConfidenceThreshold=e.keypointTrackerParams.keypointConfidenceThreshold),null!=e.keypointTrackerParams.keypointFalloff&&(t.keypointTrackerParams.keypointFalloff=e.keypointTrackerParams.keypointFalloff),null!=e.keypointTrackerParams.minNumberOfKeypoints&&(t.keypointTrackerParams.minNumberOfKeypoints=e.keypointTrackerParams.minNumberOfKeypoints)),t}(n.trackerConfig):n.trackerConfig=Ya;else{if(n.trackerType!==La.BoundingBox)throw new Error("Tracker type not supported by MoveNet");null!=n.trackerConfig?n.trackerConfig=(t=n.trackerConfig,Ja(Qa,t)):n.trackerConfig=Qa}return n}(e),r=!0,t.modelUrl?(r=t.modelUrl.indexOf("https://tfhub.dev")>-1,[4,Br(t.modelUrl,{fromTFHub:r})]):[3,2];case 1:return n=s.sent(),[3,4];case 2:return a=void 0,"SinglePose.Lightning"===t.modelType?a="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":"SinglePose.Thunder"===t.modelType?a="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":"MultiPose.Lightning"===t.modelType&&(a="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,Br(a,{fromTFHub:r})];case 3:n=s.sent(),s.label=4;case 4:return"webgl"===(0,I.N_N)()&&(0,I.OBj)().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new es(n,t)]}}))}))}var ns={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},rs=["MobileNetV1","ResNet50"],as={MobileNetV1:[8,16],ResNet50:[16]},ss=[8,16,32],os={MobileNetV1:[.5,.75,1],ResNet50:[1]},is=[1,2,4],us={maxPoses:1,flipHorizontal:!1},ls={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},cs=[-123.15,-115.9,-103.06];function ps(e){return Math.floor(e/2)}var hs=function(){function e(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return e.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},e.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},e.prototype.empty=function(){return-1===this.numberOfElements},e.prototype.size=function(){return this.numberOfElements+1},e.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},e.prototype.max=function(){return this.priorityQueue[0]},e.prototype.swim=function(e){for(;e>0&&this.less(ps(e),e);)this.exchange(e,ps(e)),e=ps(e)},e.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},e.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},e.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},e.prototype.exchange=function(e,t){var n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n},e}();function ds(e,t,n,r,a,s){for(var o=s.shape,i=o[0],u=o[1],l=!0,c=Math.max(n-a,0),p=Math.min(n+a+1,i),h=c;h<p;++h){for(var d=Math.max(r-a,0),f=Math.min(r+a+1,u),m=d;m<f;++m)if(s.get(h,m,e)>t){l=!1;break}if(!l)break}return l}function fs(e){return Ur(this,void 0,void 0,(function(){return Wr(this,(function(t){return[2,Promise.all(e.map((function(e){return e.buffer()})))]}))}))}function ms(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+17)}}function gs(e,t,n){var r=ms(e.heatmapY,e.heatmapX,e.id,n),a=r.y,s=r.x;return{x:e.heatmapX*t+s,y:e.heatmapY*t+a}}function ys(e,t,n,r){var a=n.x,s=n.y;return e.some((function(e){var n,o,i,u,l=e.keypoints;return n=s,o=a,(i=l[r].y-n)*i+(u=l[r].x-o)*u<=t}))}var xs=zr.reduce((function(e,t,n){return e[t]=n,e}),{}),bs=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map((function(e){var t=e[0],n=e[1];return[xs[t],xs[n]]})),vs=bs.map((function(e){return e[1]})),ws=bs.map((function(e){return e[0]}));function ks(e,t,n){return e<t?t:e>n?n:e}function Ss(e,t,n,r){return{y:ks(Math.round(e.y/t),0,n-1),x:ks(Math.round(e.x/t),0,r-1)}}function Ts(e,t){return{x:e.x+t.x,y:e.y+t.y}}function Is(e,t,n,r,a,s,o,i){void 0===i&&(i=2);for(var u=r.shape,l=u[0],c=u[1],p={y:t.y,x:t.x},h=Ts(p,function(e,t,n){var r=n.shape[2]/2;return{y:n.get(t.y,t.x,e),x:n.get(t.y,t.x,r+e)}}(e,Ss(p,s,l,c),o)),d=0;d<i;d++){var f=Ss(h,s,l,c),m=ms(f.y,f.x,n,a);h=Ts({x:f.x*s,y:f.y*s},{x:m.x,y:m.y})}var g=Ss(h,s,l,c),y=r.get(g.y,g.x,n);return{y:h.y,x:h.x,name:zr[n],score:y}}function Ns(e,t,n,r,a,s){var o=t.shape[2],i=vs.length,u=new Array(o),l=e.part,c=e.score,p=gs(l,r,n);u[l.id]={score:c,name:zr[l.id],y:p.y,x:p.x};for(var h=i-1;h>=0;--h){var d=vs[h],f=ws[h];u[d]&&!u[f]&&(u[f]=Is(h,u[d],f,t,n,r,s))}for(h=0;h<i;++h)d=ws[h],f=vs[h],u[d]&&!u[f]&&(u[f]=Is(h,u[d],f,t,n,r,a));return u}function Cs(e,t,n){return n.reduce((function(n,r,a){var s=r.y,o=r.x,i=r.score;return ys(e,t,{y:s,x:o},a)||(n+=i),n}),0)/n.length}function $s(e,t,n,r,a,s,o,i){return void 0===o&&(o=.5),void 0===i&&(i=20),Ur(this,void 0,void 0,(function(){var u,l,c,p,h,d,f,m,g,y,x,b;return Wr(this,(function(v){switch(v.label){case 0:return[4,fs([e,t,n,r])];case 1:for(u=v.sent(),l=u[0],c=u[1],p=u[2],h=u[3],d=[],f=function(e,t,n){for(var r=n.shape,a=r[0],s=r[1],o=r[2],i=new hs(a*s*o,(function(e){return e.score})),u=0;u<a;++u)for(var l=0;l<s;++l)for(var c=0;c<o;++c){var p=n.get(u,l,c);p<e||ds(c,p,u,l,1,n)&&i.enqueue({score:p,part:{heatmapY:u,heatmapX:l,id:c}})}return i}(o,0,l),m=i*i;d.length<s&&!f.empty();)g=f.dequeue(),y=gs(g.part,a,c),ys(d,m,y,g.part.id)||(x=Ns(g,l,c,a,p,h),b=Cs(d,m,x),d.push({keypoints:x,score:b}));return[2,d]}}))}))}function Es(e,t,n){return(0,I.lub)((function(){var r=function(e,t){for(var n=[],r=0;r<zr.length;r++){var a=_s(e.get(r,0).valueOf(),e.get(r,1).valueOf(),r,t),s=a.x,o=a.y;n.push(o),n.push(s)}return(0,I.odF)(n,[zr.length,2])}(e,n);return(0,I.IHx)((0,I.pju)((0,I.dC7)(e.toTensor(),(0,I.iD$)(t,"int32")),"float32"),r)}))}function _s(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+zr.length)}}function Rs(e,t,n){return Ur(this,void 0,void 0,(function(){var r,a,s,o,i,u,l,c,p,h;return Wr(this,(function(d){switch(d.label){case 0:return r=0,a=function(e){var t=e.shape,n=t[0],r=t[1],a=t[2];return(0,I.lub)((function(){var t,s,o=(0,I.XLQ)(e,[n*r,a]),i=(0,I.NqF)(o,0),u=(0,I.dt4)((0,I.hiC)(i,(0,I.iD$)(r,"int32")),1),l=(0,I.dt4)((t=i,s=r,(0,I.lub)((function(){var e=(0,I.hiC)(t,(0,I.iD$)(s,"int32"));return(0,I.luU)(t,(0,I.dC7)(e,(0,I.iD$)(s,"int32")))}))),1);return(0,I.zoF)([u,l],1)}))}(e),[4,Promise.all([e.buffer(),t.buffer(),a.buffer()])];case 1:return s=d.sent(),o=s[0],i=s[1],u=s[2],[4,(l=Es(u,n,i)).buffer()];case 2:return c=d.sent(),p=Array.from(function(e,t){for(var n=t.shape[0],r=new Float32Array(n),a=0;a<n;a++){var s=t.get(a,0),o=t.get(a,1);r[a]=e.get(s,o,a)}return r}(o,u)),h=p.map((function(e,t){return r+=e,{y:c.get(t,0),x:c.get(t,1),score:e,name:zr[t]}})),a.dispose(),l.dispose(),[2,{keypoints:h,score:r/h.length}]}}))}))}function As(e,t){return(e-1)%t==0}var Os="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",Ds="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function Fs(e,t){return function(e,t){return(e-1)%t==0}(e,t)?e:Math.floor(e/t)*t+1}var Ms=function(){function e(e,t){this.posenetModel=e;var n=this.posenetModel.inputs[0].shape;I.D5U.assert(-1===n[1]&&-1===n[2],(function(){return"Input shape ["+n[1]+", "+n[2]+"] must both be equal to or -1"}));var r,a,s=(r=t.inputResolution,a=t.outputStride,{height:Fs(r.height,a),width:Fs(r.width,a)});!function(e){I.D5U.assert(ss.indexOf(e)>=0,(function(){return"outputStride of "+e+" is invalid. It must be either 8 or 16."}))}(t.outputStride),function(e,t){I.D5U.assert(As(e.height,t),(function(){return"height of "+e.height+" is invalid for output stride "+t+"."})),I.D5U.assert(As(e.width,t),(function(){return"width of "+e.width+" is invalid for output stride "+t+"."}))}(s,t.outputStride),this.inputResolution=s,this.outputStride=t.outputStride,this.architecture=t.architecture}return e.prototype.estimatePoses=function(e,t){return void 0===t&&(t=us),Ur(this,void 0,void 0,(function(){var n,r,a,s,o,i,u,l,c,p,h,d,f,m,g;return Wr(this,(function(y){switch(y.label){case 0:return n=function(e){var t=e;if(null==t.maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw new Error("Invalid maxPoses "+t.maxPoses+". Should be > 0.");if(t.maxPoses>1){if((t=Vr({},ls,t)).scoreThreshold<0||t.scoreThreshold>1)throw new Error("Invalid scoreThreshold "+t.scoreThreshold+". Should be in range [0.0, 1.0]");if(t.nmsRadius<=0)throw new Error("Invalid nmsRadius "+t.nmsRadius+".")}return t}(t),null==e?[2,[]]:(this.maxPoses=n.maxPoses,r=na(e,{inputResolution:this.inputResolution,keepAspectRatio:!0}),a=r.imageTensor,s=r.padding,o="ResNet50"===this.architecture?(0,I.IHx)(a,cs):pa(a,[-1,1]),i=this.posenetModel.predict(o),"ResNet50"===this.architecture?(u=(0,I.L9e)(i[2],[0]),l=(0,I.L9e)(i[3],[0]),c=(0,I.L9e)(i[0],[0]),p=(0,I.L9e)(i[1],[0])):(u=(0,I.L9e)(i[0],[0]),l=(0,I.L9e)(i[1],[0]),c=(0,I.L9e)(i[2],[0]),p=(0,I.L9e)(i[3],[0])),h=(0,I.XD2)(l),1!==this.maxPoses?[3,2]:[4,Rs(h,u,this.outputStride)]);case 1:return f=y.sent(),d=[f],[3,4];case 2:return[4,$s(h,u,c,p,this.outputStride,this.maxPoses,n.scoreThreshold,n.nmsRadius)];case 3:d=y.sent(),y.label=4;case 4:return m=Zr(e),g=function(e,t,n,r){var a=t.height,s=t.width,o=a/(n.height*(1-r.top-r.bottom)),i=s/(n.width*(1-r.left-r.right)),u=-r.top*n.height,l=-r.left*n.width;if(1===i&&1===o&&0===u&&0===l)return e;for(var c=0,p=e;c<p.length;c++)for(var h=0,d=p[c].keypoints;h<d.length;h++){var f=d[h];f.x=(f.x+l)*i,f.y=(f.y+u)*o}return e}(d,m,this.inputResolution,s),n.flipHorizontal&&(g=function(e,t){for(var n=0,r=e;n<r.length;n++)for(var a=0,s=r[n].keypoints;a<s.length;a++){var o=s[a];o.x=t.width-1-o.x}return e}(g,m)),a.dispose(),o.dispose(),(0,I.B90)(i),u.dispose(),l.dispose(),c.dispose(),p.dispose(),h.dispose(),[2,g]}}))}))},e.prototype.dispose=function(){this.posenetModel.dispose()},e.prototype.reset=function(){},e}();function Bs(e){return void 0===e&&(e=ns),Ur(this,void 0,void 0,(function(){var t,n,r,a,s;return Wr(this,(function(o){switch(o.label){case 0:return"ResNet50"!==(t=function(e){var t=e||ns;if(null==t.architecture&&(t.architecture="MobileNetV1"),rs.indexOf(t.architecture)<0)throw new Error("Invalid architecture "+t.architecture+". Should be one of "+rs);if(null==t.inputResolution&&(t.inputResolution={height:257,width:257}),null==t.outputStride&&(t.outputStride=16),as[t.architecture].indexOf(t.outputStride)<0)throw new Error("Invalid outputStride "+t.outputStride+". Should be one of "+as[t.architecture]+" for architecture "+t.architecture+".");if(null==t.multiplier&&(t.multiplier=1),os[t.architecture].indexOf(t.multiplier)<0)throw new Error("Invalid multiplier "+t.multiplier+". Should be one of "+os[t.architecture]+" for architecture "+t.architecture+".");if(null==t.quantBytes&&(t.quantBytes=4),is.indexOf(t.quantBytes)<0)throw new Error("Invalid quantBytes "+t.quantBytes+". Should be one of "+is+" for architecture "+t.architecture+".");if("MobileNetV1"===t.architecture&&32===t.outputStride&&1!==t.multiplier)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return t}(e)).architecture?[3,2]:(i=t.outputStride,u=t.quantBytes,l="model-stride"+i+".json",n=4===u?Ds+"float/"+l:Ds+"quant"+u+"/"+l,[4,Br(t.modelUrl||n)]);case 1:return r=o.sent(),[2,new Ms(r,t)];case 2:return a=function(e,t,n){var r={1:"100",.75:"075",.5:"050"},a="model-stride"+e+".json";return 4===n?Os+"float/"+r[t]+"/"+a:Os+"quant"+n+"/"+r[t]+"/"+a}(t.outputStride,t.multiplier,t.quantBytes),[4,Br(t.modelUrl||a)];case 3:return s=o.sent(),[2,new Ms(s,t)]}var i,u,l}))}))}function Ps(e,t){return Ur(this,void 0,void 0,(function(){var n,r;return Wr(this,(function(a){switch(e){case Va.PoseNet:return[2,Bs(t)];case Va.BlazePose:if(r=void 0,null!=(n=t)){if("tfjs"===n.runtime)return[2,Pa(t)];if("mediapipe"===n.runtime)return[2,Qr(t)];r=n.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+r);case Va.MoveNet:return[2,ts(t)];default:throw new Error(e+" is not a supported model name.")}}))}))}},9168:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},s={};function o(e,t){var n,r,o;return t?(o=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=u(e,(0|e)<0?-1:0,!0),o&&(s[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=u(e,e<0?-1:0,!1),o&&(a[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=d)return k}else{if(e<=-f)return S;if(e+1>=f)return w}return e<0?i(-e,t).neg():u(e%h|0,e/h|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=o,n.fromNumber=i,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var a=i(l(n,8)),s=g,o=0;o<e.length;o+=8){var u=Math.min(8,e.length-o),p=parseInt(e.substring(o,o+u),n);if(u<8){var h=i(l(n,u));s=s.mul(h).add(i(p))}else s=(s=s.mul(a)).add(i(p))}return s.unsigned=t,s}function p(e,t){return"number"==typeof e?i(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=p;var h=4294967296,d=h*h,f=d/2,m=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var x=o(1);n.ONE=x;var b=o(1,!0);n.UONE=b;var v=o(-1);n.NEG_ONE=v;var w=u(-1,2147483647,!1);n.MAX_VALUE=w;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var S=u(0,-2147483648,!1);n.MIN_VALUE=S;var T=n.prototype;T.toInt=function(){return this.unsigned?this.low>>>0:this.low},T.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},T.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=i(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=i(l(e,6),this.unsigned),s=this,o="";;){var u=s.div(a),c=(s.sub(u.mul(a)).toInt()>>>0).toString(e);if((s=u).isZero())return c+o;for(;c.length<6;)c="0"+c;o=""+c+o}},T.getHighBits=function(){return this.high},T.getHighBitsUnsigned=function(){return this.high>>>0},T.getLowBits=function(){return this.low},T.getLowBitsUnsigned=function(){return this.low>>>0},T.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},T.isZero=function(){return 0===this.high&&0===this.low},T.eqz=T.isZero,T.isNegative=function(){return!this.unsigned&&this.high<0},T.isPositive=function(){return this.unsigned||this.high>=0},T.isOdd=function(){return 1==(1&this.low)},T.isEven=function(){return 0==(1&this.low)},T.equals=function(e){return r(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},T.eq=T.equals,T.notEquals=function(e){return!this.eq(e)},T.neq=T.notEquals,T.ne=T.notEquals,T.lessThan=function(e){return this.comp(e)<0},T.lt=T.lessThan,T.lessThanOrEqual=function(e){return this.comp(e)<=0},T.lte=T.lessThanOrEqual,T.le=T.lessThanOrEqual,T.greaterThan=function(e){return this.comp(e)>0},T.gt=T.greaterThan,T.greaterThanOrEqual=function(e){return this.comp(e)>=0},T.gte=T.greaterThanOrEqual,T.ge=T.greaterThanOrEqual,T.compare=function(e){if(r(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},T.comp=T.compare,T.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(x)},T.neg=T.negate,T.add=function(e){r(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,o=e.high>>>16,i=65535&e.high,l=e.low>>>16,c=0,h=0,d=0,f=0;return d+=(f+=s+(65535&e.low))>>>16,h+=(d+=a+l)>>>16,c+=(h+=n+i)>>>16,c+=t+o,u((d&=65535)<<16|(f&=65535),(c&=65535)<<16|(h&=65535),this.unsigned)},T.subtract=function(e){return r(e)||(e=p(e)),this.add(e.neg())},T.sub=T.subtract,T.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=p(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,s=this.low>>>16,o=65535&this.low,l=e.high>>>16,c=65535&e.high,h=e.low>>>16,d=65535&e.low,f=0,y=0,x=0,b=0;return x+=(b+=o*d)>>>16,y+=(x+=s*d)>>>16,x&=65535,y+=(x+=o*h)>>>16,f+=(y+=a*d)>>>16,y&=65535,f+=(y+=s*h)>>>16,y&=65535,f+=(y+=o*c)>>>16,f+=n*d+a*h+s*c+o*l,u((x&=65535)<<16|(b&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},T.mul=T.multiply,T.divide=function(e){if(r(e)||(e=p(e)),e.isZero())throw Error("division by zero");var n,a,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return b;s=y}else{if(this.eq(S))return e.eq(x)||e.eq(v)?S:e.eq(S)?x:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?x:v:(a=this.sub(e.mul(n)),s=n.add(a.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),c=o<=48?1:l(2,o-48),h=i(n),d=h.mul(e);d.isNegative()||d.gt(a);)d=(h=i(n-=c,this.unsigned)).mul(e);h.isZero()&&(h=x),s=s.add(h),a=a.sub(d)}return s},T.div=T.divide,T.modulo=function(e){return r(e)||(e=p(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},T.mod=T.modulo,T.rem=T.modulo,T.not=function(){return u(~this.low,~this.high,this.unsigned)},T.and=function(e){return r(e)||(e=p(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},T.or=function(e){return r(e)||(e=p(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},T.xor=function(e){return r(e)||(e=p(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},T.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},T.shl=T.shiftLeft,T.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},T.shr=T.shiftRight,T.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},T.shru=T.shiftRightUnsigned,T.shr_u=T.shiftRightUnsigned,T.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},T.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},T.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},T.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},T.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},4224:e=>{var t,n,r=e.exports={};function a(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function o(e){if(t===setTimeout)return setTimeout(e,0);if((t===a||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:a}catch(e){t=a}try{n="function"==typeof clearTimeout?clearTimeout:s}catch(e){n=s}}();var i,u=[],l=!1,c=-1;function p(){l&&i&&(l=!1,i.length?u=i.concat(u):c=-1,u.length&&h())}function h(){if(!l){var e=o(p);l=!0;for(var t=u.length;t;){for(i=u,u=[];++c<t;)i&&i[c].run();c=-1,t=u.length}i=null,l=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===s||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function d(e,t){this.fun=e,this.array=t}function f(){}r.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];u.push(new d(e,t)),1!==u.length||l||o(h)},d.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=f,r.addListener=f,r.once=f,r.off=f,r.removeListener=f,r.removeAllListeners=f,r.emit=f,r.prependListener=f,r.prependOnceListener=f,r.listeners=function(e){return[]},r.binding=function(e){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(e){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},597:(e,t,n)=>{var r=n(4126),a=n(6786),s=n(6734),o=n(3378),i=n(1733),u=n(2514),l=n(8272);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=o,l.xor4096=i,l.tychei=u,e.exports=l},4126:function(e,t,n){var r;!function(e,a,s){function o(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new o(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},2514:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},6786:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},1733:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(o=o+1640531527|0,a=0==(n=i[127&s]^=r+o)?a+1:0);for(a>=128&&(i[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;e.w=o,e.X=i,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},3378:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},6734:function(e,t,n){var r;!function(e,a,s){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new o(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},8272:(e,t,n)=>{var r;!function(a,s){var o,i=this,u=256,l=s.pow(u,6),c=s.pow(2,52),p=2*c,h=255;function d(e,t,n){var r=[],h=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(i.crypto||i.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=i.navigator,n=t&&t.plugins;return[+new Date,i,n,i.screen,x(a)]}}():e,3),r),d=new f(r),b=function(){for(var e=d.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=d.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|d.g(4)},b.quick=function(){return d.g(4)/4294967296},b.double=b,y(x(d.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,d),e.state=function(){return m(d,{})}),n?(s.random=e,t):e})(b,h,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<u;)o[a]=a++;for(a=0;a<u;a++)o[a]=o[s=h&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=h&a+1],n=n*u+o[h&(o[a]=o[s=h&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=d,y(s.random(),a),e.exports){e.exports=d;try{o=n(6226)}catch(e){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}([],Math)}}]);